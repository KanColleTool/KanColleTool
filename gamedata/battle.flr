movie 'battle.swf' {
// flash 14, total frames: 901, frame rate: 30 fps, 800x480 px, compressed

  movieClip 41 nodatachar {
  }

  movieClip 44 nodatabanner {
  }

  movieClip 48 soundHolder {
  }

  frame 1 {
    function isEvent() {
      return _level1.questpage == 24 && _level1.npc_battle;
    }

    function airbaseOffset(id) {
      if (id == 556) {
        return 5;
      } else {
        return 0;
      }
    }

    function isVoiceBoss(shipID, masterID) {
      if (shipID > 2) {
        return false;
      }
      var v1 = 0;
      while (v1 < eventbossids.length) {
        if (eventbossids[v1] == masterID) {
          return true;
        }
        ++v1;
      }
      return false;
    }

    function tstrace(msg) {}

    function playVoice(shipID, sndType, playChance) {
      if (_level1.voiceVolume > 0) {
        sndTypeChoice = sndType[0];
        if (sndType[1] != undefined && sndType[1] != NaN) {
          j = 0;
          while (j < 7) {
            if (shipID == ship_kf[j + 1] - 1) {
              break;
            }
            ++j;
          }
          if (_level2.attackVoicesFlag[j]) {
            sndTypeChoice = sndType[1];
          } else {
            sndTypeChoice = sndType[0];
          }
          _level2.attackVoicesFlag[j] = !_level2.attackVoicesFlag[j];
        }
        if (sndTypeChoice == undefined || sndTypeChoice == NaN) {
          if (sndType[0] == undefined || sndType[0] == NaN) {
            sndTypeChoice = sndType;
          } else {
            sndTypeChoice = sndType[0];
          }
        }
        _level2.voice.vstr[(_level2.voice.curCh + _level2.voice.queued) % _level2.voice.totCh] = 'sound/kc' + shipID + '/' + sndTypeChoice + '.mp3';
        ++_level2.voice.queued;
        _level2.voice.gotoAndPlay('play');
      }
    }

    function playVoiceE(e_shipID, e_shipMasterID, soundIndexes, preVoiceIndex) {
      if (_level1.voiceVolume > 0) {
        _level2.tstrace('[playVoiceE] e_shipID:' + e_shipID + ' e_shipMasterID:' + e_shipMasterID + ' soundIndexes:' + soundIndexes);
        _level2.tstrace('preVoiceIndex:' + preVoiceIndex);
        soundIndex = soundIndexes[0];
        soundIndexes_ = [];
        i = 0;
        while (i < soundIndexes.length) {
          if (soundIndexes[i] != preVoiceIndex) {
            soundIndexes_.push(soundIndexes[i]);
          }
          ++i;
        }
        var v2 = Math.random();
        i = 0;
        while (i < soundIndexes_.length) {
          if (v2 < (1 / soundIndexes_.length) * (i + 1)) {
            soundIndex = soundIndexes_[i];
            break;
          }
          ++i;
        }
        _level2.voice.vstr[(_level2.voice.curCh + _level2.voice.queued) % _level2.voice.totCh] = 'sound/kc' + e_shipMasterID + '/' + soundIndex + '.mp3';
        ++_level2.voice.queued;
        _level2.voice.gotoAndPlay('play');
        return soundIndex;
      }
    }

    function playVoiceE_Atk(e_shipID, e_shipMasterID) {
      if (_level1.voiceVolume > 0) {
        _level2.tstrace('playVoiceE_Atk e_shipID:' + e_shipID + ' e_shipMasterID:' + e_shipMasterID);
        _level2.tstrace('_level1.npc_battle:' + _level1.npc_battle + ' _level1.questpage:' + _level1.questpage + ' _level1.mapid:' + _level1.mapid);
        var v2 = [];
        if (_level1.npc_battle) {
          if (_level2.isVoiceBoss(e_shipID, e_shipMasterID)) {
            if (_level2.isEvent()) {
              v2 = [1, 3];
            }
          }
        }
        if (v2.length > 0) {
          var v3 = _level2.enemyAttackVoiceHolder[e_shipID];
          var v4 = _level2.playVoiceE(e_shipID, e_shipMasterID, v2, v3);
          _level2.enemyAttackVoiceHolder[e_shipID] = v4;
          _level2.tstrace('敵攻撃音声再生有り');
        } else {
          _level2.tstrace('敵攻撃音声再生無し');
        }
      }
    }

    function playVoiceE_Def(e_shipID, e_shipMasterID) {
      if (_level1.voiceVolume > 0) {
        _level2.tstrace('playVoiceE_Def e_shipID:' + e_shipID + ' e_shipMasterID:' + e_shipMasterID);
        _level2.tstrace('_level1.npc_battle:' + _level1.npc_battle + ' _level1.questpage:' + _level1.questpage + ' _level1.mapid:' + _level1.mapid);
        var v2 = [];
        if (_level1.npc_battle) {
          if (_level2.isVoiceBoss(e_shipID, e_shipMasterID)) {
            if (_level2.isEvent()) {
              v2 = [7, 8];
            }
          }
        }
        if (v2.length > 0) {
          var v3 = _level2.enemyDamageVoiceHolder[e_shipID];
          var v4 = _level2.playVoiceE(e_shipID, e_shipMasterID, v2, v3);
          _level2.enemyDamageVoiceHolder[e_shipID] = v4;
          _level2.tstrace('敵攻撃音声再生有り');
        } else {
          _level2.tstrace('敵攻撃音声再生無し');
        }
      }
    }

    function playEventBGM() {
      if (_level2.bossmap) {
        _level2.playBGM('winter_event_boss', true, _level1.bgmVolume);
      } else {
        _level2.playBGM('winter_event', true, _level1.bgmVolume);
      }
    }

    function playBGM(bgmName, loops, vol, fadeTime) {
      if (bgmName != '') {
        _level2.bgm.sname = bgmName;
      }
      _level2.lastBGMName = bgmName;
      if (_level2.bgm.sname == '1_battle1_1.mp3' || _level2.bgm.sname == '2_battle2_11.mp3' || _level2.bgm.sname == 'e-bt.mp3') {
        _level2.bgm.ext = true;
      } else {
        _level2.bgm.ext = false;
      }
      _level2.bgm.sloop = loops;
      if (_level2.bgm.ext) {
        _level2.bgm.fvol = 100;
      } else {
        _level2.bgm.fvol = vol;
      }
      if (_level2.bgm.ext) {
        _level2.bgm.ivol = _level2.bgm.s2.getVolume();
      } else {
        _level2.bgm.ivol = _level2.bgm.s.getVolume();
      }
      _level2.bgm.spos = 0;
      if (fadeTime == undefined || fadeTime == NaN || fadeTime == 0) {
        _level2.bgm.ftime = 0;
        if (_level2.bgm.ext) {
          _level2.bgm.fvol = 100;
        } else {
          _level2.bgm.fvol = vol;
        }
        _level2.bgm.gotoAndPlay('play');
      } else {
        _level2.bgm.ftime = fadeTime;
        _level2.bgm.gotoAndPlay('fadeloop');
      }
    }

    function playBGMAtPos(bgmName, loops, vol, pos) {
      if (bgmName != '') {
        _level2.bgm.sname = bgmName;
      }
      _level2.lastBGMName = bgmName;
      if (_level2.bgm.sname == '1_battle1_1.mp3' || _level2.bgm.sname == '2_battle2_11.mp3' || _level2.bgm.sname == 'e-bt.mp3') {
        _level2.bgm.ext = true;
      } else {
        _level2.bgm.ext = false;
      }
      _level2.bgm.sloop = loops;
      if (_level2.bgm.ext) {
        _level2.bgm.fvol = 100;
      } else {
        _level2.bgm.fvol = vol;
      }
      _level2.bgm.ivol = _level2.bgm.s.getVolume();
      _level2.bgm.spos = pos / 1000;
      _level2.bgm.ftime = 0;
      _level2.bgm.gotoAndPlay('play');
    }

    function playSFX(sfxName) {
      _level2.sfx.sstr[(_level2.sfx.curCh + _level2.sfx.queued) % _level2.sfx.totCh] = sfxName;
      ++_level2.sfx.queued;
      _level2.sfx.gotoAndPlay('play');
    }

    function mapHPGaugeUpdate(e_shipID, dmg) {
      _level2.tstrace('mapHPGaugeUpdate：' + _level2.mapHPData);
      if (_level2.mapHPData == null) {
        return undefined;
      }
      if (_level2.bossmap && e_shipID == 1) {
        _level2.tstrace('マップHP減少：' + mapHPData.mapHpNow + '/' + mapHPData.mapHpMax);
        _level2.mapHPData.mapHpNow -= dmg * _level2.mapHPData.mapHpDmg;
        _level2.mapHPData.mapHpNow = Math.max(_level2.mapHPData.mapHpNow, 0);
        _level2.tstrace('ダメージ：' + dmg + ' -> ' + mapHPData.mapHpNow + '/' + mapHPData.mapHpMax);
      }
    }

    function timeStamp() {
      spl = ((getTimer() * 0.001).toString()).split('.');
      if (spl[0] != undefined) {
        if (spl[1] != undefined) {
          spl[1] += '000';
          return spl[0] + '.' + spl[1].substr(0, 3);
        }
        return spl[0] + '.000';
      }
      return '0.000';
    }

    stop();
    _global.BATTLE = this;
    eventbossids = [582, 583, 584, 585, 586, 588, 589, 590, 591, 592];
    eventbossvoicelengths = [0, 12000, 0, 8000, 8000, 0, 12000, 0, 8000, 8000];
    _level2.lastBGMName = '';
    debuglines = 0;
    _level2.tstrace('Scene: battle');
  }

  movieClip 1970 __Packages.JSON {

    #initclip
      if (!_global.JSON) {
        var v1 = function () {};

        _global.JSON = v1;
        var v2 = v1.prototype;
        v1.stringify = function (arg) {
          var v3;
          var v2;
          var v6;
          var v1 = '';
          var v4;
          switch (typeof arg) {
              return 'null';
            case 'object':
              if (arg) {
                if (arg instanceof Array) {
                  v2 = 0;
                  while (v2 < arg.length) {
                    v4 = JSON.stringify(arg[v2]);
                    if (v1) {
                      v1 += ',';
                    }
                    v1 += v4;
                    ++v2;
                  }
                  return '[' + v1 + ']';
                } else {
                  if (typeof arg.toString != 'undefined') {
                    for (v2 in arg) {
                      v4 = arg[v2];
                      if (typeof v4 != 'undefined' && typeof v4 != 'function') {
                        v4 = JSON.stringify(v4);
                        if (v1) {
                          v1 += ',';
                        }
                        v1 += JSON.stringify(v2) + ':' + v4;
                      }
                    }
                    return '{' + v1 + '}';
                  }
                }
              }
              return 'null';
            case 'number':
              return isFinite(arg) ? String(arg) : 'null';
            case 'string':
              v6 = arg.length;
              v1 = '"';
              v2 = 0;
              while (v2 < v6) {
                v3 = arg.charAt(v2);
                if (v3 >= ' ') {
                  if (v3 == '\\' || v3 == '"') {
                    v1 += '\\';
                  }
                  v1 += v3;
                } else {
                  switch (v3) {
                    case '\b':
                      v1 += '\\b';
                      break;
                    case '\f':
                      v1 += '\\f';
                      break;
                    case '\n':
                      v1 += '\\n';
                      break;
                    case '\r':
                      v1 += '\\r';
                      break;
                    case '\t':
                      v1 += '\\t';
                      break;
                    default:
                      v3 = v3.charCodeAt();
                      v1 += '\\u00' + (Math.floor(v3 / 16)).toString(16) + (v3 % 16).toString(16);
                  }
                }
                v2 += 1;
              }
              return v1 + '"';
            case 'boolean':
              return String(arg);
          }
          return 'null';
        };

        v2.error = function (m) {
          throw {'name': 'JSONError', 'message': m, 'at': this.at - 1, 'text': this.text};
        };

        v2.next = function () {
          this.ch = this.text.charAt(this.at);
          this.at += 1;
          return this.ch;
        };

        v2.white = function () {
          while (this.ch) {
            if (this.ch <= ' ') {
              this.next();
            } else {
              if (this.ch == '/') {
                switch (this.next()) {
                  case '/':
                    for (;;) {
                      if (!(this.next() && this.ch != '\n' && this.ch != '\r')) break;
                    }
                    break;
                  case '*':
                    this.next();
                    for (;;) {
                      if (this.ch) {
                        if (this.ch == '*') {
                          if (this.next() == '/') {
                            this.next();
                            break;
                          }
                        } else {
                          this.next();
                        }
                        continue;
                      }
                      this.error('Unterminated comment');
                    }
                    break;
                  default:
                    this.error('Syntax error');
                }
              } else {
                break;
              }
            }
          }
        };

        v2.str = function () {
          var v5;
          var v2 = '';
          var v4;
          var v3;
          var v6 = false;
          if (this.ch == '"') {
            while (this.next()) {
              if (this.ch == '"') {
                this.next();
                return v2;
              } else {
                if (this.ch == '\\') {
                  switch (this.next()) {
                    case 'b':
                      v2 += '\b';
                      break;
                    case 'f':
                      v2 += '\f';
                      break;
                    case 'n':
                      v2 += '\n';
                      break;
                    case 'r':
                      v2 += '\r';
                      break;
                    case 't':
                      v2 += '\t';
                      break;
                    case 'u':
                      v3 = 0;
                      v5 = 0;
                      while (v5 < 4) {
                        v4 = parseInt(this.next(), 16);
                        if (!isFinite(v4)) {
                          v6 = true;
                          break;
                        }
                        v3 = v3 * 16 + v4;
                        v5 += 1;
                      }
                      if (v6) {
                        v6 = false;
                      } else {
                        v2 += String.fromCharCode(v3);
                        break;
                      default:
                        v2 += this.ch;
                      }
                  }
                } else {
                  v2 += this.ch;
                }
              }
            }
          } else {
            while (!false) {
              if ('a' <= this.ch && this.ch <= 'z' || 'A' <= this.ch && this.ch <= 'Z' || this.ch == '_' || '0' <= this.ch && this.ch <= '9' || this.ch > String.fromCharCode(127)) {
                v2 += this.ch;
                this.next();
              } else {
                break;
              }
            }
            if (v2.length > 0) {
              return v2;
            }
          }
          this.error('Bad string');
        };

        v2.arr = function () {
          var v2 = [];
          if (this.ch == '[') {
            this.next();
            this.white();
            if (this.ch == ']') {
              this.next();
              return v2;
            }
            while (this.ch) {
              v2.push(this.value());
              this.white();
              if (this.ch == ']') {
                this.next();
                return v2;
              } else {
                if (this.ch != ',') {
                  break;
                }
              }
              this.next();
              this.white();
            }
          }
          this.error('Bad array');
        };

        v2.obj = function () {
          var v3;
          var v2 = {};
          if (this.ch == '{') {
            this.next();
            this.white();
            if (this.ch == '}') {
              this.next();
              return v2;
            }
            while (this.ch) {
              v3 = this.str();
              this.white();
              if (this.ch != ':') {
                break;
              }
              this.next();
              v2[v3] = this.value();
              this.white();
              if (this.ch == '}') {
                this.next();
                return v2;
              } else {
                if (this.ch != ',') {
                  break;
                }
              }
              this.next();
              this.white();
            }
          }
          this.error('Bad object');
        };

        v2.num = function () {
          var v2 = '';
          var v3;
          if (this.ch == '-') {
            v2 = '-';
            this.next();
          }
          for (;;) {
            if (!(this.ch >= '0' && this.ch <= '9')) break;
            v2 += this.ch;
            this.next();
          }
          if (this.ch == '.') {
            v2 += '.';
            this.next();
            for (;;) {
              if (!(this.ch >= '0' && this.ch <= '9')) break;
              v2 += this.ch;
              this.next();
            }
          }
          if (this.ch == 'e' || this.ch == 'E') {
            v2 += this.ch;
            this.next();
            if (this.ch == '-' || this.ch == '+') {
              v2 += this.ch;
              this.next();
            }
            for (;;) {
              if (!(this.ch >= '0' && this.ch <= '9')) break;
              v2 += this.ch;
              this.next();
            }
          }
          v3 = Number(v2);
          if (!isFinite(v3)) {
            this.error('Bad number');
          }
          return v3;
        };

        v2.word = function () {
          switch (this.ch) {
            case 't':
              if (this.next() == 'r' && this.next() == 'u' && this.next() == 'e') {
                this.next();
                return true;
              }
              break;
            case 'f':
              if (this.next() == 'a' && this.next() == 'l' && this.next() == 's' && this.next() == 'e') {
                this.next();
                return false;
              }
              break;
            case 'n':
              if (this.next() == 'u' && this.next() == 'l' && this.next() == 'l') {
                this.next();
                return null;
              }
          }
          this.error('Syntax error');
        };

        v2.value = function () {
          this.white();
          switch (this.ch) {
            case '{':
              return this.obj();
            case '[':
              return this.arr();
            case '"':
              return this.str();
            case '-':
              return this.num();
          }
          return (this.ch >= '0' && this.ch <= '9') ? this.num() : this.word();
        };

        v2._parse = function (json_txt) {
          this.at = 0;
          this.ch = ' ';
          this.text = json_txt;
          return this.value();
        };

        v1.parse = function (text) {
          var v1 = new JSON();
          return v1._parse(text);
        };

        ASSetPropFlags(_global.JSON.prototype, null, 1);
      }
    #endinitclip
  }

  frame 2 {
    _level2.tstrace('Frame: battle_main');
    _level2.yasen_special = false;
    _level2.yasen_reversal = false;
    _level2.tstrace('_level1.cutin.mapInfo["api_color_no"] = ' + _level1.cutin.mapInfo.api_color_no);
    if (_level1.cutin.mapInfo.api_color_no == 6) {
      _level2.yasen_special = true;
      gotoAndPlay('yasen');
    } else {
      if (_level1.cutin.mapInfo.api_color_no == 7 || _level1.cutin.mapInfo.api_color_no == 8) {
        _level2.yasen_reversal = true;
        gotoAndPlay('yasen');
      } else {
        play();
        shutters_sp._visible = false;
      }
    }
    _level2.bossmap = false;
    if (_level1.cutin.mapInfo.api_event_id == 5 || _level1.cutin.mapInfo.api_event_id == 8) {
      _level2.bossmap = true;
    }
    _level2.tstrace('_level2.yasen_special = ' + _level2.yasen_special);
    _level2.tstrace('_level2.yasen_reversal = ' + _level2.yasen_reversal);
    _level2.tstrace('_level2.bossmap = ' + _level2.bossmap);
    _level0.allbg.createEmptyMovieClip('battlebgm', _level0.allbg.getNextHighestDepth());
  }

  movieClip 57  {
  }

  movieClip 58  {

    frame 1 {
      stop();
    }

    frame 29 {
      _level2.playSFX('frame_open.mp3');
    }

    frame 37 {
    }

    frame 38 {
      stop();
    }
  }

  movieClip 63  {

    frame 1 {
      stop();
    }

    frame 2 {
      _level2.playSFX('frame_open.mp3');
      play();
    }

    frame 17 {
      _parent.play();
      stop();
    }
  }

  movieClip 65  {
  }

  instance of movieClip 65  {

    onClipEvent (load) {
      useHandCursor = false;
    }

    onClipEvent (press) {
    }
  }

  frame 3 {
    stop();
    eSlot = new Array();
    _level2.SCENE_BATTLE = 0;
    _level2.SCENE_YASEN = 1;
    _level2.SCENE_RESULT = 2;
    _level2.scene = _level2.SCENE_BATTLE;
    _level2.CUTIN_NUM = 4;
  }
  
  // unknown tag 88 length 85

  movieClip 72  {
  }

  movieClip 73  {
  }

  movieClip 76  {
  }

  movieClip 79  {
  }

  movieClip 82  {
  }

  movieClip 85  {
  }

  movieClip 88  {
  }

  movieClip 89  {

    frame 1 {
      play();
    }

    frame 40 {
      gotoAndPlay(1);
    }
  }

  movieClip 90  {

    frame 1 {
      stop();
    }

    frame 2 {
      i = 0;
      _level2.shieldcurs = 100;
      _level2.shieldnexts = 100;
      _level2.shieldcura = 50;
      _level2.shieldnexta = 50;
      shield.gotoAndPlay(Math.ceil(Math.random() * 39));
    }

    frame 3 {
      if (i % 5 == 0) {
        _level2.shieldcurs = _level2.shieldnexts;
        _level2.shieldcura = _level2.shieldnexta;
        _level2.shieldnexts = Math.random() * 10 + 90;
        _level2.shieldnexta = Math.random() * 20 + 40;
      }
    }

    frame 4 {
      ++i;
      if (i < 30) {
        shield._xscale += (_level2.shieldnexts - _level2.shieldcurs) / 5;
        shield._yscale += (_level2.shieldnexts - _level2.shieldcurs) / 5;
        shield._alpha += (_level2.shieldnexta - _level2.shieldcura) / 5;
        gotoAndPlay('loop');
      }
    }

    frame 18 {
      _x = 1200;
      _y = -200;
      gotoAndStop(1);
    }
  }

  movieClip 93  {

    frame 1 {
      var sname = '';
      var sloop = true;
      var ftime = 0;
      var fvol = 100;
      var ivol = 0;
      var atpos = false;
      var spos = 0;
      var ext = false;
      stop();
    }

    frame 2 {
      _level2.tstrace('_level1.bgmFlag = ' + _level1.bgmFlag);
      _level2.tstrace('_level1.bgmVolume = ' + _level1.bgmVolume);
      if (_level1.bgmFlag && _level1.bgmVolume > 0) {
        _level2.tstrace('Playing BGM ' + sname + ' from ' + spos);
        if (!ext) {
          var s = new Sound(this);
          s.attachSound(sname);
          s.setVolume(ivol);
          if (sloop) {
            s.onSoundComplete = function () {
              s.stop();
              s.start();
              _level2.tstrace('Played one loop of BGM');
            };

          } else {
            s.onSoundComplete = function () {
              s.stop();
              _level2.tstrace('Played BGM');
            };

          }
          s.start(spos);
        } else {
          _level2.tstrace('BGM is external');
          if (_level0.allbg.battlebgm == null) {
            _level2.tstrace('_level0.allbg.battlebgm is null');
          }
          var s2 = new Sound(_level0.allbg.battlebgm);
          s2.attachSound(sname);
          s2.setVolume(ivol);
          if (sloop) {
            s2.onSoundComplete = function () {
              s2.stop();
              s2.start();
              _level2.tstrace('Played one loop of BGM');
            };

          } else {
            s2.onSoundComplete = function () {
              s2.stop();
              _level2.tstrace('Played BGM');
            };

          }
          s2.start(spos);
        }
      } else {
        gotoAndPlay('stop');
      }
    }

    frame 3 {
      if (!ext) {
        _level2.tstrace('BGM volume currently at ' + s.getVolume());
        if (fvol >= ivol && s.getVolume() >= fvol || fvol <= ivol && s.getVolume() <= fvol || ftime == 0) {
          s.setVolume(fvol);
          gotoAndStop('idle');
        } else {
          _level2.tstrace('Fading BGM ' + sname);
          s.setVolume(s.getVolume() + (fvol - ivol) / ftime * 30);
        }
      } else {
        _level2.tstrace('BGM volume currently at ' + s2.getVolume());
        if (fvol >= ivol && s2.getVolume() >= fvol || fvol <= ivol && s2.getVolume() <= fvol || ftime == 0) {
          s2.setVolume(fvol);
          gotoAndStop('idle');
        } else {
          _level2.tstrace('Fading BGM ' + sname);
          s2.setVolume(s2.getVolume() + (fvol - ivol) / ftime * 30);
        }
      }
    }

    frame 4 {
      gotoAndPlay('fadeloop');
    }

    frame 5 {
      stop();
    }

    frame 6 {
      _level2.tstrace('Stopping BGM ' + sname);
      if (s != null) {
        s.stop();
        delete s;
      }
      if (s2 != null) {
        s2.stop();
        delete s2;
      }
    }

    frame 7 {
      stop();
    }
  }

  movieClip 95  {

    frame 1 {
      var sname = '';
      var ssubtype = 1;
      var curCh = 0;
      var totCh = 4;
      var chans = new Array();
      chans[0] = new Sound(ch1);
      chans[1] = new Sound(ch2);
      chans[2] = new Sound(ch3);
      chans[3] = new Sound(ch4);
      var queued = 0;
      var vstr = new Array();
      vstr[0] = '';
      vstr[1] = '';
      vstr[2] = '';
      vstr[3] = '';
      stop();
    }

    frame 2 {
      r = Math.floor(Math.random() * 11.999) + 1;
      if (r <= 6) {
        sname = 'KC_16_' + ('00' + r).substr(-3);
      } else {
        sname = 'KC_17_' + ('00' + (r - 6)).substr(-3);
      }
    }

    frame 3 {
      gotoAndPlay('play');
    }

    frame 13 {
      sname = 'KC_18_' + ('00' + Math.floor(Math.random() * 6.999) + 1).substr(-3);
    }

    frame 14 {
      gotoAndPlay('play');
    }

    frame 24 {
      sname = 'KC_18_' + ('00' + Math.floor(Math.random() * 5.999) + 8).substr(-3);
    }

    frame 25 {
      gotoAndPlay('play');
    }

    frame 34 {
      sname = 'KC_18_' + ('00' + Math.floor(Math.random() * 6.999) + 14).substr(-3);
    }

    frame 35 {
      gotoAndPlay('play');
    }

    frame 46 {
      r = Math.floor(Math.random() * 12.999) + 1;
      if (r <= 8) {
        sname = 'KC_19_' + ('00' + r).substr(-3);
      } else {
        sname = 'KC_20_' + ('00' + (r - 8)).substr(-3);
      }
    }

    frame 47 {
      gotoAndPlay('play');
    }

    frame 58 {
      sname = 'KC_21_' + ('00' + Math.floor(Math.random() * 7.999) + 1).substr(-3);
    }

    frame 59 {
      gotoAndPlay('play');
    }

    frame 70 {
      if (_level1.voiceFlag) {
        i = 0;
        while (i < queued) {
          sname = vstr[curCh];
          _level2.tstrace('Playing voice ' + sname);
          tmpSound = new Sound(chans[curCh]);
          chans[curCh].onSoundComplete = function () {
            _level2.tstrace('Played voice ');
          };

          chans[curCh].onLoad = function (success) {
            if (success) {
              _level2.tstrace('Voice loaded');
            } else {
              _level2.tstrace('Voice load failed');
            }
          };

          chans[curCh].loadSound(sname, true);
          chans[curCh].setVolume(_level1.voiceVolume);
          chans[curCh].start();
          curCh = Math.floor(curCh + 1) % Math.floor(totCh);
          ++i;
        }
        queued = 0;
      }
    }

    frame 71 {
      stop();
    }
  }

  movieClip 97  {

    frame 1 {
      var sname = '';
      var ssubtype = 1;
      var curCh = 0;
      var totCh = 4;
      var chans = new Array();
      chans[0] = new Sound(ch1);
      chans[1] = new Sound(ch2);
      chans[2] = new Sound(ch3);
      chans[3] = new Sound(ch4);
      var queued = 0;
      var sstr = new Array();
      sstr[0] = '';
      sstr[1] = '';
      sstr[2] = '';
      sstr[3] = '';
      stop();
    }

    frame 2 {
      if (_level1.seFlag) {
        i = 0;
        while (i < queued) {
          sname = sstr[curCh];
          _level2.tstrace('Playing SFX ' + sname);
          chans[curCh].attachSound(sname);
          chans[curCh].setVolume(_level1.seVolume);
          chans[curCh].onSoundComplete = function () {
            _level2.tstrace('Played SFX');
          };

          chans[curCh].start();
          curCh = Math.floor(curCh + 1) % Math.floor(totCh);
          ++i;
        }
        queued = 0;
      }
    }

    frame 3 {
      stop();
    }
  }

  movieClip 100  {
  }

  movieClip 101  {

    frame 1 {
      stop();
    }

    frame 24 {
      gotoAndStop(1);
    }
  }

  movieClip 102  {

    frame 1 {
      stop();
    }

    frame 24 {
      gotoAndStop(1);
    }
  }

  movieClip 106  {

    frame 2 {
      tr_obj = new LoadVars();
      recv1_obj = new LoadVars();
      lop = new Object();
      recv1_obj.onLoad = function (success) {
        if (success) {
          _level2.tstrace('receive suc');
          recv = _level2.battle_act.recv1_obj.svdata;
          _level2.tstrace('Data from server: ');
          _level2.tstrace(recv);
          _level2.tstrace('_level1.npc_battle = ' + _level1.npc_battle);
          _level2.tstrace('_level1.goDeck = ' + _level1.goDeck);
          _level2.tstrace('_level1.cjin = ' + _level1.cjin);
          _level2.tstrace('_level1.enshuu_enemy = ' + _level1.enshuu_enemy);
          if (recv == undefined) {
            _level2.tstrace('Load error: recv is undefined');
            _level1.err_id = 1001;
            if (_level1.npc_battle) {
              _level1.err_mes = 'Load error: data from server undefined for api_req_sortie/battle';
            } else {
              _level1.err_mes = 'Load error: data from server undefined for api_req_practice/battle';
            }
            _level1.err_from = '戦闘開始';
            _level1.gotoAndPlay('sys_err2');
            _level2.gotoAndStop('prebattle');
          } else {
            delete _level2.battle_act.lop;
            _level2.battle_act.lop = new Object();
            _level2.battle_act.lop = JSON.parse(recv);
            if (_level2.battle_act.lop == undefined) {
              _level2.tstrace('Load error: could not parse recv');
              _level1.err_id = 1002;
              if (_level1.npc_battle) {
                _level1.err_mes = 'Load error: could not parse data from server for api_req_sortie/battle';
              } else {
                _level1.err_mes = 'Load error: could not parse data from server for api_req_practice/battle';
              }
              _level1.err_from = '戦闘開始';
              _level1.gotoAndPlay('sys_err2');
              _level2.gotoAndStop('prebattle');
            } else {
              _level2.battle_act.gotoAndStop('suc');
            }
          }
        } else {
          _level2.tstrace('receive error');
          _level1.err_id = 1000;
          _level1.err_from = '戦闘開始';
          if (_level1.npc_battle) {
            _level1.err_mes = 'Receive error for api_req_sortie/battle';
          } else {
            _level1.err_mes = 'Receive error for api_req_practice/battle';
          }
          _level1.gotoAndPlay('sys_err1');
          _level2.gotoAndStop('prebattle');
        }
      };

      tr_obj.api_token = _level1.userToken;
      tr_obj.api_verno = _level1.FLA_VER;
      if (_level1.npc_battle) {
        tr_obj.api_formation = _level1.cjin;
        tr_obj.sendAndLoad(_level1.BASE_URL + 'api_req_sortie/battle', recv1_obj, 'POST');
      } else {
        tr_obj.api_deck_id = _level1.goDeck + 1;
        tr_obj.api_formation_id = _level1.cjin;
        tr_obj.api_enemy_id = _level1.enshuu_enemy;
        tr_obj.sendAndLoad(_level1.BASE_URL + 'api_req_practice/battle', recv1_obj, 'POST');
      }
      stop();
    }

    frame 3 {
      if (lop.api_result == 1) {
        _level2.tstrace('load start');
        _level2.night_flag = lop.api_data.api_midnight_flag;
        _level2.ship_ke = lop.api_data.api_ship_ke;
        if (!_level1.npc_battle) {
          i = 1;
          while (i <= 6) {
            if (_level2.ship_ke[i] > -1) {
              ++_level2.ship_ke[i];
            }
            ++i;
          }
        }
        _level2.tstrace('_level2.ship_ke = [' + _level2.ship_ke + ']');
        _level2.ship_lve = lop.api_data.api_ship_lv;
        _level2.tstrace('_level2.ship_lve = [' + _level2.ship_lve + ']');
        _level2.nowhps = lop.api_data.api_nowhps;
        _level2.maxhps = lop.api_data.api_maxhps;
        _level2.eSlot = lop.api_data.api_eSlot;
        _level2.eKyouka = lop.api_data.api_eKyouka;
        _level2.fParam = lop.api_data.api_fParam;
        _level2.eParam = lop.api_data.api_eParam;
        i = 6;
        while (i > 0) {
          _level2.fParam[i] = _level2.fParam[i - 1];
          _level2.eParam[i] = _level2.eParam[i - 1];
          --i;
        }
        _level2.opening_flag = lop.api_data.api_opening_flag;
        if (_level2.opening_flag == 1) {
          _level2.kfrai = lop.api_data.api_opening_atack.api_frai;
          _level2.kerai = lop.api_data.api_opening_atack.api_erai;
          _level2.kfdam = lop.api_data.api_opening_atack.api_fdam;
          _level2.kedam = lop.api_data.api_opening_atack.api_edam;
          _level2.kfydam = lop.api_data.api_opening_atack.api_fydam;
          _level2.keydam = lop.api_data.api_opening_atack.api_eydam;
          _level2.kfcl = lop.api_data.api_opening_atack.api_fcl;
          _level2.kecl = lop.api_data.api_opening_atack.api_ecl;
        }
        _level2.hourai_flag = lop.api_data.api_hourai_flag;
        _level2.at_list = new Array();
        _level2.at_list[0] = -1;
        _level2.at_type = new Array();
        _level2.at_type[0] = -1;
        _level2.df_list = new Array();
        _level2.df_list[0] = new Array(1);
        _level2.df_list[0][0] = -1;
        _level2.si_list = new Array();
        _level2.si_list[0] = -1;
        _level2.cl_list = new Array();
        _level2.cl_list[0] = new Array(1);
        _level2.cl_list[0][0] = -1;
        _level2.damage_hougeki = new Array();
        _level2.damage_hougeki[0] = new Array(1);
        _level2.damage_hougeki[0][0] = -1;
        it = 1;
        if (_level2.hourai_flag[0] == 1) {
          for (;;) {
            if (!(lop.api_data.api_hougeki1.api_at_list[it][0] != -1 && it < lop.api_data.api_hougeki1.api_at_list.length)) break;
            _level2.at_list[_level2.at_list.length] = lop.api_data.api_hougeki1.api_at_list[it];
            _level2.at_type[_level2.at_type.length] = lop.api_data.api_hougeki1.api_at_type[it];
            _level2.df_list[_level2.df_list.length] = lop.api_data.api_hougeki1.api_df_list[it];
            _level2.si_list[_level2.si_list.length] = lop.api_data.api_hougeki1.api_si_list[it];
            _level2.cl_list[_level2.cl_list.length] = lop.api_data.api_hougeki1.api_cl_list[it];
            _level2.damage_hougeki[_level2.damage_hougeki.length] = lop.api_data.api_hougeki1.api_damage[it];
            ++it;
          }
        }
        it = 1;
        if (_level2.hourai_flag[1] == 1) {
          for (;;) {
            if (!(lop.api_data.api_hougeki2.api_at_list[it][0] != -1 && it < lop.api_data.api_hougeki2.api_at_list.length)) break;
            _level2.at_list[_level2.at_list.length] = lop.api_data.api_hougeki2.api_at_list[it];
            _level2.at_type[_level2.at_type.length] = lop.api_data.api_hougeki2.api_at_type[it];
            _level2.df_list[_level2.df_list.length] = lop.api_data.api_hougeki2.api_df_list[it];
            _level2.si_list[_level2.si_list.length] = lop.api_data.api_hougeki2.api_si_list[it];
            _level2.cl_list[_level2.cl_list.length] = lop.api_data.api_hougeki2.api_cl_list[it];
            _level2.damage_hougeki[_level2.damage_hougeki.length] = lop.api_data.api_hougeki2.api_damage[it];
            ++it;
          }
        }
        it = 1;
        if (_level2.hourai_flag[2] == 1) {
          for (;;) {
            if (!(lop.api_data.api_hougeki3.api_at_list[it][0] != -1 && it < lop.api_data.api_hougeki3.api_at_list.length)) break;
            _level2.at_list[_level2.at_list.length] = lop.api_data.api_hougeki3.api_at_list[it];
            _level2.at_type[_level2.at_type.length] = lop.api_data.api_hougeki3.api_at_type[it];
            _level2.df_list[_level2.df_list.length] = lop.api_data.api_hougeki3.api_df_list[it];
            _level2.si_list[_level2.si_list.length] = lop.api_data.api_hougeki3.api_si_list[it];
            _level2.cl_list[_level2.cl_list.length] = lop.api_data.api_hougeki3.api_cl_list[it];
            _level2.damage_hougeki[_level2.damage_hougeki.length] = lop.api_data.api_hougeki3.api_damage[it];
            ++it;
          }
        }
        if (_level2.hourai_flag[3] == 1) {
          _level2.frai = lop.api_data.api_raigeki.api_frai;
          _level2.erai = lop.api_data.api_raigeki.api_erai;
          _level2.fdam = lop.api_data.api_raigeki.api_fdam;
          _level2.edam = lop.api_data.api_raigeki.api_edam;
          _level2.fydam = lop.api_data.api_raigeki.api_fydam;
          _level2.eydam = lop.api_data.api_raigeki.api_eydam;
          _level2.fcl = lop.api_data.api_raigeki.api_fcl;
          _level2.ecl = lop.api_data.api_raigeki.api_ecl;
        } else {
          _level2.frai = [-1, -1, -1, -1, -1, -1, -1];
          _level2.erai = [-1, -1, -1, -1, -1, -1, -1];
          _level2.fdam = [-1, -1, -1, -1, -1, -1, -1];
          _level2.edam = [-1, -1, -1, -1, -1, -1, -1];
          _level2.fydam = [-1, -1, -1, -1, -1, -1, -1];
          _level2.eydam = [-1, -1, -1, -1, -1, -1, -1];
          _level2.fcl = [-1, -1, -1, -1, -1, -1, -1];
          _level2.ecl = [-1, -1, -1, -1, -1, -1, -1];
        }
        _level2.searchRes = new Array();
        _level2.searchRes = lop.api_data.api_search;
        _level2.psaku_suc = true;
        if (_level2.searchRes[0] == 3 || _level2.searchRes[0] == 4 || _level2.searchRes[0] == 6) {
          _level2.psaku_suc = false;
        }
        _level2.esaku_suc = true;
        if (_level2.searchRes[1] == 3 || _level2.searchRes[1] == 4 || _level2.searchRes[1] == 6) {
          _level2.esaku_suc = false;
        }
        _level2.psaku = true;
        if (_level2.searchRes[0] == 5 || _level2.searchRes[0] == 6) {
          _level2.psaku = false;
        }
        _level2.esaku = true;
        if (_level2.searchRes[1] == 5 || _level2.searchRes[1] == 6) {
          _level2.esaku = false;
        }
        _level2.psaku_losses = false;
        if (_level2.searchRes[0] == 2 || _level2.searchRes[0] == 3) {
          _level2.psaku_losses = true;
        }
        _level2.esaku_losses = false;
        if (_level2.searchRes[1] == 2 || _level2.searchRes[1] == 3) {
          _level2.esaku_losses = true;
        }
        _level2.tstrace('_level2.psaku_suc = ' + _level2.psaku_suc);
        _level2.tstrace('_level2.esaku_suc = ' + _level2.esaku_suc);
        _level2.tstrace('_level2.psaku = ' + _level2.psaku);
        _level2.tstrace('_level2.esaku = ' + _level2.esaku);
        _level2.tstrace('_level2.psaku_losses = ' + _level2.psaku_losses);
        _level2.tstrace('_level2.esaku_losses = ' + _level2.esaku_losses);
        _level2.support_flag = lop.api_data.api_support_flag;
        if (!_level1.npc_battle) {
          _level2.support_flag = 0;
        }
        _level2.tstrace('_level2.support_flag = ' + _level2.support_flag);
        if (_level2.support_flag == 1) {
          _level2.shien_pcnt = 0;
          _level2.support_deck_id = lop.api_data.api_support_info.api_support_airatack.api_deck_id - 1;
          _level2.support_deck = [-1, -1, -1, -1, -1, -1];
          i = 0;
          while (i < 6) {
            if (_level1.myDeck[_level2.support_deck_id].api_ship[i] != -1) {
              _level2.support_deck[i] = _level1.FULL_my_ship[_level1.getOldID(_level1.myDeck[_level2.support_deck_id].api_ship[i])].api_ship_id;
              j = 0;
              for (;;) {
                if (!(_level1.SYS_ship_data[j].api_id != _level2.support_deck[i] && j < 1000)) break;
                ++j;
              }
              typ = _level1.SYS_ship_data[j].api_stype;
              if (typ == 7 || typ == 10 || typ == 11 || typ == 18) {
                ++_level2.shien_pcnt;
              }
            }
            ++i;
          }
          _level2.support_taiha = lop.api_data.api_support_info.api_support_airatack.api_undressing_flag;
          _level2.support_lost_ratio = (1 * lop.api_data.api_support_info.api_support_airatack.api_stage1.api_f_lostcount + lop.api_data.api_support_info.api_support_airatack.api_stage2.api_f_lostcount) / (lop.api_data.api_support_info.api_support_airatack.api_stage1.api_f_count + lop.api_data.api_support_info.api_support_airatack.api_stage2.api_f_count);
          _level2.support_erai_flag = lop.api_data.api_support_info.api_support_airatack.api_stage3.api_erai_flag;
          _level2.support_ebak_flag = lop.api_data.api_support_info.api_support_airatack.api_stage3.api_ebak_flag;
          _level2.support_damage = lop.api_data.api_support_info.api_support_airatack.api_stage3.api_edam;
          _level2.support_crit = lop.api_data.api_support_info.api_support_airatack.api_stage3.api_ecl_flag;
          _level2.tstrace('_level2.support_deck_id = ' + _level2.support_deck_id);
          _level2.tstrace('_level2.support_deck = [' + _level2.support_deck + ']');
          _level2.tstrace('_level2.support_taiha = [' + _level2.support_taiha + ']');
          _level2.tstrace('_level2.support_lost_ratio = ' + _level2.support_lost_ratio);
          _level2.tstrace('_level2.support_erai_flag = [' + _level2.support_erai_flag + ']');
          _level2.tstrace('_level2.support_ebak_flag = [' + _level2.support_ebak_flag + ']');
          _level2.tstrace('_level2.support_damage = [' + _level2.support_damage + ']');
          _level2.tstrace('_level2.support_crit = [' + _level2.support_crit + ']');
          _level2.tstrace('_level2.shien_pcnt = ' + _level2.shien_pcnt);
        }
        if (_level2.support_flag == 2 || _level2.support_flag == 3) {
          _level2.support_deck_id = lop.api_data.api_support_info.api_support_hourai.api_deck_id - 1;
          _level2.support_deck = [-1, -1, -1, -1, -1, -1];
          i = 0;
          while (i < 6) {
            if (_level1.myDeck[_level2.support_deck_id].api_ship[i] != -1) {
              _level2.support_deck[i] = _level1.FULL_my_ship[_level1.getOldID(_level1.myDeck[_level2.support_deck_id].api_ship[i])].api_ship_id;
            }
            ++i;
          }
          _level2.support_taiha = lop.api_data.api_support_info.api_support_hourai.api_undressing_flag;
          _level2.support_damage = lop.api_data.api_support_info.api_support_hourai.api_damage;
          _level2.support_crit = lop.api_data.api_support_info.api_support_hourai.api_cl_list;
          _level2.tstrace('_level2.support_deck_id = ' + _level2.support_deck_id);
          _level2.tstrace('_level2.support_deck = [' + _level2.support_deck + ']');
          _level2.tstrace('_level2.support_taiha = [' + _level2.support_taiha + ']');
          _level2.tstrace('_level2.support_damage = [' + _level2.support_damage + ']');
          _level2.tstrace('_level2.support_crit = [' + _level2.support_crit + ']');
        }
        _level2.formation = new Array();
        _level2.formation = lop.api_data.api_formation;
        _level2.plane_from = new Array();
        _level2.plane_from[0] = new Array();
        _level2.plane_from[1] = new Array();
        _level2.plane_from[0] = lop.api_data.api_kouku.api_plane_from[0];
        _level2.tstrace('_level2.plane_from[0] = ' + _level2.plane_from[0]);
        _level2.plane_from[1] = lop.api_data.api_kouku.api_plane_from[1];
        _level2.tstrace('_level2.plane_from[1] = ' + _level2.plane_from[1]);
        _level2.stage_flag = new Array();
        _level2.stage_flag = lop.api_data.api_stage_flag;
        _level2.tstrace('_level2.stage_flag = [' + _level2.stage_flag + ']');
        _level2.stage1 = new Object();
        _level2.stage1 = lop.api_data.api_kouku.api_stage1;
        _level2.seikuu = _level2.stage1.api_disp_seiku;
        _level2.tstrace('_level2.seikuu = ' + _level2.seikuu);
        _level2.stage2 = new Object();
        _level2.stage2 = lop.api_data.api_kouku.api_stage2;
        _level2.stage3 = new Object();
        _level2.stage3 = lop.api_data.api_kouku.api_stage3;
        _level2.tstrace('load finish');
        hid = 1;
        while (_level2.at_list[hid] > 0) {
          ++hid;
        }
        _level2.hougeki_num = hid - 1;
        _level2.play();
      } else {
        _level2.tstrace('load error');
        _level1.err_id = lop.api_result;
        if (_level1.npc_battle) {
          _level1.err_mes = 'Load error: ' + lop.api_result_msg + ' (api_req_sortie/battle)';
        } else {
          _level1.err_mes = 'Load error: ' + lop.api_result_msg + ' (api_req_practice/battle)';
        }
        _level1.err_from = '戦闘開始';
        _level1.gotoAndPlay('sys_err2');
        _level2.gotoAndStop('prebattle');
      }
      stop();
    }
  }

  movieClip 112  {

    frame 1 {
      stop();
    }

    frame 2 {
      stop();
    }

    frame 3 {
      stop();
    }
  }

  movieClip 113  {
  }

  movieClip 114  {
  }

  movieClip 117  {
  }

  movieClip 120  {
  }

  movieClip 123  {
  }

  movieClip 124  {

    frame 1 {
      param = {'x': random(101) + random(101) + random(101) + random(101), 'y': -200 - random(200)};
      i = 0;
      while (i < 30) {
        star.duplicateMovieClip('star' + i, i + 100, param);
        ++i;
      }
      i = 0;
      while (i < 6) {
        sunny.duplicateMovieClip('sunny' + i, i + 100, param);
        ++i;
      }
    }

    instance sunny of movieClip 120  {

      onClipEvent (load) {
        function dsetup() {
          i = 0;
          _x = 50 + random(701);
          _y = 50 + random(381);
          _alpha = 0;
          waits = random(45);
          sc = random(41) + 80;
          _xscale = sc;
          _yscale = sc;
          alspd = 4;
          al = 0;
        }

        dsetup();
      }

      onClipEvent (enterFrame) {
        ++i;
        if (i > waits) {
          al += alspd;
          if (al > 100) {
            alspd *= -1;
          } else {
            if (al < 0) {
              dsetup();
            }
          }
          _alpha = al;
        }
      }
    }

    instance star of movieClip 123  {

      onClipEvent (load) {
        function dsetup() {
          i = 0;
          _x = random(401) + random(401);
          _y = 50 + random(381);
          _alpha = 0;
          waits = random(45);
          sc = random(41) + 80;
          _xscale = sc;
          _yscale = sc;
          alspd = 4;
          al = 0;
        }

        dsetup();
      }

      onClipEvent (enterFrame) {
        ++i;
        if (i > waits) {
          al += alspd;
          if (al > 100) {
            alspd *= -1;
          } else {
            if (al < 0) {
              dsetup();
            }
          }
          _alpha = al;
        }
      }
    }
  }

  movieClip 128  {
  }

  movieClip 130  {
  }

  movieClip 132  {
  }

  movieClip 134  {
  }

  movieClip 136  {
  }

  movieClip 138  {
  }

  movieClip 140  {
  }

  movieClip 142  {
  }

  movieClip 144  {
  }

  movieClip 146  {
  }

  movieClip 148  {
  }

  movieClip 150  {
  }

  movieClip 152  {
  }

  movieClip 154  {
  }

  movieClip 156  {
  }

  movieClip 158  {
  }

  movieClip 160  {
  }

  movieClip 162  {
  }

  movieClip 164  {
  }

  movieClip 166  {
  }

  movieClip 168  {
  }

  movieClip 170  {
  }

  movieClip 172  {
  }

  movieClip 174  {
  }

  movieClip 176  {
  }

  movieClip 178  {
  }

  movieClip 180  {
  }

  movieClip 182  {
  }

  movieClip 184  {
  }

  movieClip 186  {
  }

  movieClip 188  {
  }

  movieClip 190  {
  }

  movieClip 192  {
  }

  movieClip 194  {
  }

  movieClip 196  {
  }

  movieClip 198  {
  }

  movieClip 200  {
  }

  movieClip 202  {
  }

  movieClip 204  {
  }

  movieClip 206  {
  }

  movieClip 208  {
  }

  movieClip 210  {
  }

  movieClip 212  {
  }

  movieClip 214  {
  }

  movieClip 216  {
  }

  movieClip 218  {
  }

  movieClip 220  {
  }

  movieClip 222  {
  }

  movieClip 224  {
  }

  movieClip 225  {

    frame 1 {
      stop();
    }

    frame 3 {
      stop();
    }

    instance of movieClip 130  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 132  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 134  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 136  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 138  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 140  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 142  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 144  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 146  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 148  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 150  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 152  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 154  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 156  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 158  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 160  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 162  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 164  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 166  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 168  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 170  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 172  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 174  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 176  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 178  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 180  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 182  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 184  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 186  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 188  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 190  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 192  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 194  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 196  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 198  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 200  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 202  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 204  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 206  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 208  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 210  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 212  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 214  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 216  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 218  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 220  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 222  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 224  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }
  }

  movieClip 229  {
  }

  movieClip 231  {
  }

  movieClip 233  {
  }

  movieClip 235  {
  }

  movieClip 237  {
  }

  movieClip 239  {
  }

  movieClip 241  {
  }

  movieClip 243  {
  }

  movieClip 245  {
  }

  movieClip 247  {
  }

  movieClip 249  {
  }

  movieClip 251  {
  }

  movieClip 253  {
  }

  movieClip 255  {
  }

  movieClip 257  {
  }

  movieClip 259  {
  }

  movieClip 261  {
  }

  movieClip 263  {
  }

  movieClip 265  {
  }

  movieClip 267  {
  }

  movieClip 269  {
  }

  movieClip 271  {
  }

  movieClip 273  {
  }

  movieClip 275  {
  }

  movieClip 277  {
  }

  movieClip 279  {
  }

  movieClip 281  {
  }

  movieClip 283  {
  }

  movieClip 285  {
  }

  movieClip 287  {
  }

  movieClip 289  {
  }

  movieClip 291  {
  }

  movieClip 293  {
  }

  movieClip 295  {
  }

  movieClip 297  {
  }

  movieClip 299  {
  }

  movieClip 301  {
  }

  movieClip 303  {
  }

  movieClip 305  {
  }

  movieClip 307  {
  }

  movieClip 309  {
  }

  movieClip 311  {
  }

  movieClip 313  {
  }

  movieClip 315  {
  }

  movieClip 317  {
  }

  movieClip 319  {
  }

  movieClip 321  {
  }

  movieClip 323  {
  }

  movieClip 325  {
  }

  movieClip 326  {

    frame 1 {
      stop();
    }

    frame 3 {
      stop();
    }

    instance of movieClip 229  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 231  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 233  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 235  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 237  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 239  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 241  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 243  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 245  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 247  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 249  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 251  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 253  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 255  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 257  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 259  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 261  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 263  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 265  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 267  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 269  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 271  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 273  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 275  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 277  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 279  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 281  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 283  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 285  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 287  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 289  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 291  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 293  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 295  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 297  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 299  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 301  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 303  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 305  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 307  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 309  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 311  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 313  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 315  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 317  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 319  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 321  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 323  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }

    instance of movieClip 325  {

      onClipEvent (load) {
        startx = _x;
        starty = _y;
        scspd = random(100) / 100;
        rspd = (random(201) - 100) / 10;
        yspd = -random(20) - 5;
        xspd = (random(201) - 150) / 8;
        gspd = 0.98;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd;
        _y = _y + yspd;
        yspd += gspd;
      }
    }
  }

  movieClip 328  {
  }

  movieClip 329  {

    frame 1 {
      stop();
    }

    frame 2 {
      _level2.stop();
      if (_level2.tshipnum != null && _level1.getCondition(_level2.nowhps[_level2.tshipnum], _level2.maxhps[_level2.tshipnum]) > 3) {
        _level2.noTaihaFlg = false;
        _level2.tshipnum = null;
      }
    }

    frame 3 {
      _level2.stop();
      if (_level2.scene == _level2.SCENE_YASEN) {
        bg.gotoAndStop(2);
      }
      if (_level2.taihaids[1] < 0) {
        _level2.ldr1.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + (_level2.taihaids[0] - 1) + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.taihaids[0] - 1)].api_version, girl.ship);
        _level2.ldr1.addListener(_level2.lsnr1);
        _level2.lsnr1.onLoadInit = function () {
          _level2.tstrace('Loading character ' + (_level2.taihaids[0] - 1) + ' artwork');
          girl.ship.gotoAndStop(11);
          girl.ship._x = _level1.SYS_ship_pos[_level1.getPosID(_level2.taihaids[0] - 1)].api_battle_d[0];
          girl.ship._y = _level1.SYS_ship_pos[_level1.getPosID(_level2.taihaids[0] - 1)].api_battle_d[1];
          _level2.ldr1.removeListener(_level2.lsnr1);
        };

        _level2.lsnr1.onLoadError = function () {
          _level2.tstrace('Failed to load character ' + (_level2.taihaids[0] - 1) + ' artwork');
          girl.attachMovie('nodatachar', 'ship', 1);
          girl.ship._x = 440;
          girl.ship._y = 810;
          _level2.ldr1.removeListener(_level2.lsnr1);
        };

      }
      _level2.tstrace('Taiha cut in character frame ' + girl._currentframe);
      girl2_1._visible = false;
      girl2_2._visible = false;
      girl3_1._visible = false;
      girl3_2._visible = false;
      girl3_3._visible = false;
      if (_level2.taihaids[1] >= 0 && _level2.taihaids[2] >= 0) {
        girl._visible = false;
        girl3_1._visible = true;
        girl3_2._visible = true;
        girl3_3._visible = true;
        _level2.ldr1.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + (_level2.taihaids[0] - 1) + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.taihaids[0] - 1)].api_version, girl3_1.ship);
        _level2.ldr1.addListener(_level2.lsnr1);
        _level2.lsnr1.onLoadInit = function () {
          _level2.tstrace('Loading character ' + _level2.taihaids[0] + ' artwork');
          girl3_1.ship.gotoAndStop(11);
          girl3_1.ship._x = _level1.SYS_ship_pos[_level1.getPosID(_level2.taihaids[0] - 1)].api_battle_d[0];
          girl3_1.ship._y = _level1.SYS_ship_pos[_level1.getPosID(_level2.taihaids[0] - 1)].api_battle_d[1];
          _level2.ldr1.removeListener(_level2.lsnr1);
        };

        _level2.lsnr1.onLoadError = function () {
          _level2.tstrace('Failed to load character ' + (_level2.taihaids[0] - 1) + ' artwork');
          girl3_1.attachMovie('nodatachar', 'ship', 1);
          girl3_1.ship._x = 440;
          girl3_1.ship._y = 810;
          _level2.ldr1.removeListener(_level2.lsnr1);
        };

        _level2.ldr2.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + (_level2.taihaids[1] - 1) + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.taihaids[1] - 1)].api_version, girl3_2.ship);
        _level2.ldr2.addListener(_level2.lsnr2);
        _level2.lsnr2.onLoadInit = function () {
          _level2.tstrace('Loading character ' + (_level2.taihaids[1] - 1) + ' artwork');
          girl3_2.ship.gotoAndStop(11);
          girl3_2.ship._x = _level1.SYS_ship_pos[_level1.getPosID(_level2.taihaids[1] - 1)].api_battle_d[0];
          girl3_2.ship._y = _level1.SYS_ship_pos[_level1.getPosID(_level2.taihaids[1] - 1)].api_battle_d[1];
          _level2.ldr2.removeListener(_level2.lsnr2);
        };

        _level2.lsnr2.onLoadError = function () {
          _level2.tstrace('Failed to load character ' + _level2.taihaids[1] + ' artwork');
          girl3_2.attachMovie('nodatachar', 'ship', 1);
          girl3_2.ship._x = 440;
          girl3_2.ship._y = 810;
          _level2.ldr2.removeListener(_level2.lsnr2);
        };

        _level2.ldr3.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + (_level2.taihaids[2] - 1) + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.taihaids[2] - 1)].api_version, girl3_3.ship);
        _level2.ldr3.addListener(_level2.lsnr3);
        _level2.lsnr3.onLoadInit = function () {
          _level2.tstrace('Loading character ' + (_level2.taihaids[2] - 1) + ' artwork');
          girl3_3.ship.gotoAndStop(11);
          girl3_3.ship._x = _level1.SYS_ship_pos[_level1.getPosID(_level2.taihaids[2] - 1)].api_battle_d[0];
          girl3_3.ship._y = _level1.SYS_ship_pos[_level1.getPosID(_level2.taihaids[2] - 1)].api_battle_d[1];
          _level2.ldr3.removeListener(_level2.lsnr3);
        };

        _level2.lsnr3.onLoadError = function () {
          _level2.tstrace('Failed to load character ' + (_level2.taihaids[2] - 1) + ' artwork');
          girl3_3.attachMovie('nodatachar', 'ship', 1);
          girl3_3.ship._x = 440;
          girl3_3.ship._y = 810;
          _level2.ldr3.removeListener(_level2.lsnr3);
        };

      } else {
        if (_level2.taihaids[1] >= 0) {
          girl._visible = false;
          girl2_1._visible = true;
          girl2_2._visible = true;
          _level2.ldr1.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + (_level2.taihaids[0] - 1) + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.taihaids[0] - 1)].api_version, girl2_1.ship);
          _level2.ldr1.addListener(_level2.lsnr1);
          _level2.lsnr1.onLoadInit = function () {
            _level2.tstrace('Loading character ' + (_level2.taihaids[0] - 1) + ' artwork');
            girl2_1.ship.gotoAndStop(11);
            girl2_1.ship._x = _level1.SYS_ship_pos[_level1.getPosID(_level2.taihaids[0] - 1)].api_battle_d[0];
            girl2_1.ship._y = _level1.SYS_ship_pos[_level1.getPosID(_level2.taihaids[0] - 1)].api_battle_d[1];
            _level2.ldr1.removeListener(_level2.lsnr1);
          };

          _level2.lsnr1.onLoadError = function () {
            _level2.tstrace('Failed to load character ' + (_level2.taihaids[0] - 1) + ' artwork');
            girl2_1.attachMovie('nodatachar', 'ship', 1);
            girl2_1.ship._x = 440;
            girl2_1.ship._y = 810;
            _level2.ldr1.removeListener(_level2.lsnr1);
          };

          _level2.ldr2.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + (_level2.taihaids[1] - 1) + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.taihaids[1] - 1)].api_version, girl2_2.ship);
          _level2.ldr2.addListener(_level2.lsnr2);
          _level2.lsnr2.onLoadInit = function () {
            _level2.tstrace('Loading character ' + (_level2.taihaids[1] - 1) + ' artwork');
            girl2_2.ship.gotoAndStop(11);
            girl2_2.ship._x = _level1.SYS_ship_pos[_level1.getPosID(_level2.taihaids[1] - 1)].api_battle_d[0];
            girl2_2.ship._y = _level1.SYS_ship_pos[_level1.getPosID(_level2.taihaids[1] - 1)].api_battle_d[1];
            _level2.ldr2.removeListener(_level2.lsnr2);
          };

          _level2.lsnr2.onLoadError = function () {
            _level2.tstrace('Failed to load character ' + (_level2.taihaids[1] - 1) + ' artwork');
            girl2_2.attachMovie('nodatachar', 'ship', 1);
            girl2_2.ship._x = 440;
            girl2_2.ship._y = 810;
            _level2.ldr2.removeListener(_level2.lsnr2);
          };

        }
      }
    }

    frame 4 {
      _level2.stop();
    }

    frame 5 {
      _level2.stop();
    }

    frame 6 {
      _level2.stop();
    }

    frame 7 {
      _level2.stop();
    }

    frame 8 {
      _level2.stop();
    }

    frame 9 {
      _level2.stop();
    }

    frame 10 {
      _level2.stop();
    }

    frame 11 {
      _level2.stop();
    }

    frame 12 {
      _level2.stop();
    }

    frame 13 {
      _level2.stop();
    }

    frame 14 {
      _level2.stop();
    }

    frame 15 {
      _level2.stop();
    }

    frame 16 {
      _level2.stop();
    }

    frame 17 {
      _level2.stop();
    }

    frame 18 {
      _level2.stop();
    }

    frame 19 {
      _level2.stop();
    }

    frame 20 {
      _level2.stop();
    }

    frame 21 {
      _level2.stop();
    }

    frame 22 {
      if (_level2.noTaihaFlg) {
        taiha._visible = false;
      } else {
        chuuha._visible = false;
      }
    }

    frame 24 {
      if (_level2.noTaihaFlg) {
        taiha2._visible = false;
      } else {
        chuuha2._visible = false;
      }
    }

    frame 29 {
      _level2.playSFX('battle_don.mp3');
    }

    frame 42 {
      if (_level2.noTaihaFlg) {
        chuuha.play();
      } else {
        taiha.play();
      }
      _level2.playVoice(_level2.taihaids[0] - 1, 21);
    }

    frame 137 {
      _level2.taihaids[0] = -1;
      _level2.taihaids[1] = -1;
      _level2.taihaids[2] = -1;
      _level2.taihaids[3] = -1;
      _level2.taihaids[4] = -1;
      _level2.taihaids[5] = -1;
      _level2.noTaihaFlg = true;
      _level2.taihaFlg = false;
      _level2.ftaihaFlg = false;
      _level2.play();
      _level2.planef1.play();
      _level2.planef2.play();
      _level2.planef3.play();
      _level2.planef4.play();
      _level2.planef5.play();
      _level2.planef6.play();
      i = 0;
      while (i < starnum) {
        (eval('new_star' + i)).removeMovieClip();
        ++i;
      }
      gotoAndStop(1);
    }
  }

  movieClip 333  {
  }

  movieClip 334  {
  }

  movieClip 337  {
  }

  movieClip 340  {
  }

  movieClip 343  {
  }

  movieClip 354  {

    frame 1 {
      stop();
    }
  }

  movieClip 356  {
  }

  movieClip 357  {

    frame 1 {
      bh = new Array();
      i = 0;
      while (i < 100) {
        bh[bh.length] = burnhole.duplicateMovieClip('burnhole' + bh.length, this.getNextHighestDepth());
        bh[bh.length - 1]._x = random(218) - 109;
        bh[bh.length - 1]._y = random(300) - 150;
        bh[bh.length - 1]._alpha = 100;
        size = random(200) + 100;
        bh[bh.length - 1]._xscale = size;
        bh[bh.length - 1]._yscale = size;
        ++i;
      }
      stop();
    }
  }

  movieClip 358  {

    frame 1 {
      ang = 0;
      stop();
    }

    frame 2 {
      _rotation = _rotation - 30 * Math.sin(ang * Math.PI / 180) / 30;
      ang += 6;
      cardholder.setMask(burnmask);
      i = 0;
      while (i < burnmask.bh.length) {
        if (burnmask.bh[i]._xscale < 10) {
          burnmask.bh[i]._xscale = 1;
          burnmask.bh[i]._yscale = 1;
        } else {
          burnmask.bh[i]._xscale -= 5;
          burnmask.bh[i]._yscale -= 5;
        }
        ++i;
      }
    }

    frame 3 {
      gotoAndPlay('loop');
    }

    frame 4 {
      _y = _y + 8;
      if (_alpha <= 2) {
        _alpha = 0;
      } else {
        _alpha = _alpha - 1;
      }
      cardholder.setMask(burnmask);
      i = 0;
      while (i < burnmask.bh.length) {
        if (burnmask.bh[i]._xscale < 10) {
          burnmask.bh[i]._xscale = 1;
          burnmask.bh[i]._yscale = 1;
        } else {
          burnmask.bh[i]._xscale -= 10;
          burnmask.bh[i]._yscale -= 10;
        }
        ++i;
      }
    }

    frame 5 {
      gotoAndPlay('loop2');
    }
  }

  movieClip 361  {

    frame 1 {
      stop();
    }

    frame 2 {
      _x = _x - 100;
      _yscale = _yscale + 10;
      if (_yscale > 100) {
        _yscale = 100;
      }
      _alpha = _alpha + 20;
    }

    frame 3 {
      gotoAndPlay('enlarge');
    }

    frame 4 {
      _x = _x - 100;
      _yscale = _yscale - 10;
      _alpha = _alpha - 20;
    }

    frame 5 {
      gotoAndPlay('shrink');
    }
  }

  movieClip 364  {
  }

  movieClip 365  {

    frame 1 {
      spd = 225;
      parts = new Array();
      pvx = new Array();
      pvy = new Array();
      pa = new Array();
      phase = 1;
      spncnt = 40;
      spnt = 10;
      timer = 0;
      spawning = true;
      play();
    }

    frame 2 {
      _y = _y - spd / 30;
      i = 0;
      while (i < parts.length) {
        parts[i]._x += pvx[i];
        parts[i]._y += pvy[i];
        parts[i]._alpha += pa[i];
        if (parts[i]._alpha > 50) {
          parts[i]._alpha = 50;
        }
        ++i;
      }
      if (spawning && timer % 2 == 0) {
        i = 0;
        while (i < 1) {
          parts[parts.length] = p.duplicateMovieClip('p' + parts.length, this.getNextHighestDepth());
          parts[parts.length - 1]._x = random(200) - 100;
          parts[parts.length - 1]._y = random(300) - 150;
          parts[parts.length - 1]._alpha = 0;
          pvx[pvx.length] = (random(spd / 4) - spd / 8) / 30;
          pvy[pvy.length] = (random(spd / 2) - spd / 4) / 30;
          pa[pa.length] = random(10) + 10;
          ++i;
        }
        if (timer > 30) {
          spawning = false;
        }
      } else {
        i = 0;
        while (i < parts.length) {
          parts[i]._alpha -= 3;
          ++i;
        }
      }
      ++timer;
      if (timer > 60) {
        gotoAndStop(1);
      }
    }

    frame 3 {
      gotoAndPlay('loop');
    }
  }

  movieClip 368  {
  }

  movieClip 371  {
  }

  movieClip 374  {
  }

  movieClip 377  {
  }

  movieClip 382  {

    frame 1 {
      stop();
    }
  }

  movieClip 385  {
  }

  movieClip 388  {
  }

  movieClip 397  {
  }

  movieClip 398  {

    frame 7 {
      if (_parent.superrezFlg) {
        rezcard.gotoAndStop(2);
      }
    }

    frame 12 {
      if (_parent.superrezFlg) {
        rezcard2.gotoAndStop(2);
      }
    }

    frame 27 {
      _level2.playSFX('savepoint');
    }

    frame 80 {
      if (!_parent.superrezFlg) {
        superrezbg._visible = false;
      }
    }

    frame 85 {
      if (!_parent.superrezFlg) {
        superreztext1._visible = false;
      }
    }

    frame 112 {
      if (!_parent.superrezFlg) {
        gotoAndPlay('nosuperrez');
      }
    }

    frame 126 {
      if (!_parent.superrezFlg) {
        superreztext2._visible = false;
      }
    }

    frame 147 {
      if (!_parent.superrezFlg) {
        superrezbg._visible = false;
        superreztext2._visible = false;
      }
    }

    frame 169 {
      _level2.ldr1.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + (_level2.gekichinids[_parent.cur] - 1) + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.gekichinids[_parent.cur] - 1)].api_version, girl.ship);
      _level2.ldr1.addListener(_level2.lsnr1);
      _level2.lsnr1.onLoadInit = function () {
        _level2.tstrace('Loading character ' + (_level2.gekichinids[_parent.cur] - 1) + ' artwork');
        if (!_parent.superrezFlg) {
          girl.ship.gotoAndStop(11);
          girl.ship._x = _level1.SYS_ship_pos[_level1.getPosID(_level2.gekichinids[_parent.cur] - 1)].api_battle_d[0];
          girl.ship._y = _level1.SYS_ship_pos[_level1.getPosID(_level2.gekichinids[_parent.cur] - 1)].api_battle_d[1];
        } else {
          girl.ship.gotoAndStop(10);
          girl.ship._x = _level1.SYS_ship_pos[_level1.getPosID(_level2.gekichinids[_parent.cur] - 1)].api_battle_n[0];
          girl.ship._y = _level1.SYS_ship_pos[_level1.getPosID(_level2.gekichinids[_parent.cur] - 1)].api_battle_n[1];
        }
        _level2.ldr1.removeListener(_level2.lsnr1);
      };

      _level2.lsnr1.onLoadError = function () {
        _level2.tstrace('Failed to load character ' + (_level2.gekichinids[_parent.cur] - 1) + ' artwork');
        girl.attachMovie('nodatachar', 'ship', 1);
        girl.ship._x = 440;
        girl.ship._y = 810;
        _level2.ldr1.removeListener(_level2.lsnr1);
      };

    }

    frame 251 {
      curship = _level2.gekichinnum[_parent.cur];
      _level2.tstrace('curship = ' + curship);
      if (!_parent.superrezFlg) {
        _level2.nowhps[curship] = Math.floor(_level2.maxhps[curship] * 0.2);
        _level2.tstrace('_level2.nowhps[' + curship + '] = ' + _level2.nowhps[curship]);
        _level2.gekichinstate[curship - 1] = false;
        tellTarget (''_level2.f' + curship') {
          ship.now_con.gotoAndStop(7);
        }
      } else {
        _level2.nowhps[curship] = _level2.maxhps[curship];
        _level2.tstrace('_level2.nowhps[' + curship + '] = ' + _level2.nowhps[curship]);
        _level2.gekichinstate[curship - 1] = false;
        _level2.taihastate[curship - 1] = false;
        tellTarget (''_level2.f' + curship') {
          ship.now_con.gotoAndStop(1);
        }
      }
      gotoAndStop(1);
      _parent.gotoAndPlay('afterrez');
    }
  }

  movieClip 399  {

    frame 1 {
      cur = 0;
      rezFlg = false;
      superrezFlg = false;
      stop();
    }

    frame 2 {
      _level2.stop();
    }

    frame 3 {
      bg.gotoAndStop(3);
      if (cur == 0) {
        whitebg._visible = false;
      } else {
        whitebg._visible = true;
      }
      _level2.stop();
    }

    frame 4 {
      _level2.stop();
    }

    frame 5 {
      _level2.stop();
    }

    frame 6 {
      _level2.stop();
    }

    frame 7 {
      _level2.stop();
    }

    frame 8 {
      _level2.stop();
    }

    frame 9 {
      _level2.stop();
    }

    frame 10 {
      _level2.stop();
    }

    frame 11 {
      _level2.stop();
    }

    frame 12 {
      _level2.stop();
    }

    frame 13 {
      _level2.stop();
    }

    frame 14 {
      _level2.stop();
    }

    frame 15 {
      _level2.stop();
    }

    frame 16 {
      _level2.stop();
    }

    frame 17 {
      _level2.stop();
    }

    frame 18 {
      _level2.stop();
    }

    frame 19 {
      _level2.stop();
    }

    frame 20 {
      _level2.stop();
      _level2.ldr1.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + (_level2.gekichinids[cur] - 1) + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.gekichinids[cur] - 1)].api_version, girl.ship);
      _level2.ldr1.addListener(_level2.lsnr1);
      _level2.lsnr1.onLoadInit = function () {
        _level2.tstrace('Loading character ' + (_level2.gekichinids[cur] - 1) + ' artwork');
        girl.ship.gotoAndStop(11);
        girl.ship._x = _level1.SYS_ship_pos[_level1.getPosID(_level2.gekichinids[cur] - 1)].api_battle_d[0];
        girl.ship._y = _level1.SYS_ship_pos[_level1.getPosID(_level2.gekichinids[cur] - 1)].api_battle_d[1];
        _level2.ldr1.removeListener(_level2.lsnr1);
      };

      _level2.lsnr1.onLoadError = function () {
        _level2.tstrace('Failed to load character ' + (_level2.gekichinids[cur] - 1) + ' artwork');
        girl.attachMovie('nodatachar', 'ship', 1);
        girl.ship._x = 440;
        girl.ship._y = 810;
        _level2.ldr1.removeListener(_level2.lsnr1);
      };

      _level2.ldr2.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + (_level2.gekichinids[cur] - 1) + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.gekichinids[cur] - 1)].api_version, girlblur.ship);
      _level2.lsnr2.onLoadInit = function () {
        _level2.tstrace('Loading character ' + (_level2.gekichinids[cur] - 1) + ' artwork');
        girlblur.ship.gotoAndStop(11);
        girlblur.ship._x = _level1.SYS_ship_pos[_level1.getPosID(_level2.gekichinids[cur] - 1)].api_battle_n[0];
        girlblur.ship._y = _level1.SYS_ship_pos[_level1.getPosID(_level2.gekichinids[cur] - 1)].api_battle_n[1];
      };

      _level2.lsnr2.onLoadError = function () {
        _level2.tstrace('Failed to load character ' + (_level2.gekichinids[cur] - 1) + ' artwork');
        girlblur.attachMovie('nodatachar', 'ship', 1);
        girlblur.ship._x = 440;
        girlblur.ship._y = 810;
      };

    }

    frame 21 {
      _level2.stop();
    }

    frame 22 {
      _level2.stop();
    }

    frame 23 {
      _level2.stop();
    }

    frame 24 {
      _level2.stop();
    }

    frame 25 {
      _level2.stop();
    }

    frame 26 {
      _level2.stop();
    }

    frame 27 {
      _level2.stop();
    }

    frame 28 {
      _level2.stop();
    }

    frame 29 {
      _level2.stop();
    }

    frame 30 {
      _level2.stop();
    }

    frame 37 {
      _level2.tstrace('Gekichin cut in character frame ' + girl._currentframe);
      j = 0;
      for (;;) {
        if (!(_level1.SYS_ship_data[j].api_id != _level2.gekichinids[cur] - 1 && j < 1000)) break;
        ++j;
      }
      _level2.tstrace('j = ' + j);
      _level2.tstrace('_level1.SYS_ship_data[j]["api_backs"] = ' + _level1.SYS_ship_data[j].api_backs);
      _level2.tstrace('_level1.SYS_ship_data[j]["api_name"] = ' + _level1.SYS_ship_data[j].api_name);
      card.cardholder.gotoAndStop(_level1.SYS_ship_data[j].api_backs);
    }

    frame 53 {
      _level2.playSFX('battle_don.mp3');
    }

    frame 66 {
    }

    frame 85 {
      card.gotoAndPlay('loop');
      partspawner.gotoAndPlay('loop');
      _level2.playVoice(_level2.gekichinids[cur] - 1, 22);
    }

    frame 90 {
    }

    frame 105 {
      card.gotoAndPlay('loop2');
    }

    frame 125 {
      i = 1;
      while (i <= 6) {
        if (_level2.ship_kf[i] == _level2.gekichinids[cur]) {
          break;
        }
        ++i;
      }
      j = 0;
      while (j < 4) {
        if (_level2.fSlot[i - 1][j] != undefined && (_level2.fSlot[i - 1][j] == 42 || _level2.fSlot[i - 1][j] == 43)) {
          rezFlg = true;
          if (_level2.fSlot[i - 1][j] == 43) {
            superrezFlg = true;
          } else {
            superrezFlg = false;
          }
          lost._visible = false;
          lost3._visible = false;
          break;
        } else {
          rezFlg = false;
        }
        ++j;
      }
    }

    frame 150 {
      if (rezFlg) {
        lost2._visible = false;
        lost4._visible = false;
      }
    }

    frame 152 {
      i = 0;
      while (i < parspawner.parts.length) {
        (eval('p' + i)).removeMovieClip();
        ++i;
      }
    }

    frame 179 {
      i = 1;
      while (i <= 6) {
        if (_level2.ship_kf[i] == _level2.gekichinids[cur]) {
          break;
        }
        ++i;
      }
      _level2.tstrace('_level2.fSlot[' + (i - 1) + '][' + j + '] = ' + _level2.fSlot[i - 1][j]);
      if (rezFlg) {
        stop();
        rez.play();
      }
    }

    frame 218 {
      ++cur;
      rezFlg = false;
      superrezFlg = false;
      if (_level2.gekichinids[cur] >= 0) {
        gotoAndPlay(3);
      }
    }

    frame 236 {
      cur = 0;
      rezFlg = false;
      superrezFlg = false;
      _level2.taihaids[0] = -1;
      _level2.taihaids[1] = -1;
      _level2.taihaids[2] = -1;
      _level2.taihaids[3] = -1;
      _level2.taihaids[4] = -1;
      _level2.taihaids[5] = -1;
      _level2.taihaFlg = false;
      _level2.ftaihaFlg = false;
      _level2.gekichinids[0] = -1;
      _level2.gekichinids[1] = -1;
      _level2.gekichinids[2] = -1;
      _level2.gekichinids[3] = -1;
      _level2.gekichinids[4] = -1;
      _level2.gekichinids[5] = -1;
      _level2.gekichinFlg = false;
      _level2.play();
      gotoAndStop(1);
    }
  }

  frame 4 {
    start_shutter.play();
  }

  frame 42 {
    _level2.tstrace('Frame: init');
    _level2.nosfx = false;
    _level2.shienphase = false;
    _level2.tshipnum = null;
    var ldr1 = new MovieClipLoader();
    var lsnr1 = new Object();
    var ldr2 = new MovieClipLoader();
    var lsnr2 = new Object();
    var ldr3 = new MovieClipLoader();
    var lsnr3 = new Object();
    round = 1;
    shinro = -1;
    raiflag = false;
    wepID = -1;
    _level2.inithp = new Array();
    i = 0;
    while (i < 12) {
      _level2.inithp[i] = _level2.nowhps[i + 1];
      ++i;
    }
    _level2.perfectrank = true;
    _level2.airhouFlg = false;
    _level2.divehouFlg = false;
    _level2.taihaids = new Array(-1, -1, -1, -1, -1, -1);
    _level2.taihaFlg = false;
    _level2.ftaihaFlg = false;
    _level2.noTaihaFlg = true;
    _level2.gekichinids = new Array(-1, -1, -1, -1, -1, -1);
    _level2.gekichinnum = new Array(-1, -1, -1, -1, -1, -1);
    _level2.gekichinFlg = false;
    _level2.taihastate = new Array(false, false, false, false, false, false);
    _level2.gekichinstate = new Array(false, false, false, false, false, false);
    i = 0;
    while (i < 6) {
      if (_level2.maxhps[i + 1] > 0 && _level1.getCondition(_level2.nowhps[i + 1], _level2.maxhps[i + 1]) > 2) {
        _level2.taihastate[i] = true;
      }
      ++i;
    }
    _level2.damagedebug = '';
    _level2.damageserverdebug = '';
    if (_level2.bossmap) {
      if (_level2.isEvent()) {
        _level2.playEventBGM();
      } else {
        if (_level1.questpage == 4 && _level1.mapid == 1 || _level1.questpage == 4 && _level1.mapid == 2) {
          _level2.playBGM('e-bt.mp3', true, _level1.bgmVolume);
        } else {
          _level2.playBGM('2_battle2_11.mp3', true, _level1.bgmVolume);
        }
      }
    } else {
      if (_level2.isEvent()) {
        _level2.playEventBGM();
      } else {
        _level2.playBGM('1_battle1_1.mp3', true, _level1.bgmVolume);
      }
    }
    _level2.gaugeExploding = false;
    if ((_level2.isEvent() || _level1.mapid == 3 && _level1.questpage == 3 || _level1.mapid == 1 && _level1.questpage == 4 || _level1.mapid == 2 && _level1.questpage == 4) && _level2.bossmap) {
      mapHPData = {};
      mapHPData.mapHpMax = 1 * _level1.required_defeat_count;
      mapHPData.mapHpNow = 1 * (_level1.required_defeat_count - _level1.defeat_count);
      mapHPData.mapHpNowFrom = 1 * (_level1.required_defeat_count - _level1.defeat_count);
      mapHPData.mapHpDmg = 1;
      mapHPData.isBombed = false;
      mapHPData.isDisplay = false;
      _level2.tstrace('[イベントマップ]:' + mapHPData.mapHpNow + '/' + mapHPData.mapHpMax + '(係数' + mapHPData.mapHpDmg + ')');
      if (mapHPData.mapHpNow > 0) {
        _level2.mapHP_mc.gotoAndStop('disp');
        mapHPData.isDisplay = true;
      } else {
        _level2.mapHP_mc.gotoAndStop('off');
      }
    }
    _level2.fighter_f = false;
    _level2.plane_counter_f = false;
    _level2.fighter_e = false;
    _level2.plane_counter_e = false;
    _level2.fplanecount = [0, 0, 0, 0, 0, 0];
    _level2.eplanecount = [0, 0, 0, 0, 0, 0];
    _level2.jin_friend = _level2.formation[0] * 10 - 1;
    _level2.jin_enemy = _level2.formation[1] * 10 - 1;
    canSearch = 0;
    fdam_total = [-1, 0, 0, 0, 0, 0, 0];
    edam_total = [-1, 0, 0, 0, 0, 0, 0];
    fydam_total = [-1, 0, 0, 0, 0, 0, 0];
    eydam_total = [-1, 0, 0, 0, 0, 0, 0];
    ship_kf = [-1, -1, -1, -1, -1, -1, -1];
    ship_lvf = [-1, -1, -1, -1, -1, -1, -1];
    fSlot = new Array();
    fKyouka = new Array();
    _level2.ship_name = new Array();
    _level2.tstrace('_level1.goDeck = ' + _level1.goDeck);
    i = 0;
    while (i < 6) {
      fSlot[i] = new Array();
      temp = _level1.getOldID(_level1.myDeck[_level1.goDeck].api_ship[i]);
      if (temp == -1) {
        ship_kf[i + 1] = -1;
      } else {
        ship_kf[i + 1] = _level1.FULL_my_ship[temp].api_ship_id + 1;
        ship_lvf[i + 1] = _level1.FULL_my_ship[temp].api_lv;
        fKyouka[i + 1] = _level1.FULL_my_ship[temp].api_kyouka;
        _level2.ship_name[i + 1] = _level1.FULL_my_ship[temp].api_name;
      }
      j = 0;
      if (ship_ke[i + 1] == -1) {
        _level2.ship_name[i + 7] = '';
      } else {
        if (_level1.npc_battle) {
          for (;;) {
            if (!(_level1.SYS_ship_data[j].api_id != ship_ke[i + 1] && j < 1000)) break;
            ++j;
          }
        } else {
          for (;;) {
            if (!(_level1.SYS_ship_data[j].api_id != ship_ke[i + 1] - 1 && j < 1000)) break;
            ++j;
          }
        }
        _level2.ship_name[i + 7] = _level1.SYS_ship_data[j].api_name;
      }
      j = 0;
      while (j < 4) {
        if (_level1.FULL_my_ship[temp] == undefined || _level1.FULL_my_ship[temp].api_slot == undefined || _level1.FULL_my_ship[temp].api_slot[j] == undefined || _level1.getOldID_i(_level1.FULL_my_ship[temp].api_slot[j]) == -1) {
          fSlot[i][j] = -1;
        } else {
          fSlot[i][j] = _level1.FULL_my_item[_level1.getOldID_i(_level1.FULL_my_ship[temp].api_slot[j])].api_slotitem_id;
        }
        ++j;
      }
      if (ship_kf[i + 1] != -1) {
        ++_level2.jin_friend;
      }
      if (ship_ke[i + 1] != -1) {
        ++_level2.jin_enemy;
      }
      ++i;
    }
    _level2.attackVoicesFlag = new Array(true, true, true, true, true, true);
    _level2.enemyAttackVoiceHolder = [undefined, undefined, undefined, undefined, undefined, undefined];
    _level2.enemyDamageVoiceHolder = [undefined, undefined, undefined, undefined, undefined, undefined];
    _level2.flagShip = ship_kf[1] - 1;
    i = 0;
    while (i < 6) {
      _level2.attackVoicesFlag[i] = Math.random() > 0.5;
      ++i;
    }
    _level2.attackVoicesFlag[0] = true;
    _level2.tstrace('_level2.ship_name = [' + _level2.ship_name + ']');
    _level2.tstrace('_level2.jin_friend = ' + _level2.jin_friend);
    _level2.tstrace('_level2.jin_enemy = ' + _level2.jin_enemy);
    i = 0;
    while (i < 6) {
      if (ship_kf[i + 1] != -1) {
        j = 0;
        while (j < 4) {
          if (fSlot[i][j] != undefined) {
            _level2.tstrace('fSlot[' + i + '][' + j + '] = ' + fSlot[i][j]);
          }
          ++j;
        }
      }
      ++i;
    }
    i = 0;
    while (i < 6) {
      if (ship_ke[i + 1] != -1) {
        j = 0;
        while (j < 4) {
          if (eSlot[i][j] != undefined) {
            _level2.tstrace('eSlot[' + i + '][' + j + '] = ' + eSlot[i][j]);
          }
          ++j;
        }
      }
      ++i;
    }
    i = 0;
    while (i < 6) {
      j = 0;
      while (j < 4) {
        if (_level1.SYS_slot_items[fSlot[i][j] - 1] != undefined) {
          if (_level1.SYS_slot_items[fSlot[i][j] - 1].api_type[2] == 6) {
            _level2.fighter_f = true;
          }
          _level2.tstrace('fSlot[' + i + '][' + j + '] = ' + fSlot[i][j]);
          _level2.tstrace('_level1.SYS_slot_items[fSlot[' + i + '][' + j + ']-1]["api_type"][2] = ' + _level1.SYS_slot_items[fSlot[i][j] - 1].api_type[2]);
        }
        if (_level1.SYS_slot_items[eSlot[i][j] - 1] != undefined) {
          if (_level1.SYS_slot_items[eSlot[i][j] - 1].api_type[2] == 6) {
            _level2.fighter_e = true;
          }
          _level2.tstrace('eSlot[' + i + '][' + j + '] = ' + eSlot[i][j]);
          _level2.tstrace('_level1.SYS_slot_items[eSlot[' + i + '][' + j + ']-1]["api_type"][2] = ' + _level1.SYS_slot_items[eSlot[i][j] - 1].api_type[2]);
        }
        ++j;
      }
      ++i;
    }
    _level2.tstrace('_level2.fighter_f = ' + _level2.fighter_f);
    _level2.tstrace('_level2.fighter_e = ' + _level2.fighter_e);
    b_s_hpf = 0;
    b_s_hpe = 0;
    i = 1;
    while (i <= 6) {
      if (maxhps[i] > -1) {
        b_s_hpf += nowhps[i];
      }
      if (maxhps[i + 6] > -1) {
        b_s_hpe += nowhps[i + 6];
      }
      ++i;
    }
    fpla = false;
    epla = false;
    kk_life1 = [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
    kk_life2 = [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
    kk_life3 = [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
    kk_atk = [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
    kk_tai = [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
    kk_dam_rai = [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
    kk_dam_bak = [-1, [-1, 0, 0, 0, 0, 0, 0], [-1, 0, 0, 0, 0, 0, 0], [-1, 0, 0, 0, 0, 0, 0], [-1, 0, 0, 0, 0, 0, 0], [-1, 0, 0, 0, 0, 0, 0], [-1, 0, 0, 0, 0, 0, 0], [-1, 0, 0, 0, 0, 0, 0], [-1, 0, 0, 0, 0, 0, 0], [-1, 0, 0, 0, 0, 0, 0], [-1, 0, 0, 0, 0, 0, 0], [-1, 0, 0, 0, 0, 0, 0], [-1, 0, 0, 0, 0, 0, 0]];
    _level2.ftotalplanecount = 0;
    _level2.ftotalplanes = new Array();
    _level2.fplanecount = new Array(6);
    _level2.fplanes = new Array(6);
    i = 0;
    while (i < 6) {
      cnt = 0;
      _level2.fplanecount[i] = 0;
      _level2.fplanes[i] = new Array(-1, -1, -1, -1);
      if (ship_kf[i + 1] > 0) {
        j = 0;
        while (j < 4) {
          if (_level2.fSlot[i][j] > 0) {
            if (_level1.SYS_slot_items[_level2.fSlot[i][j] - 1] != undefined) {
              if (_level1.SYS_slot_items[_level2.fSlot[i][j] - 1].api_type[0] == 3 || _level1.SYS_slot_items[_level2.fSlot[i][j] - 1].api_type[2] == 11) {
                _level2.fplanes[i][cnt] = _level1.SYS_slot_items[_level2.fSlot[i][j] - 1].api_id;
                ++cnt;
                ++_level2.fplanecount[i];
                ++_level2.ftotalplanecount;
                _level2.ftotalplanes.push('planef' + (i + 1) + '.plane.p' + _level2.fplanecount[i]);
              }
              _level2.tstrace('_level2.fSlot[' + i + '][' + j + '] = ' + _level2.fSlot[i][j]);
              _level2.tstrace('_level1.SYS_slot_items[_level2.fSlot[' + i + '][' + j + ']-1]["api_type"][0] = ' + _level1.SYS_slot_items[_level2.fSlot[i][j] - 1].api_type[0]);
              _level2.tstrace('_level1.SYS_slot_items[_level2.fSlot[' + i + '][' + j + ']-1]["api_type"][2] = ' + _level1.SYS_slot_items[_level2.fSlot[i][j] - 1].api_type[2]);
            }
          }
          ++j;
        }
      }
      _level2.tstrace('_level2.fplanecount[' + i + '] = ' + _level2.fplanecount[i]);
      _level2.tstrace('_level2.fplanes[' + i + '] = [' + _level2.fplanes[i] + ']');
      ++i;
    }
    _level2.tstrace('_level2.ftotalplanes = [' + _level2.ftotalplanes + ']');
    _level2.etotalplanecount = 0;
    _level2.etotalplanes = new Array();
    _level2.eplanecount = new Array(6);
    _level2.eplanes = new Array(6);
    _level2.epltyp = new Array(6);
    _level2.shien_epcnt = 0;
    i = 0;
    while (i < 6) {
      cnt = 0;
      _level2.eplanecount[i] = 0;
      _level2.eplanes[i] = new Array(-1, -1, -1, -1);
      _level2.epltyp[i] = new Array(-1, -1, -1, -1);
      if (ship_ke[i + 1] > 0) {
        j = 0;
        while (j < 4) {
          if (_level2.eSlot[i][j] > 0) {
            k = 0;
            for (;;) {
              if (!(_level1.SYS_slot_items[k].api_id != _level2.eSlot[i][j] && k < 1000)) break;
              ++k;
            }
            if (_level1.SYS_slot_items[k] != undefined) {
              if (_level1.npc_battle) {
                if (_level1.SYS_slot_items[k].api_type[0] == 3 || _level1.SYS_slot_items[k].api_type[2] == 10) {
                  _level2.eplanes[i][cnt] = _level1.SYS_slot_items[k].api_id;
                  if (_level2.eplanes[i][cnt] == 518 || _level2.eplanes[i][cnt] == 521 || _level2.eplanes[i][cnt] == 525 || _level2.eplanes[i][cnt] == 526) {
                    _level2.epltyp[i][cnt] = 4;
                  } else {
                    if (_level2.eplanes[i][cnt] == 517 || _level2.eplanes[i][cnt] == 520 || _level2.eplanes[i][cnt] == 524) {
                      _level2.epltyp[i][cnt] = 3;
                    } else {
                      _level2.epltyp[i][cnt] = 2;
                    }
                  }
                  ++cnt;
                  if (_level2.eplanecount[i] == 0) {
                    ++_level2.shien_epcnt;
                  }
                  ++_level2.eplanecount[i];
                  ++_level2.etotalplanecount;
                  _level2.etotalplanes.push('planee' + (i + 1) + '.plane.p' + _level2.eplanecount[i]);
                }
              } else {
                if (_level1.SYS_slot_items[k].api_type[0] == 3 || _level1.SYS_slot_items[k].api_type[2] == 11) {
                  _level2.eplanes[i][cnt] = _level1.SYS_slot_items[k].api_id;
                  _level2.epltyp[i][cnt] = 1;
                  ++cnt;
                  ++_level2.eplanecount[i];
                  ++_level2.etotalplanecount;
                  _level2.etotalplanes.push('planee' + (i + 1) + '.plane.p' + _level2.eplanecount[i]);
                }
              }
              _level2.tstrace('_level1.SYS_slot_items[' + k + ']["api_type"][0] = ' + _level1.SYS_slot_items[k].api_type[0]);
              _level2.tstrace('_level1.SYS_slot_items[' + k + ']["api_type"][2] = ' + _level1.SYS_slot_items[k].api_type[2]);
            }
          }
          ++j;
        }
      }
      _level2.tstrace('_level2.eplanecount[' + i + '] = ' + _level2.eplanecount[i]);
      _level2.tstrace('_level2.shien_epcnt = ' + _level2.shien_epcnt);
      _level2.tstrace('_level2.eplanes[' + i + '] = [' + _level2.eplanes[i] + ']');
      _level2.tstrace('_level2.epltyp[' + i + '] = [' + _level2.epltyp[i] + ']');
      ++i;
    }
    _level2.tstrace('_level2.etotalplanes = [' + _level2.etotalplanes + ']');
    _level2.ftaikuu = new Array(true, false, false, false, false, false);
    _level2.etaikuu = new Array(true, false, false, false, false, false);
    i = 1;
    while (i < 6) {
      if (ship_kf[i + 1] > 0) {
        j = 0;
        while (j < 4) {
          if (_level2.fSlot[i][j] > 0) {
            if (_level1.SYS_slot_items[_level2.fSlot[i][j] - 1] != undefined) {
              if (_level1.SYS_slot_items[_level2.fSlot[i][j] - 1].api_type[2] == 21) {
                _level2.ftaikuu[i] = true;
              }
            }
          }
          ++j;
        }
      }
      _level2.tstrace('_level2.ftaikuu[' + i + '] = ' + _level2.ftaikuu[i]);
      if (ship_ke[i + 1] > 0) {
        j = 0;
        while (j < 4) {
          if (_level2.eSlot[i][j] > 0) {
            k = 0;
            for (;;) {
              if (!(_level1.SYS_slot_items[k].api_id != _level2.eSlot[i][j] && k < 1000)) break;
              ++k;
            }
            if (_level1.SYS_slot_items[k] != undefined) {
              if (_level1.SYS_slot_items[k].api_type[2] == 21) {
                _level2.etaikuu[i] = true;
              }
            }
          }
          ++j;
        }
      }
      ++i;
    }
    _level2.supertaikuu = new Array(6);
    i = 0;
    while (i < 6) {
      _level2.supertaikuu[i] = false;
      if (ship_ke[i + 1] > 0) {
        j = 0;
        while (j < 4) {
          if (_level2.eSlot[i][j] > 0) {
            if (_level1.SYS_slot_items[k] != undefined) {
              if (_level2.fSlot[i][j] == 48) {
                _level2.supertaikuu[i] = true;
              }
              if (_level2.fSlot[i][j] == 9) {
                _level2.supertaikuu[i] = true;
              }
              if (_level2.fSlot[i][j] == 35) {
                _level2.supertaikuu[i] = true;
              }
              if (_level2.fSlot[i][j] == 3) {
                _level2.supertaikuu[i] = true;
              }
              if (_level2.fSlot[i][j] == 10) {
                _level2.supertaikuu[i] = true;
              }
            }
          }
          ++j;
        }
      }
      _level2.tstrace('_level2.supertaikuu[' + i + '] = ' + _level2.supertaikuu[i]);
      ++i;
    }
    i = 1;
    while (i <= 6) {
      fdam_total[kk_atk[i + 6]] += kk_dam_rai[i + 6];
      edam_total[kk_atk[i]] += kk_dam_rai[i];
      fydam_total[i] += kk_dam_rai[i];
      eydam_total[i] += kk_dam_rai[i + 6];
      ++i;
    }
    i = 1;
    while (i <= 6) {
      j = 1;
      while (j <= 6) {
        fdam_total[j] += kk_dam_bak[i + 6][j];
        edam_total[j] += kk_dam_bak[i][j];
        fydam_total[i] += kk_dam_bak[i][j];
        eydam_total[i] += kk_dam_bak[i + 6][j];
        ++j;
      }
      ++i;
    }
    i = 1;
    while (i < at_list.length) {
      atk = at_list[i];
      def = df_list[i];
      dam = damage_hougeki[i];
      if (atk < 7) {
        def -= 6;
        edam_total[def] += dam;
        fydam_total[atk] += dam;
      } else {
        atk -= 6;
        fdam_total[def] += dam;
        eydam_total[atk] += dam;
      }
      ++i;
    }
    i = 1;
    while (i <= 6) {
      fdam_total[i] += fdam[i];
      edam_total[i] += edam[i];
      fydam_total[i] += fydam[i];
      eydam_total[i] += eydam[i];
      ++i;
    }
    if (here_skip) {
      gotoAndPlay('ridatsu');
    }
    if (DEFID == 'flash1') {
    }
    var boss_insert = false;
    if (_level2.isEvent() && _level2.bossmap && _level1.mapid == 2) {
      i = 0;
      while (i < eventbossids.length) {
        if (_level2.ship_ke[1] == eventbossids[i]) {
          stop();
          boss_insert = true;
          boss.tp = i;
          _level2.bosstp = i;
          break;
        }
        ++i;
      }
    }
    if (!boss_insert) {
      _level2.playVoice(_level2.flagShip, 15);
    }
  }

  movieClip 402  {
  }

  movieClip 427  {

    frame 29 {
      gotoAndPlay('type1');
    }

    frame 59 {
      gotoAndPlay('type2');
    }

    frame 89 {
      gotoAndPlay('type3');
    }

    frame 119 {
      gotoAndPlay('type4');
    }

    frame 149 {
      gotoAndPlay('type5');
    }

    frame 179 {
      gotoAndPlay('type6');
    }

    frame 209 {
      gotoAndPlay('type7');
    }

    frame 239 {
      gotoAndPlay('type8');
    }

    frame 269 {
      gotoAndPlay('type9');
    }

    frame 299 {
      gotoAndPlay('type10');
    }

    frame 329 {
      gotoAndPlay('type11');
    }
  }

  movieClip 459  {

    frame 8 {
      _level2.playSFX('battle_bomb3.mp3');
    }

    frame 30 {
      gotoAndStop(1);
    }
  }

  movieClip 460  {

    frame 1 {
      stop();
    }

    frame 5 {
      if (_level2.isEvent()) {
        if (_level1.mapid == 2) {
          gauge_frame.gotoAndPlay('type11');
          bar._y = 1;
        } else {
          gauge_frame.gotoAndPlay('type10');
          bar._y = 1;
        }
      } else {
        if (_level1.mapid == 0 || _level1.mapid == 1) {
          _level2.tstrace('b');
          gauge_frame.gotoAndPlay('type1');
        } else {
          if (_level1.mapid == 2) {
            if (_level1.questpage == 4) {
              gauge_frame.gotoAndPlay('type5');
              bar._y = 3;
            } else {
              _level2.tstrace('c');
              gauge_frame.gotoAndPlay('type2');
            }
          } else {
            if (_level1.mapid == 3) {
              _level2.tstrace('e');
              gauge_frame.gotoAndPlay('type4');
            } else {
              _level2.tstrace('e');
              gotoAndStop('off');
            }
          }
        }
      }
      bar.onEnterFrame = function () {
        if (_level2.mapHPData != null) {
          var v1 = (1 * _level2.mapHPData.mapHpNow / _level2.mapHPData.mapHpMax) * 100;
          v1 = Math.max(v1, 0);
          if (bar._xscale >= v1) {
            --bar._xscale;
          }
          if (_level2.mapHPData.mapHpNow <= 0 && _level2.nowhps[7] <= 0) {
            mapHPData.isBombed = true;
            bar._parent.play();
          }
        }
      };

    }

    frame 10 {
      _level2.gaugeExploding = true;
    }

    frame 41 {
      _level2.gaugeExploding = false;
      stop();
    }

    frame 42 {
      stop();
      bar._alpha = 0;
      bar.onEnterFrame = function () {
        if (_level2.mapHPData != null) {
          var v1 = (_level2.mapHPData.mapHpNow / _level2.mapHPData.mapHpMax) * 100;
          v1 = Math.max(v1, 0);
          if (bar._xscale >= v1) {
            --bar._xscale;
          }
          if (bar._xscale <= 0 && _level2.nowhps[7] <= 0) {
            mapHPData.isBombed = true;
            bar._parent.gotoAndPlay('zero');
          }
        }
      };

    }
  }

  movieClip 461  {
  }

  movieClip 464  {
  }

  button 466 {

    on (press) {
      _parent.play();
    }
  }
  
  // unknown tag 88 length 65

  movieClip 471  {

    frame 1 {
      ship_rank = _parent.getship[1];
      ship_name = _parent.getship[2];
      ship_talk = _parent.getship[3];
      disp = '';
    }

    frame 18 {
      if (ship_talk != '') {
        tmpchr = substring(ship_talk, 1, 1);
        ship_talk = substring(ship_talk, 2, 1000);
        disp += tmpchr;
        gotoAndPlay('mes_loop');
      }
    }

    frame 19 {
      stop();
    }
  }

  movieClip 472  {

    frame 1 {
      if (!_level2.isEvent() || !_level2.bossmap) {
        stop();
      }
    }

    frame 2 {
      if (_level2.isEvent()) {
        _level2.cutid = _level2.eventbossids[tp];
      }
      _level2.ldr1.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + _level2.cutid + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.cutid)].api_version, boss.ship);
      _level2.ldr1.addListener(_level2.lsnr1);
      _level2.lsnr1.onLoadInit = function () {
        _level2.tstrace('Loading character ' + _level2.cutid + ' artwork');
        boss.ship.gotoAndStop(10);
        boss.ship._x = _level1.SYS_ship_pos[_level1.getPosID(_level2.cutid)].api_battle_n[0] - 100;
        boss.ship._y = _level1.SYS_ship_pos[_level1.getPosID(_level2.cutid)].api_battle_n[1] + 40;
        _level2.ldr1.removeListener(_level2.lsnr1);
      };

      _level2.lsnr1.onLoadError = function () {
        _level2.tstrace('Failed to load character ' + _level2.cutid + ' artwork');
        boss.attachMovie('nodatachar', 'ship', 1);
        boss.ship._x = 440;
        boss.ship._y = 810;
        _level2.ldr1.removeListener(_level2.lsnr1);
      };

    }

    frame 7 {
      getship = new Array();
      if (_level2.isEvent()) {
        if (tp == 4 || tp == 9) {
          getship[1] = '戦艦';
          getship[2] = 'コンゴウ';
          getship[3] = '大戦艦コンゴウだ。\n貴様らに兵器の誇りを思い出させてやる。';
        } else {
          if (tp == 1 || tp == 6) {
            getship[1] = '重巡洋艦';
            getship[2] = 'マヤ';
            getship[3] = 'じゃじゃーん！\n霧の艦隊・東洋方面第一巡航艦隊所属、重巡洋艦マヤだよ～♪';
          } else {
            if (tp == 3 || tp == 8) {
              getship[1] = '戦艦';
              getship[2] = 'キリシマ';
              getship[3] = '沈みたいフネは前に出ろ！\n霧の大戦艦、キリシマが望みを叶えてやる！';
            } else {
              if (tp == 999) {
                getship[1] = '戦艦';
                getship[2] = 'ヒュウガ';
                getship[3] = '…';
              } else {
                if (tp == 2 || tp == 7) {
                  getship[1] = '戦艦';
                  getship[2] = 'ハルナ';
                  getship[3] = '大戦艦ハルナ……来たよ。';
                }
              }
            }
          }
        }
      }
    }

    frame 28 {
      if (_level2.isEvent()) {
        _level2.playVoiceE(7, _level2.eventbossids[tp], [2], null);
      }
    }

    frame 37 {
      stop();
    }

    frame 55 {
      stop();
      _parent.play();
    }
  }

  frame 43 {
  }

  frame 44 {
  }

  frame 45 {
  }

  frame 47 {
    _level2.tstrace('Frame: 2_sakuteki');
  }
  
  // unknown tag 88 length 64

  movieClip 477  {
  }

  movieClip 480  {

    frame 1 {
      if (_level2.sokuhanFlag) {
        stop();
      } else {
        gotoAndPlay(2);
      }
    }

    frame 5 {
      stop();
    }
  }

  movieClip 481  {

    frame 1 {
      if (_level2.sokuhanFlag) {
        stop();
      } else {
        gotoAndPlay(2);
      }
    }

    frame 10 {
      stop();
    }
  }

  movieClip 482  {

    frame 1 {
      if (_level2.sokuhanFlag) {
        stop();
      } else {
        gotoAndPlay(2);
      }
    }

    frame 15 {
      stop();
    }
  }

  movieClip 483  {

    frame 1 {
      if (_level2.sokuhanFlag) {
        stop();
      } else {
        gotoAndPlay(2);
      }
    }

    frame 20 {
      stop();
    }
  }

  movieClip 484  {

    frame 1 {
      if (_level2.sokuhanFlag) {
        stop();
      } else {
        gotoAndPlay(2);
      }
    }

    frame 25 {
      stop();
    }
  }

  movieClip 485  {

    frame 1 {
      if (_level2.sokuhanFlag) {
        stop();
      } else {
        gotoAndPlay(2);
      }
    }

    frame 30 {
      stop();
    }
  }

  movieClip 486  {

    frame 1 {
      stop();
    }

    frame 2 {
      ships = _level2.shipNumOfThis - 1;
      jin = _level2.cjin;
      gotoAndStop(jin * 10 + ships);
    }
  }

  movieClip 487  {

    frame 1 {
      flg = 0;
    }

    frame 19 {
      if (_level2.yasen_special || _level2.yasen_reversal) {
        stop();
      }
    }

    frame 25 {
      flg = 1;
      stop();
    }
  }

  movieClip 490  {

    frame 1 {
      if (_level2.sokuhanFlag) {
        stop();
      } else {
        gotoAndPlay(2);
      }
    }

    frame 5 {
      stop();
    }
  }

  movieClip 491  {

    frame 1 {
      if (_level2.sokuhanFlag) {
        stop();
      } else {
        gotoAndPlay(2);
      }
    }

    frame 10 {
      stop();
    }
  }

  movieClip 492  {

    frame 1 {
      if (_level2.sokuhanFlag) {
        stop();
      } else {
        gotoAndPlay(2);
      }
    }

    frame 15 {
      stop();
    }
  }

  movieClip 493  {

    frame 1 {
      if (_level2.sokuhanFlag) {
        stop();
      } else {
        gotoAndPlay(2);
      }
    }

    frame 20 {
      stop();
    }
  }

  movieClip 494  {

    frame 1 {
      if (_level2.sokuhanFlag) {
        stop();
      } else {
        gotoAndPlay(2);
      }
    }

    frame 25 {
      stop();
    }
  }

  movieClip 495  {

    frame 1 {
      if (_level2.sokuhanFlag) {
        stop();
      } else {
        gotoAndPlay(2);
      }
    }

    frame 30 {
      stop();
    }
  }

  movieClip 496  {

    frame 1 {
      stop();
    }

    frame 2 {
      ships = _level2.enemyShipNum - 1;
      jin = _level2.jin_enemy;
      gotoAndStop(jin * 10 + ships);
    }
  }

  movieClip 497  {

    frame 1 {
      flg = 0;
    }

    frame 19 {
      if (_level2.yasen_special || _level2.yasen_reversal) {
        stop();
      }
    }

    frame 20 {
      stop();
    }

    frame 25 {
      flg = 1;
      stop();
    }
  }

  movieClip 500  {
  }

  movieClip 501  {

    frame 1 {
      stop();
      flag = 0;
    }

    frame 39 {
      flag = 1;
      chk = 0;
      stop();
    }

    frame 47 {
      det = random(61) + 60;
    }

    frame 51 {
      ++chk;
      if (chk < det) {
        gotoAndPlay('wloop2');
      } else {
        chk = 0;
      }
    }

    frame 110 {
      gotoAndPlay('wloop');
    }
  }

  movieClip 502  {

    frame 1 {
      stop();
      flag = 0;
    }

    instance rader_f of movieClip 487  {
    }

    instance rader_e of movieClip 497  {
    }

    frame 2 {
      _level2.tstrace('radar frame 2');
    }

    frame 4 {
      stop();
    }

    frame 11 {
      stop();
    }
  }

  frame 48 {
    if (_level2.yasen_reversal) {
      _level2.tstrace('Frame: yasen_reversal_entry');
      _level2.tshipnum = null;
      _level2.scene = _level2.SCENE_BATTLE;
      if (_level2.bossmap || _level2.isEvent()) {
        _level2.playBGMAtPos(_level2.lastBGMName, true, _level1.bgmVolume, _level2.bossbgmpos);
      }
      start_shutter._visible = false;
      round = 1;
      shinro = -1;
      raiflag = false;
      wepID = -1;
      i = 1;
      while (i <= 6) {
        fdam_total[kk_atk[i + 6]] += kk_dam_rai[i + 6];
        edam_total[kk_atk[i]] += kk_dam_rai[i];
        fydam_total[i] += kk_dam_rai[i];
        eydam_total[i] += kk_dam_rai[i + 6];
        ++i;
      }
      i = 1;
      while (i <= 6) {
        j = 1;
        while (j <= 6) {
          fdam_total[j] += kk_dam_bak[i + 6][j];
          edam_total[j] += kk_dam_bak[i][j];
          fydam_total[i] += kk_dam_bak[i][j];
          eydam_total[i] += kk_dam_bak[i + 6][j];
          ++j;
        }
        ++i;
      }
      i = 1;
      while (i < at_list.length) {
        atk = at_list[i];
        def = df_list[i];
        dam = damage_hougeki[i];
        if (atk < 7) {
          def -= 6;
          edam_total[def] += dam;
          fydam_total[atk] += dam;
        } else {
          atk -= 6;
          fdam_total[def] += dam;
          eydam_total[atk] += dam;
        }
        ++i;
      }
      i = 1;
      while (i <= 6) {
        fdam_total[i] += fdam[i];
        edam_total[i] += edam[i];
        fydam_total[i] += fydam[i];
        eydam_total[i] += eydam[i];
        ++i;
      }
      if (mapHPData != null && (_level2.isEvent() || _level1.questpage == 3 && _level1.mapid == 3 || _level1.questpage == 4 && _level1.mapid == 1 || _level1.questpage == 4 && _level1.mapid == 2) && _level2.bossmap && mapHPData.isDisplay) {
        if (mapHPData.mapHpNow > 0) {
          _level2.mapHP_mc.gotoAndStop('disp');
        } else {
          if (mapHPData.mapHpNowFrom > 0) {
            if (mapHPData.isBombed) {
              _level2.mapHP_mc.gotoAndStop('off');
            } else {
              _level2.mapHP_mc.gotoAndStop('zero2');
            }
          } else {
            _level2.mapHP_mc.gotoAndStop('off');
          }
        }
      } else {
        _level2.mapHP_mc.gotoAndStop('off');
      }
      i = 0;
      while (i < 6) {
        if (_level2.nowhps[i + 1] <= 0) {
          _level2.ftaikuu[i] = false;
          _level2.supertaikuu[i] = false;
        }
        if (_level2.nowhps[i + 7] <= 0) {
          _level2.etaikuu[i] = false;
        }
        ++i;
      }
    }
  }

  frame 49 {
    _level2.banldr1 = new MovieClipLoader();
    _level2.banlsnr1 = new Object();
    _level2.banid1 = ship_kf[1] - 1;
    _level2.banldr1.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + _level2.banid1 + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.banid1)].api_version, f1.ship.girl);
    _level2.banldr1.addListener(_level2.banlsnr1);
    _level2.banlsnr1.onLoadInit = function () {
      _level2.tstrace('Loading character ' + _level2.banid1 + ' banner artwork');
      if (_level2.taihastate[0]) {
        _level2.f1.ship.girl.gotoAndStop(3);
        _level2.f1.ship.girl._x = 0;
        _level2.f1.ship.girl._y = 0;
      } else {
        _level2.f1.ship.girl.gotoAndStop(2);
        _level2.f1.ship.girl._x = 0;
        _level2.f1.ship.girl._y = 0;
      }
      _level2.banldr1.removeListener(_level2.banlsnr1);
    };

    _level2.banlsnr1.onLoadError = function () {
      _level2.tstrace('Failed to load character ' + _level2.banid1 + ' banner artwork');
      _level2.f1.ship.attachMovie('nodatabanner', 'girl', 1);
      _level2.f1.ship.girl._x = 0;
      _level2.f1.ship.girl._y = 0;
      _level2.banldr1.removeListener(_level2.banlsnr1);
    };

    _level2.banldr2 = new MovieClipLoader();
    _level2.banlsnr2 = new Object();
    if (ship_kf[2] != -1) {
      _level2.banid2 = ship_kf[2] - 1;
      _level2.banldr2.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + _level2.banid2 + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.banid2)].api_version, f2.ship.girl);
      _level2.banldr2.addListener(_level2.banlsnr2);
      _level2.banlsnr2.onLoadInit = function () {
        _level2.tstrace('Loading character ' + _level2.banid2 + ' banner artwork');
        if (_level2.taihastate[1]) {
          _level2.f2.ship.girl.gotoAndStop(3);
          _level2.f2.ship.girl._x = 0;
          _level2.f2.ship.girl._y = 0;
        } else {
          _level2.f2.ship.girl.gotoAndStop(2);
          _level2.f2.ship.girl._x = 0;
          _level2.f2.ship.girl._y = 0;
        }
        _level2.banldr2.removeListener(_level2.banlsnr2);
      };

      _level2.banlsnr2.onLoadError = function () {
        _level2.tstrace('Failed to load character ' + _level2.banid2 + ' banner artwork');
        _level2.f2.ship.attachMovie('nodatabanner', 'girl', 1);
        _level2.f2.ship.girl._x = 0;
        _level2.f2.ship.girl._y = 0;
        _level2.banldr2.removeListener(_level2.banlsnr2);
      };

    }
    _level2.banldr3 = new MovieClipLoader();
    _level2.banlsnr3 = new Object();
    if (ship_kf[3] != -1) {
      _level2.banid3 = ship_kf[3] - 1;
      _level2.banldr3.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + _level2.banid3 + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.banid3)].api_version, f3.ship.girl);
      _level2.banldr3.addListener(_level2.banlsnr3);
      _level2.banlsnr3.onLoadInit = function () {
        _level2.tstrace('Loading character ' + _level2.banid3 + ' banner artwork');
        if (_level2.taihastate[2]) {
          _level2.f3.ship.girl.gotoAndStop(3);
          _level2.f3.ship.girl._x = 0;
          _level2.f3.ship.girl._y = 0;
        } else {
          _level2.f3.ship.girl.gotoAndStop(2);
          _level2.f3.ship.girl._x = 0;
          _level2.f3.ship.girl._y = 0;
        }
        _level2.banldr3.removeListener(_level2.banlsnr3);
      };

      _level2.banlsnr3.onLoadError = function () {
        _level2.tstrace('Failed to load character ' + _level2.banid3 + ' banner artwork');
        _level2.f3.ship.attachMovie('nodatabanner', 'girl', 1);
        _level2.f3.ship.girl._x = 0;
        _level2.f3.ship.girl._y = 0;
        _level2.banldr3.removeListener(_level2.banlsnr3);
      };

    }
    _level2.banldr4 = new MovieClipLoader();
    _level2.banlsnr4 = new Object();
    if (ship_kf[4] != -1) {
      _level2.banid4 = ship_kf[4] - 1;
      _level2.banldr4.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + _level2.banid4 + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.banid4)].api_version, f4.ship.girl);
      _level2.banldr4.addListener(_level2.banlsnr4);
      _level2.banlsnr4.onLoadInit = function () {
        _level2.tstrace('Loading character ' + _level2.banid4 + ' banner artwork');
        if (_level2.taihastate[3]) {
          _level2.f4.ship.girl.gotoAndStop(3);
          _level2.f4.ship.girl._x = 0;
          _level2.f4.ship.girl._y = 0;
        } else {
          _level2.f4.ship.girl.gotoAndStop(2);
          _level2.f4.ship.girl._x = 0;
          _level2.f4.ship.girl._y = 0;
        }
        _level2.banldr4.removeListener(_level2.banlsnr4);
      };

      _level2.banlsnr4.onLoadError = function () {
        _level2.tstrace('Failed to load character ' + _level2.banid4 + ' banner artwork');
        _level2.f4.ship.attachMovie('nodatabanner', 'girl', 1);
        _level2.f4.ship.girl._x = 0;
        _level2.f4.ship.girl._y = 0;
        _level2.banldr4.removeListener(_level2.banlsnr4);
      };

    }
    _level2.banldr5 = new MovieClipLoader();
    _level2.banlsnr5 = new Object();
    if (ship_kf[5] != -1) {
      _level2.banid5 = ship_kf[5] - 1;
      _level2.banldr5.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + _level2.banid5 + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.banid5)].api_version, f5.ship.girl);
      _level2.banldr5.addListener(_level2.banlsnr5);
      _level2.banlsnr5.onLoadInit = function () {
        _level2.tstrace('Loading character ' + _level2.banid5 + ' banner artwork');
        if (_level2.taihastate[4]) {
          _level2.f5.ship.girl.gotoAndStop(3);
          _level2.f5.ship.girl._x = 0;
          _level2.f5.ship.girl._y = 0;
        } else {
          _level2.f5.ship.girl.gotoAndStop(2);
          _level2.f5.ship.girl._x = 0;
          _level2.f5.ship.girl._y = 0;
        }
        _level2.banldr5.removeListener(_level2.banlsnr5);
      };

      _level2.banlsnr5.onLoadError = function () {
        _level2.tstrace('Failed to load character ' + _level2.banid5 + ' banner artwork');
        _level2.f5.ship.attachMovie('nodatabanner', 'girl', 1);
        _level2.f5.ship.girl._x = 0;
        _level2.f5.ship.girl._y = 0;
        _level2.banldr5.removeListener(_level2.banlsnr5);
      };

    }
    _level2.banldr6 = new MovieClipLoader();
    _level2.banlsnr6 = new Object();
    if (ship_kf[6] != -1) {
      _level2.banid6 = ship_kf[6] - 1;
      _level2.banldr6.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + _level2.banid6 + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.banid6)].api_version, f6.ship.girl);
      _level2.banldr6.addListener(_level2.banlsnr6);
      _level2.banlsnr6.onLoadInit = function () {
        _level2.tstrace('Loading character ' + _level2.banid6 + ' banner artwork');
        if (_level2.taihastate[5]) {
          _level2.f6.ship.girl.gotoAndStop(3);
          _level2.f6.ship.girl._x = 0;
          _level2.f6.ship.girl._y = 0;
        } else {
          _level2.f6.ship.girl.gotoAndStop(2);
          _level2.f6.ship.girl._x = 0;
          _level2.f6.ship.girl._y = 0;
        }
        _level2.banldr6.removeListener(_level2.banlsnr6);
      };

      _level2.banlsnr6.onLoadError = function () {
        _level2.tstrace('Failed to load character ' + _level2.banid6 + ' banner artwork');
        _level2.f6.ship.attachMovie('nodatabanner', 'girl', 1);
        _level2.f6.ship.girl._x = 0;
        _level2.f6.ship.girl._y = 0;
        _level2.banldr6.removeListener(_level2.banlsnr6);
      };

    }
    _level2.banldr7 = new MovieClipLoader();
    _level2.banlsnr7 = new Object();
    _level2.banid7 = ship_ke[1];
    if (!_level1.npc_battle) {
      --_level2.banid7;
    }
    _level2.banldr7.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + _level2.banid7 + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.banid7)].api_version, e1.ship.girl);
    _level2.banldr7.addListener(_level2.banlsnr7);
    _level2.banlsnr7.onLoadInit = function () {
      _level2.tstrace('Loading character ' + _level2.banid7 + ' banner artwork');
      _level2.e1.ship.girl.gotoAndStop(2);
      _level2.e1.ship.girl._x = 0;
      _level2.e1.ship.girl._y = 0;
      _level2.banldr7.removeListener(_level2.banlsnr7);
    };

    _level2.banlsnr7.onLoadError = function () {
      _level2.tstrace('Failed to load character ' + _level2.banid7 + ' banner artwork');
      _level2.e1.ship.attachMovie('nodatabanner', 'girl', 1);
      _level2.e1.ship.girl._x = 0;
      _level2.e1.ship.girl._y = 0;
      _level2.banldr7.removeListener(_level2.banlsnr7);
    };

    if (ship_ke[2] != -1) {
      _level2.banldr8 = new MovieClipLoader();
      _level2.banlsnr8 = new Object();
      _level2.banid8 = ship_ke[2];
      if (!_level1.npc_battle) {
        --_level2.banid8;
      }
      _level2.banldr8.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + _level2.banid8 + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.banid8)].api_version, e2.ship.girl);
      _level2.banldr8.addListener(_level2.banlsnr8);
      _level2.banlsnr8.onLoadInit = function () {
        _level2.tstrace('Loading character ' + _level2.banid8 + ' banner artwork');
        _level2.e2.ship.girl.gotoAndStop(2);
        _level2.e2.ship.girl._x = 0;
        _level2.e2.ship.girl._y = 0;
        _level2.banldr8.removeListener(_level2.banlsnr8);
      };

      _level2.banlsnr8.onLoadError = function () {
        _level2.tstrace('Failed to load character ' + _level2.banid8 + ' banner artwork');
        _level2.e2.ship.attachMovie('nodatabanner', 'girl', 1);
        _level2.e2.ship.girl._x = 0;
        _level2.e2.ship.girl._y = 0;
        _level2.banldr8.removeListener(_level2.banlsnr8);
      };

    }
    if (ship_ke[3] != -1) {
      _level2.banldr9 = new MovieClipLoader();
      _level2.banlsnr9 = new Object();
      _level2.banid9 = ship_ke[3];
      if (!_level1.npc_battle) {
        --_level2.banid9;
      }
      _level2.banldr9.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + _level2.banid9 + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.banid9)].api_version, e3.ship.girl);
      _level2.banldr9.addListener(_level2.banlsnr9);
      _level2.banlsnr9.onLoadInit = function () {
        _level2.tstrace('Loading character ' + _level2.banid9 + ' banner artwork');
        _level2.e3.ship.girl.gotoAndStop(2);
        _level2.e3.ship.girl._x = 0;
        _level2.e3.ship.girl._y = 0;
        _level2.banldr9.removeListener(_level2.banlsnr9);
      };

      _level2.banlsnr9.onLoadError = function () {
        _level2.tstrace('Failed to load character ' + _level2.banid9 + ' banner artwork');
        _level2.e3.ship.attachMovie('nodatabanner', 'girl', 1);
        _level2.e3.ship.girl._x = 0;
        _level2.e3.ship.girl._y = 0;
        _level2.banldr9.removeListener(_level2.banlsnr9);
      };

    }
    if (ship_ke[4] != -1) {
      _level2.banldr10 = new MovieClipLoader();
      _level2.banlsnr10 = new Object();
      _level2.banid10 = ship_ke[4];
      if (!_level1.npc_battle) {
        --_level2.banid10;
      }
      _level2.banldr10.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + _level2.banid10 + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.banid10)].api_version, e4.ship.girl);
      _level2.banldr10.addListener(_level2.banlsnr10);
      _level2.banlsnr10.onLoadInit = function () {
        _level2.tstrace('Loading character ' + _level2.banid10 + ' banner artwork');
        _level2.e4.ship.girl.gotoAndStop(2);
        _level2.e4.ship.girl._x = 0;
        _level2.e4.ship.girl._y = 0;
        _level2.banldr10.removeListener(_level2.banlsnr10);
      };

      _level2.banlsnr10.onLoadError = function () {
        _level2.tstrace('Failed to load character ' + _level2.banid10 + ' banner artwork');
        _level2.e4.ship.attachMovie('nodatabanner', 'girl', 1);
        _level2.e4.ship.girl._x = 0;
        _level2.e4.ship.girl._y = 0;
        _level2.banldr10.removeListener(_level2.banlsnr10);
      };

    }
    if (ship_ke[5] != -1) {
      _level2.banldr11 = new MovieClipLoader();
      _level2.banlsnr11 = new Object();
      _level2.banid11 = ship_ke[5];
      if (!_level1.npc_battle) {
        --_level2.banid11;
      }
      _level2.banldr11.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + _level2.banid11 + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.banid11)].api_version, e5.ship.girl);
      _level2.banldr11.addListener(_level2.banlsnr11);
      _level2.banlsnr11.onLoadInit = function () {
        _level2.tstrace('Loading character ' + _level2.banid11 + ' banner artwork');
        _level2.e5.ship.girl.gotoAndStop(2);
        _level2.e5.ship.girl._x = 0;
        _level2.e5.ship.girl._y = 0;
        _level2.banldr11.removeListener(_level2.banlsnr11);
      };

      _level2.banlsnr11.onLoadError = function () {
        _level2.tstrace('Failed to load character ' + _level2.banid11 + ' banner artwork');
        _level2.e5.ship.attachMovie('nodatabanner', 'girl', 1);
        _level2.e5.ship.girl._x = 0;
        _level2.e5.ship.girl._y = 0;
        _level2.banldr11.removeListener(_level2.banlsnr11);
      };

    }
    if (ship_ke[6] != -1) {
      _level2.banldr12 = new MovieClipLoader();
      _level2.banlsnr12 = new Object();
      _level2.banid12 = ship_ke[6];
      if (!_level1.npc_battle) {
        --_level2.banid12;
      }
      _level2.banldr12.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + _level2.banid12 + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.banid12)].api_version, e6.ship.girl);
      _level2.banldr12.addListener(_level2.banlsnr12);
      _level2.banlsnr12.onLoadInit = function () {
        _level2.tstrace('Loading character ' + _level2.banid12 + ' banner artwork');
        _level2.e6.ship.girl.gotoAndStop(2);
        _level2.e6.ship.girl._x = 0;
        _level2.e6.ship.girl._y = 0;
        _level2.banldr12.removeListener(_level2.banlsnr12);
      };

      _level2.banlsnr12.onLoadError = function () {
        _level2.tstrace('Failed to load character ' + _level2.banid12 + ' banner artwork');
        _level2.e6.ship.attachMovie('nodatabanner', 'girl', 1);
        _level2.e6.ship.girl._x = 0;
        _level2.e6.ship.girl._y = 0;
        _level2.banldr12.removeListener(_level2.banlsnr12);
      };

    }
  }

  movieClip 503  {
  }

  movieClip 518  {

    frame 1 {
      dd = 1;
      chk = _parent._currentframe;
    }

    frame 2 {
      if (chk == 5 || chk == 10) {
        gotoAndPlay(3);
      } else {
        if (chk == 6 || chk == 11) {
          gotoAndPlay(18);
        } else {
          gotoAndPlay(27);
        }
      }
    }

    frame 71 {
      gotoAndPlay(2);
    }
  }

  movieClip 533  {

    frame 1 {
      stop();
    }

    instance smoke of movieClip 518  {
    }

    instance smoke of movieClip 518  {
    }
  }

  movieClip 540  {

    frame 1 {
      stop();
    }
  }

  movieClip 545  {

    frame 40 {
      gotoAndPlay('ga4');
    }

    frame 80 {
      gotoAndPlay('ga3');
    }

    frame 120 {
      gotoAndPlay('ga2');
    }

    frame 122 {
      stop();
    }
  }

  movieClip 552  {

    frame 1 {
      stop();
    }

    instance ga of movieClip 545  {

      onClipEvent (load) {
        goflag = true;
      }

      onClipEvent (enterFrame) {
        if (goflag) {
          goflag = false;
          if (per < 11) {
            this.gotoAndPlay('ga4');
          } else {
            if (per < 26) {
              this.gotoAndPlay('ga3');
            } else {
              if (per < 41) {
                this.gotoAndPlay('ga2');
              } else {
                this.gotoAndPlay('ga1');
              }
            }
          }
        }
      }
    }
  }

  movieClip 555  {

    frame 2 {
      if (_parent.sid > 10000) {
        _parent.now_con.gotoAndStop(1);
      } else {
        shipInfo = _level1.FULL_my_ship[_parent.sid];
        var kid = shipInfo.api_ship_id;
        flagflag = false;
        var i = 0;
        while (i < _level2.myDeckNum) {
          var chk = _level2.myDeck[i].api_flagship;
          if (chk == shipInfo.api_id) {
            flagflag = true;
          }
          var chk = _level2.myDeck[i].api_mis[0];
          if (chk > 0) {
            misflag = true;
          }
          ++i;
        }
        if (flagflag) {
          _parent.flagmark.gotoAndStop(2);
        }
        chk = _level1.getCondition2(_parent.sid);
        _parent.now_con.gotoAndStop(chk);
        if (chk == 8) {
          var filter = _level2.setMyFilter(0);
        } else {
          var filter = _level2.setMyFilter(1);
        }
      }
    }

    frame 3 {
      stop();
    }

    frame 4 {
      sid = _parent.sid;
      if (sid > 10000) {
        sid -= 10000;
      }
      shipid = _parent._parent.shipid;
      if (shipid == 1) {
        gaege.gotoAndStop(2);
        _parent.flagmark.gotoAndStop(2);
      } else {
        if (shipid < 7) {
          gaege.gotoAndStop(1);
        } else {
          if (shipid == 7) {
            gaege.gotoAndStop(4);
            _parent.flagmark.gotoAndStop(2);
          } else {
            gaege.gotoAndStop(3);
          }
        }
      }
      _parent.now_con.gotoAndStop(1);
      nowhp = _level2.nowhps[shipid];
      maxhp = _level2.maxhps[shipid];
      if (oldhp == -99999) {
        oldhp = nowhp;
      }
      if (oldhp != nowhp) {
        _level2.tstrace(oldhp + '(' + nowhp + ')/' + maxhp);
        oldhp += (nowhp - oldhp) / lim;
        --lim;
      } else {
        oldhp = nowhp;
        lim = 20;
      }
      if (maxhp && maxhp > 0) {
        per = Math.round(oldhp * 100 / maxhp) + 1;
        if (oldhp <= 0) {
          per = 1;
        }
        gaege.gaege.gotoAndStop(per);
        gaege.ga.per = per;
      }
      ch = _level1.getCondition(oldhp, maxhp);
      if (_level1.npc_battle && shipid > 6) {
        _parent.now_con.gotoAndStop(ch + 3 + _level2.airbaseOffset(_level2.ship_ke[shipid - 6]));
      } else {
        _parent.now_con.gotoAndStop(ch + 3);
      }
      if (ch > 2) {
        _parent.girl.gotoAndStop(3);
      }
      var filter = _level1.setMyFilter(1);
      if (_level2.scene != SCENE_RESULT) {
        if (oldhp <= 0) {
          var filter = _level1.setMyFilter(0);
        }
      }
      if (_level2.scene == SCENE_RESULT) {
        if (shipid <= 6) {
          if (_level2.gekichinstate[shipid - 1]) {
            filter = _level1.setMyFilter(0.5);
          } else {
            filter = _level1.setMyFilter(1);
          }
        } else {
          if (_level2.nowhps[shipid] <= 0) {
            filter = _level1.setMyFilter(0.5);
          } else {
            filter = _level1.setMyFilter(1);
          }
        }
      }
      _parent.girl.filters = [filter];
      nowhp = Math.max(0, nowhp);
      if (_level2.scene != _level2.SCENE_RESULT && (_level1.npc_battle && shipid > 6 && _level2.nowhps[shipid] <= 0 || _level2.gekichinstate[shipid - 1] == true)) {
        if (_level1.npc_battle && shipid > 6) {
          _parent.now_con.gotoAndStop(8 + _level2.airbaseOffset(_level2.ship_ke[shipid - 6]));
        } else {
          _parent.now_con.gotoAndStop(8);
        }
      }
      tte.antiAliasType = 'advanced';
      ttf.antiAliasType = 'advanced';
    }

    frame 6 {
      gotoAndPlay(4);
      if (shipid < 7) {
        ttf = nowhp + ' / ' + maxhp;
        tte = '';
      } else {
        ttf = '';
        tte = nowhp + ' / ' + maxhp;
      }
    }
  }

  movieClip 558  {

    frame 1 {
      stop();
    }
  }

  movieClip 561  {
  }

  movieClip 562  {

    frame 1 {
      det = random(180) + 150;
      i = 0;
    }

    frame 2 {
      ++i;
    }

    frame 3 {
      if (i < det) {
        gotoAndPlay(2);
      }
    }
  }

  movieClip 563  {

    frame 1 {
      stop();
    }

    frame 3 {
      _level2.playSFX('battle_dip.mp3');
    }

    frame 10 {
      stop();
      if (_parent._parent.jin == 1) {
        bubble._x = 0;
        bubble._xscale = -100;
      }
    }

    frame 21 {
      stop();
    }
  }

  movieClip 564  {

    frame 1 {
      stop();
    }

    instance contr of movieClip 555  {

      onClipEvent (load) {
        i = 0;
      }

      onClipEvent (enterFrame) {
        ++i;
        oldhp = -99999;
      }
    }
  }

  movieClip 569  {

    frame 1 {
      stop();
    }
  }

  movieClip 570  {

    frame 25 {
      ++_level2.goflag;
      stop();
    }

    frame 50 {
      ++_level2.goflag;
      stop();
    }
  }

  movieClip 572  {
  }

  movieClip 573  {

    instance of movieClip 572  {

      onClipEvent (load) {
        _alpha = 0;
        goalFlag = false;
      }

      onClipEvent (enterFrame) {
        if (goalFlag) {
          _alpha = _alpha - 8;
        } else {
          _alpha = _alpha + 15;
          if (_alpha >= 100) {
            goalFlag = true;
          }
        }
      }
    }
  }

  movieClip 577  {

    frame 1 {
      jin = 0;
      ship._visible = false;
    }

    frame 2 {
      stop();
    }

    frame 3 {
      _level2.tstrace('Frame: comein for ship ' + shipid);
      if (jin == 0) {
        gotoAndPlay('comein_f');
      } else {
        gotoAndPlay('comein_e');
      }
    }

    frame 4 {
      _level2.tstrace('Frame: comein_f for ship ' + shipid);
      ship._visible = true;
      _level2.playSFX('battle_card.mp3');
    }

    frame 12 {
      gotoAndPlay('default');
    }

    frame 13 {
      _level2.tstrace('Frame: comein_e for ship ' + shipid);
      ship._visible = true;
    }

    frame 21 {
      gotoAndPlay('default');
    }

    frame 22 {
      _level2.tstrace('Frame: default for ship ' + shipid);
    }

    frame 23 {
      stop();
    }

    frame 25 {
      _level2.tstrace('Frame: attack for ship ' + shipid);
      if (jin == 0) {
        gotoAndPlay('attack_f');
      } else {
        gotoAndPlay('attack_e');
      }
    }

    frame 26 {
      _level2.tstrace('Frame: attack_f for ship ' + shipid);
    }

    frame 30 {
      stop();
    }

    frame 31 {
      _level2.tstrace('Frame: attack_e for ship ' + shipid);
    }

    frame 35 {
      stop();
    }

    frame 36 {
      _level2.tstrace('Frame: attack_f2 for ship ' + shipid);
    }

    frame 53 {
      stop();
    }

    frame 54 {
      _level2.tstrace('Frame: attack_e2 for ship ' + shipid);
    }

    frame 72 {
      stop();
    }

    frame 73 {
      _level2.tstrace('Frame: effect for ship ' + shipid);
    }

    frame 74 {
      if (jin == 0) {
        gotoAndPlay('effect_f');
      } else {
        gotoAndPlay('effect_e');
      }
    }

    frame 75 {
      _level2.tstrace('Frame: effect_f for ship ' + shipid);
    }

    frame 90 {
      eff.ef.gotoAndStop(1);
      if (_level2.canSearch == 0) {
        eff.play();
      } else {
        eff.gotoAndPlay('down');
      }
    }

    frame 91 {
      stop();
    }

    frame 92 {
      _level2.tstrace('Frame: effect_e for ship ' + shipid);
    }

    frame 106 {
      if (_level2.canSearch == 0) {
        eff.gotoAndPlay('down');
      } else {
        eff.play();
      }
    }

    frame 107 {
      stop();
    }

    frame 108 {
      _level2.tstrace('Frame: ex_f for ship ' + shipid);
      if (_level2.scene == _level2.SCENE_YASEN && _level2.chouFlag) {
        _parent['bomb' + shipid].gotoAndPlay('hhh');
      } else {
        if (_level2.scene == _level2.SCENE_YASEN && _level2.chouFlag2) {
          _parent['bomb' + shipid].gotoAndPlay('oth2');
        } else {
          if (bp == 1) {
            _parent['bomb' + shipid].gotoAndPlay('ex_s');
          } else {
            if (bp == 2) {
              _parent['bomb' + shipid].gotoAndPlay('ex_m');
            } else {
              if (bp == 3) {
                _parent['bomb' + shipid].gotoAndPlay('ex_l');
              } else {}
            }
          }
        }
      }
    }

    instance of movieClip 573  {

      onClipEvent (enterFrame) {
        _x = _parent.ship._x;
        _y = _parent.ship._y;
      }
    }

    frame 128 {
      if (_level2.scene == _level2.SCENE_YASEN && _level2.chouFlag) {
      } else {
        stop();
        if (!_level2.shienphase) {
          _level2.play();
        }
      }
    }

    frame 141 {
      stop();
      if (!_level2.shienphase) {
        _level2.play();
      }
    }

    frame 142 {
      _level2.tstrace('Frame: ex_e for ship ' + shipid);
      if (_level2.scene == _level2.SCENE_YASEN && _level2.chouFlag) {
        _parent['bomb' + shipid].gotoAndPlay('hhh');
      } else {
        if (_level2.scene == _level2.SCENE_YASEN && _level2.chouFlag2) {
          _parent['bomb' + shipid].gotoAndPlay('oth1');
        } else {
          if (bp == 1) {
            _parent['bomb' + shipid].gotoAndPlay('ex_s2');
          } else {
            if (bp == 2) {
              _parent['bomb' + shipid].gotoAndPlay('ex_m');
            } else {
              if (bp == 3) {
                _parent['bomb' + shipid].gotoAndPlay('ex_l');
              } else {}
            }
          }
        }
      }
    }

    frame 162 {
      if (_level2.scene == _level2.SCENE_YASEN && _level2.chouFlag) {
      } else {
        stop();
        if (!_level2.shienphase) {
          _level2.play();
        }
      }
    }

    frame 176 {
      stop();
      if (!_level2.shienphase) {
        _level2.play();
      }
    }

    frame 177 {
      _level2.tstrace('Frame: raigeki for ship ' + shipid);
    }

    frame 179 {
      gotoAndPlay('raigeki');
    }

    frame 180 {
      _level2.tstrace('Frame: gyorai_hit for ship ' + shipid);
      flg = 0;
      if (bp == 1) {
        _parent['bomb' + shipid].gotoAndPlay('ex_s2');
      } else {
        if (bp == 2) {
          _parent['bomb' + shipid].gotoAndPlay('ex_m');
        } else {
          if (bp == 3) {
            _parent['bomb' + shipid].gotoAndPlay('ex_l');
          } else {}
        }
      }
    }

    instance of movieClip 573  {

      onClipEvent (enterFrame) {
        _x = _parent.ship._x;
        _y = _parent.ship._y;
      }
    }

    frame 201 {
      flg = 1;
      stop();
    }

    frame 202 {
      _level2.tstrace('Frame: raigeki2 for ship ' + shipid);
      if (_level2.scene == _level2.SCENE_YASEN) {
        _level2.playSFX('battle_gyorai.mp3');
      }
    }

    frame 208 {
      gotoAndStop('default');
    }

    frame 209 {
      _level2.tstrace('Frame: raigeki3 for ship ' + shipid);
      if (_level2.scene == _level2.SCENE_YASEN) {
        _level2.playSFX('battle_gyorai.mp3');
      }
    }

    frame 215 {
      gotoAndStop('default');
    }

    frame 216 {
      _level2.tstrace('Frame: taikuu1 for ship ' + shipid);
    }

    frame 222 {
      gotoAndStop('default');
    }

    frame 223 {
      _level2.tstrace('Frame: taikuu2 for ship ' + shipid);
    }

    frame 229 {
      gotoAndStop('default');
    }

    frame 230 {
      _level2.tstrace('Frame: preblock_f for ship ' + shipid);
    }

    frame 234 {
      _level2.tstrace('Frame: preblock_phase2_f for ship ' + shipid);
      stop();
    }

    frame 241 {
      stop();
    }

    frame 242 {
      _level2.tstrace('Frame: preblock_e for ship ' + shipid);
    }

    frame 246 {
      _level2.tstrace('Frame: preblock_phase2_e for ship ' + shipid);
      stop();
    }

    frame 253 {
      stop();
    }

    frame 254 {
      _level2.tstrace('Frame: block_f for ship ' + shipid);
      if (shipid != 1) {
      }
    }

    frame 259 {
      if (_level2.scene == _level2.SCENE_YASEN && _level2.chouFlag) {
        _parent['bomb' + shipid].gotoAndPlay('hhh');
      } else {
        if (_level2.scene == _level2.SCENE_YASEN && _level2.chouFlag2) {
          _parent['bomb' + shipid].gotoAndPlay('oth2');
        } else {
          if (bp == 1) {
            _parent['bomb' + shipid].gotoAndPlay('ex_s');
          } else {
            if (bp == 2) {
              _parent['bomb' + shipid].gotoAndPlay('ex_m');
            } else {
              if (bp == 3) {
                _parent['bomb' + shipid].gotoAndPlay('ex_l');
              } else {}
            }
          }
        }
      }
    }

    frame 273 {
      stop();
      if (!_level2.shienphase) {
        _level2.play();
      }
    }

    frame 274 {
      _level2.tstrace('Frame: block_e for ship ' + shipid);
      if (shipid != 7) {
      }
    }

    frame 279 {
      if (_level2.scene == _level2.SCENE_YASEN && _level2.chouFlag) {
        _parent['bomb' + shipid].gotoAndPlay('hhh');
      } else {
        if (_level2.scene == _level2.SCENE_YASEN && _level2.chouFlag2) {
          _parent['bomb' + shipid].gotoAndPlay('oth1');
        } else {
          if (bp == 1) {
            _parent['bomb' + shipid].gotoAndPlay('ex_s2');
          } else {
            if (bp == 2) {
              _parent['bomb' + shipid].gotoAndPlay('ex_m');
            } else {
              if (bp == 3) {
                _parent['bomb' + shipid].gotoAndPlay('ex_l');
              } else {}
            }
          }
        }
      }
    }

    frame 293 {
      stop();
      if (!_level2.shienphase) {
        _level2.play();
      }
    }

    frame 294 {
      _level2.tstrace('Frame: saku_found for ship ' + shipid);
      ship._visible = true;
    }

    frame 295 {
      redtint._visible = true;
    }

    frame 340 {
      stop();
      _level2.play();
    }
  }

  movieClip 580  {
  }

  movieClip 583  {
  }

  movieClip 586  {
  }

  movieClip 589  {
  }

  movieClip 592  {
  }

  movieClip 595  {
  }

  movieClip 598  {
  }

  movieClip 601  {
  }

  movieClip 602  {

    frame 1 {
      stop();
    }

    frame 2 {
      if (!_level2.nosfx) {
        _level2.playSFX('battle_bomb1.mp3');
      }
    }

    frame 18 {
      gotoAndStop(1);
    }

    frame 20 {
      if (!_level2.nosfx) {
        _level2.playSFX('battle_bomb1.mp3');
      }
    }

    frame 36 {
      gotoAndStop(1);
    }

    frame 38 {
      if (!_level2.nosfx) {
        _level2.playSFX('battle_bomb3.mp3');
      }
    }

    frame 59 {
      gotoAndStop(1);
    }

    frame 61 {
      if (!_level2.nosfx) {
        _level2.playSFX('battle_bomb2.mp3');
      }
    }

    frame 82 {
      gotoAndStop(1);
    }

    frame 84 {
      if (!_level2.nosfx) {
        _level2.playSFX('battle_bomb2.mp3');
      }
    }

    frame 103 {
      _level2.playSFX('battle_bomb3.mp3');
    }

    frame 127 {
      gotoAndStop(1);
      _level2.play();
    }

    frame 129 {
      if (!_level2.nosfx) {
        _level2.playSFX('battle_bomb1.mp3');
      }
    }

    frame 132 {
      if (!_level2.nosfx) {
        _level2.playSFX('battle_bomb2.mp3');
      }
    }

    frame 135 {
      if (!_level2.nosfx) {
        _level2.playSFX('battle_bomb3.mp3');
      }
    }

    frame 150 {
      gotoAndStop(1);
      _level2.play();
    }

    frame 169 {
      gotoAndPlay('ex_m');
    }

    frame 170 {
      _level2.playSFX('battle_bomb1.mp3');
    }

    frame 186 {
      gotoAndStop(1);
    }

    frame 188 {
      _level2.playSFX('battle_bomb1.mp3');
    }

    frame 204 {
      gotoAndStop(1);
    }

    frame 206 {
      _level2.playSFX('battle_bomb3.mp3');
    }

    frame 227 {
      gotoAndStop(1);
    }

    frame 229 {
      _level2.playSFX('battle_bomb2.mp3');
    }

    frame 250 {
      gotoAndStop(1);
    }

    frame 252 {
      _level2.playSFX('battle_bomb2.mp3');
    }

    frame 271 {
      _level2.playSFX('battle_bomb3.mp3');
    }

    frame 295 {
      gotoAndStop(1);
      _level2.play();
    }

    frame 297 {
      _level2.playSFX('battle_bomb1.mp3');
    }

    frame 300 {
      _level2.playSFX('battle_bomb2.mp3');
    }

    frame 303 {
      _level2.playSFX('battle_bomb3.mp3');
    }

    frame 318 {
      gotoAndStop(1);
      _level2.play();
    }

    frame 337 {
      gotoAndPlay('alt_ex_m');
    }

    frame 338 {
    }

    frame 341 {
    }

    frame 344 {
    }

    frame 367 {
      gotoAndStop(1);
    }

    frame 368 {
    }

    frame 371 {
    }

    frame 374 {
    }

    frame 397 {
      gotoAndStop(1);
    }
  }

  movieClip 647  {

    frame 1 {
      stop();
    }
  }

  movieClip 650  {
  }

  movieClip 651  {

    frame 1 {
      stop();
      taihaFlg = false;
      damage = -1;
      crit = false;
      norm = false;
      miss = false;
      hirurai = false;
    }

    frame 2 {
      play();
    }

    frame 3 {
      if (damage != Math.floor(damage)) {
        damage = Math.floor(damage);
      }
      arpeggio = false;
      if (damid > 6) {
        if (_level2.ship_ke[damid - 6] >= 181 && _level2.ship_ke[damid - 6] <= 183 || _level2.ship_ke[damid - 6] >= 581 && _level2.ship_ke[damid - 6] <= 587) {
          arpeggio = true;
        }
      } else {
        if (_level2.ship_kf[damid] - 1 >= 181 && _level2.ship_kf[damid] - 1 <= 183) {
          arpeggio = true;
        }
      }
      if (damage == 0 && arpeggio) {
        if (damid > 6) {
          _level2.supershielde._x = 680;
          _level2.supershielde._y = 167 + 45 * (damid - 7);
          _level2.supershielde.play();
          _level2.supershieldbacke._x = 680;
          _level2.supershieldbacke._y = 167 + 45 * (damid - 7);
          _level2.supershieldbacke.play();
        } else {
          _level2.supershieldf._x = 120;
          _level2.supershieldf._y = 98 + 45 * (damid - 1);
          _level2.supershieldf.play();
          _level2.supershieldbackf._x = 120;
          _level2.supershieldbackf._y = 98 + 45 * (damid - 1);
          _level2.supershieldbackf.play();
        }
        gotoAndStop(38);
      }
      if (!_level1.npc_battle && _level2.nowhps[damid] - damage <= 0) {
        damage = _level2.nowhps[damid] - 1;
      }
      _level2.tstrace('dam_num' + damid + ' displayed ' + damage + ' damage');
      if (hirurai) {
        _level2.tstrace('dam_num' + damid + '.miss = ' + miss);
        _level2.tstrace('dam_num' + damid + '.norm = ' + norm);
        _level2.tstrace('dam_num' + damid + '.crit = ' + crit);
      }
      if (_level1.getCondition(_level2.nowhps[damid], _level2.maxhps[damid]) <= 2 && _level1.getCondition(_level2.nowhps[damid] - damage, _level2.maxhps[damid]) > 2) {
        taihaFlg = true;
        if (damid < 7) {
          if (_level1.getCondition(_level2.nowhps[damid] - damage, _level2.maxhps[damid]) > 3) {
            _level2.noTaihaFlg = false;
          }
          _level2.ftaihaFlg = true;
          _level2.taihastate[damid - 1] = true;
          tellTarget (''_level2.f' + damid') {
            j = 0;
            for (;;) {
              if (!(j < 6 && _level2.taihaids[j] >= 0)) break;
              ++j;
            }
            _level2.taihaids[j] = ship.sid - 10000;
            _level2.tstrace('_level2.taihaids[' + j + '] = ' + _level2.taihaids[j]);
          }
        }
      } else {
        taihaFlg = false;
      }
      if (damid < 7 && _level2.nowhps[damid] > 0 && _level2.nowhps[damid] - damage <= 0) {
        _level2.tstrace('_level2.nowhps[' + damid + '] = ' + _level2.nowhps[damid]);
        _level2.tstrace('damage = ' + damage);
        _level2.curgekichin = damid;
        tellTarget (''_level2.f' + damid') {
          j = 0;
          for (;;) {
            if (!(j < 6 && _level2.gekichinids[j] >= 0)) break;
            ++j;
          }
          _level2.gekichinids[j] = ship.sid - 10000;
          _level2.gekichinnum[j] = _level2.curgekichin;
          _level2.tstrace('_level2.gekichinids[' + j + '] = ' + _level2.gekichinids[j]);
        }
        _level2.gekichinFlg = true;
        _level2.gekichinstate[damid - 1] = true;
      }
      if (damid < 7 && _level1.getCondition(_level2.nowhps[damid], _level2.maxhps[damid]) < 2 && _level1.getCondition(_level2.nowhps[damid] - damage, _level2.maxhps[damid]) == 2) {
        _level2.playVoice(_level2.ship_kf[damid] - 1, [19, 20], [50, 50]);
      }
      if (damid >= 7) {
        var e_shipMasterID = _level2.ship_ke[damid - 6];
        if (!_level1.npc_battle) {
          --e_shipMasterID;
        }
        _level2.playVoiceE_Def(damid - 6, e_shipMasterID);
      }
      if ((_level2.isEvent() || _level1.mapid == 3 && _level1.questpage == 3 || _level1.mapid == 1 && _level1.questpage == 4 || _level1.mapid == 2 && _level1.questpage == 4) && _level2.bossmap && damid == 7 && _level2.nowhps[damid] - damage <= 0 && _level2.nowhps[damid] > 0) {
        _level2.mapHPGaugeUpdate(damid - 6, 1);
      }
      if (damage > 0 && damid < 7) {
        _level2.perfectrank = false;
      }
      if (hirurai && (norm || crit)) {
        miss = false;
      }
      if (damage < 15) {
        crit = false;
      }
      if (damage >= 40) {
        crit = true;
      }
      if (damage != -1) {
        if (crit) {
          _level2.damagedebug += damid + '->' + damage + 'c, ';
        } else {
          _level2.damagedebug += damid + '->' + damage + ', ';
        }
      }
      if (damage == -1) {
        keta1 = 10;
        keta2 = 10;
        keta3 = 10;
        keta4 = 25;
      } else {
        if (miss == true) {
          keta1 = 10;
          keta2 = 10;
          keta3 = 10;
          keta4 = 11;
        } else {
          damage += 10000;
          keta1 = substring(damage, 2, 1);
          keta2 = substring(damage, 3, 1);
          keta3 = substring(damage, 4, 1);
          keta4 = substring(damage, 5, 1);
          if (keta1 == '0') {
            keta1 = 10;
            if (keta2 == '0') {
              keta2 = 10;
              if (keta3 == '0') {
                keta3 = 10;
                if (keta4 == '0') {
                  keta4 = 11;
                }
              }
            }
          }
          damage -= 10000;
        }
      }
      if (crit) {
        k1.gotoAndStop(parseInt(keta1) + 13);
      } else {
        k1.gotoAndStop(parseInt(keta1) + 1);
      }
    }

    frame 5 {
      if (crit) {
        k2.gotoAndStop(parseInt(keta2) + 13);
      } else {
        k2.gotoAndStop(parseInt(keta2) + 1);
      }
      if (!crit) {
        critdisp._visible = false;
      } else {
        _level2.tstrace('crit displayed in dam_num' + damid);
      }
    }

    frame 7 {
      if (crit) {
        k3.gotoAndStop(parseInt(keta3) + 13);
      } else {
        k3.gotoAndStop(parseInt(keta3) + 1);
      }
    }

    frame 9 {
      if (crit) {
        k4.gotoAndStop(parseInt(keta4) + 13);
      } else {
        k4.gotoAndStop(parseInt(keta4) + 1);
      }
      _level2.nowhps[damid] -= damage;
    }

    frame 38 {
      stop();
      taihaFlg = false;
      damage = -1;
      crit = false;
      miss = false;
    }
  }

  instance dam_num1 of movieClip 651  {

    onClipEvent (load) {
      damid = 1;
    }
  }

  instance dam_num2 of movieClip 651  {

    onClipEvent (load) {
      damid = 2;
    }
  }

  instance dam_num3 of movieClip 651  {

    onClipEvent (load) {
      damid = 3;
    }
  }

  instance dam_num4 of movieClip 651  {

    onClipEvent (load) {
      damid = 4;
    }
  }

  instance dam_num5 of movieClip 651  {

    onClipEvent (load) {
      damid = 5;
    }
  }

  instance dam_num6 of movieClip 651  {

    onClipEvent (load) {
      damid = 6;
    }
  }

  instance dam_num7 of movieClip 651  {

    onClipEvent (load) {
      damid = 7;
    }
  }

  instance dam_num8 of movieClip 651  {

    onClipEvent (load) {
      damid = 8;
    }
  }

  instance dam_num9 of movieClip 651  {

    onClipEvent (load) {
      damid = 9;
    }
  }

  instance dam_num10 of movieClip 651  {

    onClipEvent (load) {
      damid = 10;
    }
  }

  instance dam_num11 of movieClip 651  {

    onClipEvent (load) {
      damid = 11;
    }
  }

  instance dam_num12 of movieClip 651  {

    onClipEvent (load) {
      damid = 12;
    }
  }

  movieClip 654  {
  }

  movieClip 655  {

    frame 1 {
      stop();
    }

    frame 12 {
      _level2.playSFX('sonar002');
    }

    frame 67 {
      stop();
      tellTarget ('_level2') {
        if (_level2.scene == _level2.SCENE_BATTLE) {
          play();
        }
      }
    }
  }

  frame 50 {
    if (_level2.yasen_reversal) {
      rader.gotoAndStop(11);
      rader.wave.flag = 1;
      rader.wave.gotoAndPlay('wloop');
      rader.wave2.gotoAndPlay('wloop');
      rader.rader_f.gotoAndStop(25);
      rader.rader_e.gotoAndStop(25);
      _level2.rader.rader_f.gotoAndStop('end');
      _level2.rader.rader_e.gotoAndStop('end');
      i = 1;
      while (i <= 6) {
        if (_level2.ship_kf[i] == -1) {
          _level2['f' + i]._visible = false;
          _level2['dam_num' + i]._visible = false;
        } else {
          _level2['f' + i]._visible = true;
          _level2['f' + i].ship._visible = true;
          _level2['dam_num' + i]._visible = true;
          tellTarget (''_level2.f' + i') {
            gotoAndPlay('default');
            ship.contr.gotoAndPlay(4);
          }
        }
        tellTarget (''f' + i') {
          jin = 0;
          shipid = _level2.i;
        }
        if (_level2.ship_ke[i] == -1) {
          _level2['e' + i]._visible = false;
          _level2['dam_num' + (i + 6)]._visible = false;
        } else {
          _level2['e' + i]._visible = true;
          _level2['e' + i].ship._visible = true;
          _level2['dam_num' + (i + 6)]._visible = true;
          tellTarget (''_level2.e' + i') {
            gotoAndPlay('default');
            ship.contr.gotoAndPlay(4);
          }
        }
        tellTarget (''e' + i') {
          jin = 0;
          shipid = _level2.i + 6;
        }
        ++i;
      }
    }
    cnt = 1;
  }

  frame 54 {
    _level2.tstrace('Frame: yasen_reversal_wait_loop');
  }

  frame 55 {
    if (_level2.yasen_reversal && cnt < 30) {
      ++cnt;
      gotoAndPlay('yasen_reversal_wait_loop');
    }
  }

  frame 56 {
    if (_level2.yasen_reversal) {
      shutters_sp.play();
      stop();
    }
  }

  frame 59 {
    i = 1;
    while (i <= 6) {
      tellTarget (''f' + i') {
        jin = 0;
        shipid = _level2.i;
      }
      if (ship_kf[i] == -1) {
        _level2['f' + i]._visible = false;
        _level2['dam_num' + i]._visible = false;
      } else {
        tellTarget (''f' + i + '/ship'') {
          sid = _level2.ship_kf[_level2.i] + 10000;
          contr.gotoAndPlay(4);
          maxhps = _level2.maxhps[_level2.i];
          nowhps = _level2.nowhps[_level2.i];
        }
      }
      _level2.tstrace('ship_kf[' + i + '] = ' + ship_kf[i]);
      tellTarget (''e' + i') {
        jin = 1;
        shipid = _level2.i + 6;
      }
      if (ship_ke[i] == -1) {
        _level2['e' + i]._visible = false;
        _level2['dam_num' + (i + 6)]._visible = false;
      } else {
        tellTarget (''e' + i + '/ship'') {
          sid = _level2.ship_ke[_level2.i] + 10000;
          contr.gotoAndPlay(4);
          maxhps = _level2.maxhps[_level2.i + 6];
          nowhps = _level2.nowhps[_level2.i + 6];
        }
      }
      _level2.tstrace('ship_ke[' + i + '] = ' + ship_ke[i]);
      eval('dam_num' + i)._x = (eval('f' + i))._x + 59;
      eval('dam_num' + i)._y = (eval('f' + i))._y + 7;
      eval('dam_num' + (i + 6))._x = (eval('e' + i))._x + 59;
      eval('dam_num' + (i + 6))._y = (eval('e' + i))._y + 7;
      eval('bomb' + i)._x = (eval('f' + i))._x;
      eval('bomb' + i)._y = (eval('f' + i))._y;
      eval('bomb' + (i + 6))._x = (eval('e' + i))._x;
      eval('bomb' + (i + 6))._y = (eval('e' + i))._y;
      eval('bubble' + i)._x = (eval('f' + i))._x;
      eval('bubble' + i)._y = (eval('f' + i))._y;
      eval('bubble' + (i + 6))._x = (eval('e' + i))._x;
      eval('bubble' + (i + 6))._y = (eval('e' + i))._y;
      ++i;
    }
    i = 1;
    if (_level2.yasen_reversal) {
      if (!_level2.bossmap && !_level2.isEvent()) {
        _level2.playBGM('2_battle2_11.mp3', true, _level1.bgmVolume);
      }
      subflag = false;
      subflag2 = true;
      i = 1;
      while (i <= 6) {
        j = 0;
        for (;;) {
          if (!(ship_kf[i] > 0 && _level1.SYS_ship_data[j].api_id != ship_kf[i] - 1 && j < 1000)) break;
          ++j;
        }
        typ = _level1.SYS_ship_data[j].api_stype;
        if (typ == 13 || typ == 14) {
          subflag = true;
        }
        j = 0;
        if (_level1.npc_battle) {
          for (;;) {
            if (!(ship_ke[i] > 0 && _level1.SYS_ship_data[j].api_id != ship_ke[i] && j < 1000)) break;
            ++j;
          }
        } else {
          for (;;) {
            if (!(ship_ke[i] > 0 && _level1.SYS_ship_data[j].api_id != ship_ke[i] - 1 && j < 1000)) break;
            ++j;
          }
        }
        typ = _level1.SYS_ship_data[j].api_stype;
        if (typ == 13 || typ == 14) {
          subflag = true;
        } else {
          if (ship_ke[i] != -1) {
            subflag2 = false;
          }
        }
        ++i;
      }
      gotoAndPlay('koukuuop');
      rader.gotoAndStop(11);
      rader.wave.flag = 1;
      rader.wave.gotoAndPlay('wloop');
      rader.wave2.gotoAndPlay('wloop');
      rader.rader_f.gotoAndStop(25);
      rader.rader_e.gotoAndStop(25);
      _level2.rader.rader_f.gotoAndStop('end');
      _level2.rader.rader_e.gotoAndStop('end');
      _level2.rader.rader_f.rd.gotoAndStop(_level2.jin_friend);
      _level2.rader.rader_e.rd.gotoAndStop(_level2.jin_enemy);
      i = 1;
      while (i <= 6) {
        if (_level2.ship_kf[i] == -1) {
          _level2['f' + i]._visible = false;
          _level2['dam_num' + i]._visible = false;
        } else {
          _level2['f' + i]._visible = true;
          _level2['f' + i].ship._visible = true;
          _level2['dam_num' + i]._visible = true;
          tellTarget (''_level2.f' + i') {
            gotoAndPlay('default');
          }
        }
        if (_level2.ship_ke[i] == -1) {
          _level2['e' + i]._visible = false;
          _level2['dam_num' + (i + 6)]._visible = false;
        } else {
          _level2['e' + i]._visible = true;
          _level2['e' + i].ship._visible = true;
          _level2['dam_num' + (i + 6)]._visible = true;
          tellTarget (''_level2.e' + i') {
            gotoAndPlay('default');
          }
        }
        ++i;
      }
    }
  }

  frame 60 {
    gotoAndPlay('sakuteki_loop');
  }

  frame 61 {
    _level2.tstrace('Frame: sakuteki_loop ' + i);
    tellTarget (''f' + i') {
      gotoAndPlay('comein');
    }
    ++i;
  }

  frame 64 {
    if (i <= 6) {
      gotoAndPlay('sakuteki_loop');
    }
    upperbar.play();
  }

  movieClip 663  {
  }

  movieClip 685  {
  }

  movieClip 686  {

    frame 1 {
      stop();
    }

    instance of movieClip 663  {

      onClipEvent (load) {
        spd = 4;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + spd;
        _xscale = 100;
        _yscale = 100;
      }
    }

    instance of movieClip 685  {

      onClipEvent (load) {
        spd = 4;
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + spd;
        _xscale = 100;
        _yscale = 100;
      }
    }
  }

  movieClip 687  {

    frame 1 {
      stop();
      nex = 1;
    }

    frame 10 {
      upperbar.gotoAndStop(nex);
    }

    frame 19 {
      stop();
    }

    frame 29 {
      gotoAndPlay(2);
    }
  }

  frame 65 {
    upperbar.play();
  }

  frame 66 {
    subflag = false;
    subflag2 = true;
    i = 1;
    while (i <= 6) {
      j = 0;
      for (;;) {
        if (!(ship_kf[i] > 0 && _level1.SYS_ship_data[j].api_id != ship_kf[i] - 1 && j < 1000)) break;
        ++j;
      }
      typ = _level1.SYS_ship_data[j].api_stype;
      _level2.tstrace('j = ' + j);
      _level2.tstrace('typ = ' + typ);
      if (typ == 13 || typ == 14) {
        tellTarget (''f' + i + '.ship.submarine'') {
          play();
        }
        tellTarget (''bubble' + i') {
          play();
        }
        subflag = true;
      }
      j = 0;
      if (_level1.npc_battle) {
        for (;;) {
          if (!(ship_ke[i] > 0 && _level1.SYS_ship_data[j].api_id != ship_ke[i] && j < 1000)) break;
          ++j;
        }
      } else {
        for (;;) {
          if (!(ship_ke[i] > 0 && _level1.SYS_ship_data[j].api_id != ship_ke[i] - 1 && j < 1000)) break;
          ++j;
        }
      }
      typ = _level1.SYS_ship_data[j].api_stype;
      _level2.tstrace('j = ' + j);
      _level2.tstrace('typ = ' + typ);
      if (typ == 13 || typ == 14) {
        tellTarget (''e' + i + '.ship.submarine'') {
          play();
        }
        tellTarget (''bubble' + (i + 6)') {
          play();
        }
        subflag = true;
      } else {
        if (ship_ke[i] != -1) {
          subflag2 = false;
        }
      }
      ++i;
    }
    if (subflag) {
      stop();
    }
  }

  movieClip 694  {

    frame 1 {
      stop();
    }
  }

  movieClip 727  {

    frame 1 {
      stop();
    }
  }

  movieClip 728  {

    frame 1 {
      _level2.centerline.flg = 0;
      flg = 0;
      stop();
    }

    frame 2 {
      _level2.centerline.flg = 0;
    }

    frame 3 {
      _level2.centerline.flg = 0;
    }

    frame 4 {
      if (id == 12) {
        back.gotoAndStop(3);
      } else {
        if (id > 7 && id != 14) {
          back.gotoAndStop(2);
        }
      }
      _level2.playSFX('battle_telop.mp3');
    }

    frame 13 {
      mongon.id = id;
      tellTarget ('mongon') {
        gotoAndStop(id);
      }
      if (id == 2) {
        sub.gotoAndStop(2);
      } else {
        if (id == 9) {
          sub.gotoAndStop(3);
        }
      }
      if (id == 12) {
        _level2.playSFX('battle_positive.mp3');
      } else {
        if (id > 7) {
          _level2.playSFX('battle_negative.mp3');
        }
      }
    }

    frame 55 {
      _level2.centerline.flg = 1;
      flg = 1;
      stop();
    }

    frame 56 {
      _level2.centerline.flg = 1;
      stop();
    }

    frame 57 {
      _level2.centerline.flg = 1;
      stop();
    }

    frame 58 {
      _level2.centerline.flg = 1;
      flg = 1;
      stop();
    }
  }

  movieClip 732  {
  }

  movieClip 733  {

    frame 47 {
      stop();
    }
  }

  movieClip 736  {
  }

  movieClip 741  {

    frame 1 {
      stop();
    }
  }

  movieClip 742  {
  }

  movieClip 749  {

    frame 1 {
      stop();
    }
  }

  movieClip 750  {

    frame 1 {
      stop();
    }
  }

  movieClip 755  {

    frame 1 {
      stop();
    }
  }

  movieClip 760  {

    frame 1 {
      stop();
    }
  }

  movieClip 761  {

    frame 1 {
      stop();
    }

    frame 2 {
      centerline.id = 1;
      centerline.gotoAndPlay(2);
      _level2.rader.play();
      if (!_level2.psaku) {
        slice._visible = false;
      }
    }

    frame 4 {
      if (centerline.flg == 0) {
        gotoAndPlay(3);
      }
    }

    frame 5 {
      searchF = true;
      searchE = true;
      pl_e._visible = false;
      if (_level1.npc_battle) {
        pl_e.gotoAndStop(2);
      }
      if (_level2.psaku) {
        _level2.playSFX('battle_hikouki.mp3');
      } else {
        pl_f._visible = false;
        gotoAndPlay('noplanes');
      }
    }

    frame 48 {
      if (_level2.psaku) {
        _level2.rader.wave2.play();
      }
    }

    frame 54 {
      backF._visible = true;
      if (!_level2.psaku_suc) {
        backF.gotoAndStop(2);
      }
      backE._visible = false;
      backE.gotoAndStop(2);
    }

    frame 59 {
      telopf._visible = true;
      if (_level2.psaku_suc) {
        if (_level2.psaku) {
          if (_level2.psaku_losses) {
            telopf.gotoAndStop(2);
          } else {
            telopf.gotoAndStop(1);
          }
        } else {
          telopf.gotoAndStop(1);
        }
      } else {
        if (_level2.psaku_losses) {
          telopf.gotoAndStop(4);
        } else {
          telopf.gotoAndStop(3);
        }
      }
      telope._visible = false;
      if (_level2.psaku_suc) {
        _level2.rader.rader_e.gotoAndStop(25);
      }
    }

    frame 62 {
      if (_level2.psaku_suc) {
        _level2.rader.rader_e.rd.gotoAndStop(_level2.jin_enemy);
        rdf.gotoAndStop(_level2.jin_enemy);
      }
      wave1.stop();
      wave2.stop();
      rader_f._visible = _level2.psaku;
      rdf._visible = _level2.psaku;
    }

    frame 70 {
      stelopf._visible = true;
      if (!_level2.psaku_suc) {
        stelopf.gotoAndStop(2);
      }
      stelope._visible = false;
    }

    frame 122 {
      stop();
      if (_level2.psaku_suc) {
        _level2.gotoAndPlay('sakuteki_enemyfound');
      } else {
        _level2.gotoAndPlay('koukuu');
      }
    }
  }

  frame 68 {
    if (!_level2.psaku && !_level2.psaku_suc) {
      gotoAndPlay('koukuuop');
    } else {
      sakukou.play();
      stop();
    }
    _level2.tstrace('sakuteki_bunki');
  }

  frame 70 {
    _level2.tstrace('Frame: sakuteki_enemyfound');
    _level2.centerline.flg = 0;
    _level2.centerline.id = 3;
    _level2.centerline.gotoAndPlay(2);
    play();
  }

  frame 79 {
    i = 1;
    while (i <= 6) {
      if (_level2.ship_ke[i] > -1) {
        tellTarget (''_level2.e' + i') {
          gotoAndPlay('saku_found');
        }
        tellTarget (''_level2.dam_num' + (i + 6)') {
          this._visible = true;
        }
      }
      ++i;
    }
    stop();
  }

  frame 82 {
    if (subflag2) {
      gotoAndPlay('4_hougeki');
    } else {
      gotoAndPlay('koukuuop');
    }
  }

  frame 83 {
    _level2.tstrace('Frame: koukuu');
    if (_level2.stage_flag[0] != 1 && _level2.stage_flag[1] != 1 && _level2.stage_flag[2] != 1) {
      gotoAndPlay('4_hougeki');
    } else {
      if (subflag2) {
        gotoAndPlay('4_hougeki');
      } else {
        if (_level2.psaku_suc) {
          _level2.centerline.flg = 0;
          _level2.centerline.id = 5;
          _level2.centerline.gotoAndPlay(2);
        } else {
          gotoAndPlay('koukuuop');
        }
        i = 1;
        while (i <= 6) {
          tellTarget (''f' + i') {
            gotoAndPlay('default');
          }
          ++i;
        }
        i = 1;
        while (i <= 6) {
          tellTarget (''e' + i') {
            gotoAndPlay('default');
          }
          ++i;
        }
      }
    }
  }

  movieClip 764  {
  }

  movieClip 767  {
  }

  movieClip 770  {
  }

  movieClip 773  {
  }

  movieClip 774  {

    frame 1 {
      stop();
    }

    frame 22 {
      gotoAndStop(1);
    }

    frame 43 {
      gotoAndStop(1);
    }
  }

  frame 137 {
    _level2.tstrace('Frame: koukuuop');
    if (subflag2) {
      gotoAndPlay('4_hougeki');
    } else {
      upperbar.nex = 2;
      upperbar.play();
    }
  }

  frame 138 {
    _level2.centerline.flg = 0;
    gyorai_spd = 15;
    sck = 0;
    xspd = 4;
    yspd = 1;
    dspd = yspd / (320 / xspd);
    i = 1;
    while (i <= 6) {
      eval('sp' + i)._x = (eval('f' + i))._x + 160;
      eval('sp' + i)._y = (eval('f' + i))._y + 40;
      eval('sp' + (i + 6))._x = (eval('e' + i))._x;
      eval('sp' + (i + 6))._y = (eval('e' + i))._y + 40;
      ++i;
    }
    if (_level2.stage_flag[1] == 0 && _level2.stage_flag[2] == 0) {
      gotoAndPlay('4_hougeki');
    }
  }

  movieClip 776  {

    frame 1 {
      stop();
    }

    frame 8 {
      _level2.playSFX('battle_bomb3.mp3');
    }

    frame 34 {
      stop();
    }

    frame 41 {
      _level2.playSFX('battle_bomb3.mp3');
    }

    frame 67 {
      stop();
    }
  }

  movieClip 779  {
  }

  movieClip 783  {
  }

  movieClip 784  {

    frame 1 {
      stop();
      flg = 0;
    }

    frame 27 {
      _level2.playSFX('battle_gyorai.mp3');
    }

    frame 31 {
      flg = 1;
    }

    frame 35 {
    }

    frame 53 {
      _level2.tstrace('hit effect ' + tgt + ' triggered for aerial torpedos');
      if (hit) {
        tellTarget (''_level2.sp' + tgt') {
          gotoAndPlay('sp2');
        }
        tellTarget (''_level2.e' + (tgt - 6)') {
          gotoAndPlay('gyorai_hit');
        }
        tellTarget (''_level2.b' + tgt') {
          if (bp == 1) {
            gotoAndPlay('ex_s');
          } else {
            if (bp == 2) {
              gotoAndPlay('ex_m');
            } else {
              gotoAndPlay('ex_l');
            }
          }
        }
      } else {
        tellTarget (''_level2.ssp' + tgt') {
          gotoAndPlay('sp2');
        }
      }
    }

    frame 61 {
      _level2.bp = bp;
      tellTarget (''_level2.dam_num' + tgt') {
        _level2.tmpdmg = preset_damage;
      }
      if (_level2.tmpdmg != Math.floor(_level2.tmpdmg)) {
        tellTarget (''_level2.e' + (tgt - 6)') {
          bp = _level2.bp;
          gotoAndPlay('block_e');
        }
        _level2.eshield.play();
      } else {
        tellTarget (''_level2.e' + (tgt - 6)') {
          bp = _level2.bp;
          gotoAndPlay('ex_e');
        }
      }
    }

    frame 64 {
      tellTarget (''_level2.dam_num' + tgt') {
        damage = preset_damage;
        crit = _level2.stage3.api_fcl_flag == 2;
        miss = _level2.stage3.api_fcl_flag == 0;
        gotoAndPlay(2);
      }
      _level2.tstrace('dam_num' + tgt + ' triggered for aerial torpedos');
    }

    frame 73 {
      _level2.gotoAndPlay('kk6');
    }
  }

  instance mine1 of movieClip 784  {

    onClipEvent (load) {
      var i = 1;
      while (i <= 6) {
        _level2['mine' + i].xspd = _level2.gyorai_spd;
        _level2['mine' + i].goflag = false;
        ++i;
      }
      var i = 7;
      while (i <= 12) {
        _level2['mine' + i].xspd = -_level2.gyorai_spd;
        _level2['mine' + i].goflag = false;
        ++i;
      }
    }

    onClipEvent (enterFrame) {
      var i = 1;
      while (i <= 6) {
        with (_level2['mine' + i]) {
          if (flg == 1) {
            yspd = (tgty - starty) * (xspd / xdist);
            _x += xspd;
            _y += yspd;
            _rotation = Math.atan2(yspd, xspd) * 180 / Math.PI;
            if (_x > 640 && !goflag) {
              gotoAndPlay('exp');
              goflag = true;
            }
          }
        }
        ++i;
      }
      var i = 7;
      while (i <= 12) {
        with (_level2['mine' + i]) {
          if (flg == 1) {
            yspd = (tgty - starty) * (-xspd / xdist);
            _x += xspd;
            _y += yspd;
            _rotation = Math.atan2(yspd, xspd) * 180 / Math.PI;
            if (_x < 160 && !goflag) {
              gotoAndPlay('exp');
              goflag = true;
            }
          }
        }
        ++i;
      }
    }
  }

  movieClip 785  {

    frame 1 {
      stop();
      flg = 0;
    }

    frame 31 {
      flg = 1;
    }

    frame 35 {
    }

    frame 53 {
      _level2.tstrace('hit effect ' + tgt + ' triggered for aerial torpedos');
      if (hit) {
        tellTarget (''_level2.sp' + tgt') {
          gotoAndPlay('sp2');
        }
        tellTarget (''_level2.f' + tgt') {
          gotoAndPlay('gyorai_hit');
        }
        tellTarget (''_level2.b' + tgt') {
          if (bp == 1) {
            gotoAndPlay('ex_s');
          } else {
            if (bp == 2) {
              gotoAndPlay('ex_m');
            } else {
              gotoAndPlay('ex_l');
            }
          }
        }
      }
    }

    frame 61 {
      _level2.bp = bp;
      tellTarget (''_level2.dam_num' + tgt') {
        _level2.tmpdmg = preset_damage;
      }
      if (_level2.tmpdmg != Math.floor(_level2.tmpdmg)) {
        tellTarget (''_level2.f' + tgt') {
          bp = _level2.bp;
          gotoAndPlay('block_f');
        }
        _level2.fshield.play();
      } else {
        tellTarget (''_level2.f' + tgt') {
          bp = _level2.bp;
          gotoAndPlay('ex_f');
        }
      }
    }

    frame 64 {
      tellTarget (''_level2.dam_num' + tgt') {
        damage = preset_damage;
        crit = _level2.stage3.api_ecl_flag == 2;
        miss = _level2.stage3.api_ecl_flag == 0;
        gotoAndPlay(2);
      }
      _level2.tstrace('dam_num' + tgt + ' triggered for aerial torpedos');
    }

    frame 73 {
      _level2.gotoAndPlay('kk6');
    }
  }

  movieClip 787  {
  }

  movieClip 796  {

    frame 80 {
      gotoAndPlay(1);
    }

    frame 160 {
      gotoAndPlay(81);
    }

    frame 240 {
      gotoAndPlay(161);
    }

    frame 320 {
      gotoAndPlay(241);
    }

    frame 400 {
      gotoAndPlay(321);
    }
  }

  movieClip 797  {
  }

  movieClip 798  {

    frame 1 {
      stop();
    }

    instance plane of movieClip 796  {

      onClipEvent (load) {
        formid = int(_parent._parent._name.substr(1, 1)) - 1;
        gotoAndStop(80 * _level2.epltyp[_parent._parent._parent._parent.pid - 7][formid] + 1);
      }

      onClipEvent (enterFrame) {
        if (_level2.epltyp[_parent._parent._parent._parent.pid - 7][formid] < 0) {
          this._visible = false;
        }
        gotoAndStop(80 * _level2.epltyp[_parent._parent._parent._parent.pid - 7][formid] + 1);
      }
    }

    frame 19 {
      gotoAndPlay('smokeloop');
    }
  }

  movieClip 800  {

    frame 1 {
      stop();
    }

    frame 5 {
      gotoAndPlay(6 + random(6));
    }

    frame 19 {
      gotoAndStop(2);
    }

    frame 35 {
      plane.gotoAndPlay('burn');
      vel = 1;
    }

    frame 36 {
      _y = _y + vel;
      vel += 0.5;
    }

    frame 37 {
      gotoAndPlay('diveloop');
    }

    frame 55 {
      stop();
    }
  }

  movieClip 801  {

    frame 1 {
      play();
    }

    instance p3 of movieClip 800  {

      onClipEvent (enterFrame) {
        formid = 2;
      }
    }

    instance p2 of movieClip 800  {

      onClipEvent (enterFrame) {
        formid = 1;
      }
    }

    instance p1 of movieClip 800  {

      onClipEvent (enterFrame) {
        formid = 0;
      }
    }

    instance p3 of movieClip 800  {

      onClipEvent (enterFrame) {
        formid = 2;
      }
    }

    frame 61 {
      gotoAndPlay(1);
    }
  }

  movieClip 802  {

    frame 1 {
      stop();
      pos._visible = false;
    }

    instance plane of movieClip 801  {

      onClipEvent (enterFrame) {
        p1.formid = 0;
        p2.formid = 1;
        p3.formid = 2;
      }
    }

    frame 3 {
      if (_level2.eplanecount[pid - 7] < 3) {
        plane.p3._visible = false;
      }
      if (_level2.eplanecount[pid - 7] < 2) {
        plane.p2._visible = false;
      }
      if (_level2.eplanecount[pid - 7] < 1) {
        plane.p1._visible = false;
      }
    }

    frame 17 {
      if (!_level2.psaku_suc && !_level2.esaku_suc) {
        gotoAndStop(1);
        _level2.gotoAndPlay('kk6');
      }
    }

    frame 26 {
      _level2.gotoAndStop('kk1');
      if (_level2.fighter_e && _level2.plane_counter_e) {
        plane.p1.gotoAndPlay('atk1');
      }
    }

    frame 28 {
      if (_level2.fighter_e && _level2.plane_counter_e) {
        plane.p2.gotoAndPlay('atk1');
      }
    }

    frame 31 {
      if (_level2.fighter_e && _level2.plane_counter_e) {
        plane.p3.gotoAndPlay('atk1');
      }
    }

    frame 34 {
      _level2.gotoAndStop('kk1_2');
    }

    frame 39 {
      _level2.gotoAndStop('kk2');
    }

    frame 43 {
      _level2.gotoAndStop('kk2_2');
    }

    frame 54 {
      _level2.gotoAndStop('kk3');
    }

    frame 84 {
      _level2.gotoAndStop('kk4');
    }

    frame 122 {
      _level2.gotoAndPlay('kk5');
    }
  }

  instance planee1 of movieClip 802  {

    onClipEvent (load) {
      pid = 7;
      plx = plane._x;
      tgty = 153;
      starty = _y;
      fary = tgty - _y;
    }

    onClipEvent (enterFrame) {
      chkplx = plane._x - plx;
      _y = starty + fary * (chkplx / 640);
      if (!_level2.psaku_suc) {
        _x = _x - 1.219512195121951;
      }
    }
  }

  instance planee2 of movieClip 802  {

    onClipEvent (load) {
      pid = 8;
      plx = plane._x;
      tgty = 123;
      starty = _y;
      fary = tgty - _y;
    }

    onClipEvent (enterFrame) {
      chkplx = plane._x - plx;
      _y = starty + fary * (chkplx / 640);
      if (!_level2.psaku_suc) {
        _x = _x - 1.219512195121951;
      }
    }
  }

  instance planee3 of movieClip 802  {

    onClipEvent (load) {
      pid = 9;
      plx = plane._x;
      tgty = 93;
      starty = _y;
      fary = tgty - _y;
    }

    onClipEvent (enterFrame) {
      chkplx = plane._x - plx;
      _y = starty + fary * (chkplx / 640);
      if (!_level2.psaku_suc) {
        _x = _x - 1.219512195121951;
      }
    }
  }

  instance planee4 of movieClip 802  {

    onClipEvent (load) {
      pid = 10;
      plx = plane._x;
      tgty = 63;
      starty = _y;
      fary = tgty - _y;
    }

    onClipEvent (enterFrame) {
      chkplx = plane._x - plx;
      _y = starty + fary * (chkplx / 640);
      if (!_level2.psaku_suc) {
        _x = _x - 1.219512195121951;
      }
    }
  }

  instance planee5 of movieClip 802  {

    onClipEvent (load) {
      pid = 11;
      plx = plane._x;
      tgty = 33;
      starty = _y;
      fary = tgty - _y;
    }

    onClipEvent (enterFrame) {
      chkplx = plane._x - plx;
      _y = starty + fary * (chkplx / 640);
      if (!_level2.psaku_suc) {
        _x = _x - 1.219512195121951;
      }
    }
  }

  instance planee6 of movieClip 802  {

    onClipEvent (load) {
      pid = 12;
      plx = plane._x;
      tgty = 3;
      starty = _y;
      fary = tgty - _y;
    }

    onClipEvent (enterFrame) {
      chkplx = plane._x - plx;
      _y = starty + fary * (chkplx / 640);
      if (!_level2.psaku_suc) {
        _x = _x - 1.219512195121951;
      }
    }
  }

  movieClip 805  {

    frame 1 {
      stop();
    }

    frame 19 {
      gotoAndPlay('smokeloop');
    }
  }

  movieClip 807  {

    frame 1 {
      stop();
    }

    instance plane of movieClip 805  {

      onClipEvent (load) {
        formid = int(_parent._name.substr(1, 1));
      }

      onClipEvent (enterFrame) {
        formid = int(_parent._name.substr(1, 1));
        if (_level2.fplanecount[_parent._parent._parent.pid - 1] < formid) {
          _parent._visible = false;
        }
      }
    }

    frame 5 {
      gotoAndPlay(6 + random(6));
    }

    frame 19 {
      gotoAndStop(1);
    }

    frame 35 {
      plane.play();
      vel = 1;
    }

    frame 36 {
      _y = _y + vel;
      vel += 0.5;
    }

    frame 37 {
      gotoAndPlay('diveloop');
    }

    frame 55 {
      stop();
    }
  }

  movieClip 808  {

    frame 1 {
      play();
    }

    frame 62 {
      gotoAndPlay(1);
    }
  }

  movieClip 809  {

    frame 1 {
      stop();
      pos._visible = false;
    }

    frame 26 {
      _level2.gotoAndStop('kk1');
      if (_level2.fighter_f && _level2.plane_counter_f) {
        plane.p1.gotoAndPlay('atk1');
      }
    }

    frame 28 {
      if (_level2.fighter_f && _level2.plane_counter_f) {
        plane.p2.gotoAndPlay('atk1');
      }
    }

    frame 31 {
      if (_level2.fighter_f && _level2.plane_counter_f) {
        plane.p3.gotoAndPlay('atk1');
      }
    }

    frame 34 {
      _level2.gotoAndStop('kk1_2');
    }

    frame 39 {
      _level2.gotoAndStop('kk2');
    }

    frame 43 {
      _level2.gotoAndStop('kk2_2');
    }

    frame 54 {
      _level2.gotoAndStop('kk3');
    }

    frame 84 {
    }

    frame 92 {
      _level2.gotoAndStop('kk4');
    }

    frame 122 {
      _level2.gotoAndPlay('kk5');
    }
  }

  instance planef6 of movieClip 809  {

    onClipEvent (load) {
      pid = 6;
      plx = plane._x;
      tgty = 82;
      starty = _y;
      fary = tgty - _y;
    }

    onClipEvent (enterFrame) {
      chkplx = plane._x - plx;
      _y = starty + fary * (chkplx / 640);
    }
  }

  instance planef5 of movieClip 809  {

    onClipEvent (load) {
      pid = 5;
      plx = plane._x;
      tgty = 112;
      starty = _y;
      fary = tgty - _y;
    }

    onClipEvent (enterFrame) {
      chkplx = plane._x - plx;
      _y = starty + fary * (chkplx / 640);
    }
  }

  instance planef4 of movieClip 809  {

    onClipEvent (load) {
      pid = 4;
      plx = plane._x;
      tgty = 142;
      starty = _y;
      fary = tgty - _y;
    }

    onClipEvent (enterFrame) {
      chkplx = plane._x - plx;
      _y = starty + fary * (chkplx / 640);
    }
  }

  instance planef3 of movieClip 809  {

    onClipEvent (load) {
      pid = 3;
      plx = plane._x;
      tgty = 172;
      starty = _y;
      fary = tgty - _y;
    }

    onClipEvent (enterFrame) {
      chkplx = plane._x - plx;
      _y = starty + fary * (chkplx / 640);
    }
  }

  instance planef2 of movieClip 809  {

    onClipEvent (load) {
      pid = 2;
      plx = plane._x;
      tgty = 202;
      starty = _y;
      fary = tgty - _y;
    }

    onClipEvent (enterFrame) {
      chkplx = plane._x - plx;
      _y = starty + fary * (chkplx / 640);
    }
  }

  instance planef1 of movieClip 809  {

    onClipEvent (load) {
      pid = 1;
      plx = plane._x;
      tgty = 232;
      starty = _y;
      fary = tgty - _y;
    }

    onClipEvent (enterFrame) {
      chkplx = plane._x - plx;
      _y = starty + fary * (chkplx / 640);
    }
  }

  movieClip 813  {
  }

  movieClip 816  {
  }

  movieClip 871  {

    frame 1 {
      stop();
    }
  }

  movieClip 872  {

    frame 1 {
      stop();
    }

    instance pl of movieClip 871  {

      onClipEvent (load) {
        starty = _y;
        i = 0;
        ispd = 0.02 + random(100) / 600;
        dd = -1.5;
      }

      onClipEvent (enterFrame) {
        i += ispd;
        _y = starty + 20 * Math.sin(i) + dd;
        dd *= -1;
      }
    }
  }

  movieClip 875  {
  }

  movieClip 878  {
  }

  movieClip 882  {

    frame 1 {
      fMaxP = _level2.plane_from[0];
      eMaxP = _level2.plane_from[1];
      fpl = new Array();
      fpl = [-1];
      epl = new Array();
      epl = [-1];
      charVoice = -1;
      if (_level2.stage_flag[0] == 1 && fMaxP[0] > 0 && _level2.psaku_suc) {
        i = 0;
        while (i < 4) {
          if (_level2.fplanes[fMaxP[0] - 1][i] > 0) {
            fpl.push(_level2.fplanes[fMaxP[0] - 1][i]);
          }
          ++i;
        }
        gotoAndPlay('firu');
      } else {
        gotoAndPlay('finai');
      }
      if (_level2.stage_flag[0] == 1 && eMaxP[0] > 0 && _level2.esaku_suc) {
        i = 0;
        while (i < 4) {
          if (_level2.eplanes[eMaxP[0] - 7][i] > 0) {
            epl.push(_level2.eplanes[eMaxP[0] - 7][i]);
          }
          ++i;
        }
      }
      _level2.tstrace('F ' + fpl);
      _level2.tstrace('E ' + epl);
      i = 0;
      while (i < 6) {
        if (_level2.fplanecount[i] < 3 && _level2.fplanecount[i] != 0) {
          tellTarget (''_level2.planef' + (i + 1)') {
            plane.p3._visible = false;
          }
        }
        if (_level2.fplanecount[i] < 2 && _level2.fplanecount[i] != 0) {
          tellTarget (''_level2.planef' + (i + 1)') {
            plane.p2._visible = false;
          }
        }
        if (_level2.eplanecount[i] < 3 && _level2.eplanecount[i] != 0) {
          tellTarget (''_level2.planee' + (i + 1)') {
            plane.p3._visible = false;
          }
        }
        if (_level2.eplanecount[i] < 2 && _level2.eplanecount[i] != 0) {
          tellTarget (''_level2.planee' + (i + 1)') {
            plane.p2._visible = false;
          }
        }
        ++i;
      }
    }

    frame 2 {
      _level2.tstrace('Aerial phase frame: firu');
      _level2.ldr1.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + (_level2.ship_kf[_level2.plane_from[0][0]] - 1) + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.ship_kf[_level2.plane_from[0][0]] - 1)].api_version, shipf.ship);
      _level2.ldr1.addListener(_level2.lsnr1);
      _level2.lsnr1.onLoadInit = function () {
        _level2.tstrace('Loading character ' + (_level2.ship_kf[_level2.plane_from[0][0]] - 1) + ' artwork');
        if (_level2.taihastate[_level2.plane_from[0][0] - 1]) {
          shipf.ship.gotoAndStop(11);
          shipf.ship._x = _level1.SYS_ship_pos[_level1.getPosID(_level2.ship_kf[_level2.plane_from[0][0]] - 1)].api_battle_d[0];
          shipf.ship._y = _level1.SYS_ship_pos[_level1.getPosID(_level2.ship_kf[_level2.plane_from[0][0]] - 1)].api_battle_d[1];
        } else {
          shipf.ship.gotoAndStop(10);
          shipf.ship._x = _level1.SYS_ship_pos[_level1.getPosID(_level2.ship_kf[_level2.plane_from[0][0]] - 1)].api_battle_n[0];
          shipf.ship._y = _level1.SYS_ship_pos[_level1.getPosID(_level2.ship_kf[_level2.plane_from[0][0]] - 1)].api_battle_n[1];
        }
        _level2.ldr1.removeListener(_level2.lsnr1);
      };

      _level2.lsnr1.onLoadError = function () {
        _level2.tstrace('Failed to load character ' + (_level2.ship_kf[_level2.plane_from[0][0]] - 1) + ' artwork');
        shipf.attachMovie('nodatachar', 'ship', 1);
        shipf.ship._x = 440;
        shipf.ship._y = 810;
        _level2.ldr1.removeListener(_level2.lsnr1);
      };

    }

    frame 20 {
      _level2.playSFX('battle_fannelCutIn.mp3');
    }

    frame 25 {
      _level2.playVoice(_level2.ship_kf[_level2.plane_from[0][0]] - 1, [15, 17], [50, 50]);
    }

    frame 29 {
      if (fpl[2] > 0) {
        f2.pl.gotoAndStop(fpl[2]);
      } else {
        f2._visible = false;
      }
      _level2.playSFX('battle_cutinMove.mp3');
    }

    frame 33 {
      if (fpl[3] > 0) {
        f3.pl.gotoAndStop(fpl[3]);
      } else {
        f3._visible = false;
      }
      _level2.playSFX('battle_cutinMove.mp3');
    }

    frame 36 {
      if (fpl[1] > 0) {
        f1.pl.gotoAndStop(fpl[1]);
      } else {
        f1._visible = false;
      }
      _level2.playSFX('battle_cutinMove.mp3');
    }

    frame 61 {
      _level2.playSFX('battle_plane1.mp3');
    }

    frame 65 {
      _level2.playSFX('battle_plane1.mp3');
    }

    frame 71 {
      _level2.playSFX('battle_plane1.mp3');
    }

    frame 87 {
      if (_level2.stage_flag[0] == 1 && eMaxP[0] > 0 && _level2.esaku_suc) {
        gotoAndPlay('eiru');
      } else {
        gotoAndPlay('einai');
      }
    }

    frame 88 {
      _level2.tstrace('Aerial phase frame: finai');
    }

    frame 99 {
      if (_level2.stage_flag[0] == 1 && eMaxP[0] > 0 && _level2.esaku_suc) {
        gotoAndPlay('eiru');
      } else {
        gotoAndPlay('einai');
      }
    }

    frame 100 {
      _level2.tstrace('Aerial phase frame: eiru');
      if (_level1.npc_battle) {
        _level2.ldr2.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + _level2.ship_ke[_level2.plane_from[1][0] - 6] + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.ship_ke[_level2.plane_from[1][0] - 6])].api_version, shipe.ship);
        _level2.ldr2.addListener(_level2.lsnr2);
        _level2.lsnr2.onLoadInit = function () {
          _level2.tstrace('Loading character ' + _level2.ship_ke[_level2.plane_from[1][0] - 6] + ' artwork');
          shipe.ship.gotoAndStop(10);
          shipe.ship._x = _level1.SYS_ship_pos[_level1.getPosID(_level2.ship_ke[_level2.plane_from[1][0] - 6])].api_battle_n[0];
          shipe.ship._y = _level1.SYS_ship_pos[_level1.getPosID(_level2.ship_ke[_level2.plane_from[1][0] - 6])].api_battle_n[1];
          _level2.ldr2.removeListener(_level2.lsnr2);
        };

        _level2.lsnr2.onLoadError = function () {
          _level2.tstrace('Failed to load character ' + _level2.ship_ke[_level2.plane_from[1][0] - 6] + ' artwork');
          shipe.attachMovie('nodatachar', 'ship', 1);
          shipe.ship._x = 440;
          shipe.ship._y = 810;
          _level2.ldr2.removeListener(_level2.lsnr2);
        };

      } else {
        _level2.ldr2.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + (_level2.ship_ke[_level2.plane_from[1][0] - 6] - 1) + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.ship_ke[_level2.plane_from[1][0] - 6] - 1)].api_version, shipe.ship);
        _level2.ldr2.addListener(_level2.lsnr2);
        _level2.lsnr2.onLoadInit = function () {
          _level2.tstrace('Loading character ' + (_level2.ship_ke[_level2.plane_from[1][0] - 6] - 1) + ' artwork');
          shipe.ship.gotoAndStop(10);
          shipe.ship._x = _level1.SYS_ship_pos[_level1.getPosID(_level2.ship_ke[_level2.plane_from[1][0] - 6] - 1)].api_battle_n[0];
          shipe.ship._y = _level1.SYS_ship_pos[_level1.getPosID(_level2.ship_ke[_level2.plane_from[1][0] - 6] - 1)].api_battle_n[1];
          _level2.ldr2.removeListener(_level2.lsnr2);
        };

        _level2.lsnr2.onLoadError = function () {
          _level2.tstrace('Failed to load character ' + (_level2.ship_ke[_level2.plane_from[1][0] - 6] - 1) + ' artwork');
          shipe.attachMovie('nodatachar', 'ship', 1);
          shipe.ship._x = 440;
          shipe.ship._y = 810;
          _level2.ldr2.removeListener(_level2.lsnr2);
        };

      }
    }

    frame 109 {
      if (_level1.npc_battle) {
        _level2.ldr2.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + _level2.ship_ke[_level2.plane_from[1][0] - 6] + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.ship_ke[_level2.plane_from[1][0] - 6])].api_version, shipe.ship);
        _level2.ldr2.addListener(_level2.lsnr2);
        _level2.lsnr2.onLoadInit = function () {
          _level2.tstrace('Loading character ' + _level2.ship_ke[_level2.plane_from[1][0] - 6] + ' artwork');
          shipe.ship.gotoAndStop(10);
          shipe.ship._x = _level1.SYS_ship_pos[_level1.getPosID(_level2.ship_ke[_level2.plane_from[1][0] - 6])].api_battle_n[0];
          shipe.ship._y = _level1.SYS_ship_pos[_level1.getPosID(_level2.ship_ke[_level2.plane_from[1][0] - 6])].api_battle_n[1];
          _level2.ldr2.removeListener(_level2.lsnr2);
        };

        _level2.lsnr2.onLoadError = function () {
          _level2.tstrace('Failed to load character ' + _level2.ship_ke[_level2.plane_from[1][0] - 6] + ' artwork');
          shipe.attachMovie('nodatachar', 'ship', 1);
          shipe.ship._x = 440;
          shipe.ship._y = 810;
          _level2.ldr2.removeListener(_level2.lsnr2);
        };

      } else {
        _level2.ldr2.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + (_level2.ship_ke[_level2.plane_from[1][0] - 6] - 1) + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.ship_ke[_level2.plane_from[1][0] - 6] - 1)].api_version, shipe.ship);
        _level2.ldr2.addListener(_level2.lsnr2);
        _level2.lsnr2.onLoadInit = function () {
          _level2.tstrace('Loading character ' + (_level2.ship_ke[_level2.plane_from[1][0] - 6] - 1) + ' artwork');
          shipe.ship.gotoAndStop(10);
          shipe.ship._x = _level1.SYS_ship_pos[_level1.getPosID(_level2.ship_ke[_level2.plane_from[1][0] - 6] - 1)].api_battle_n[0];
          shipe.ship._y = _level1.SYS_ship_pos[_level1.getPosID(_level2.ship_ke[_level2.plane_from[1][0] - 6] - 1)].api_battle_n[1];
          _level2.ldr2.removeListener(_level2.lsnr2);
        };

        _level2.lsnr2.onLoadError = function () {
          _level2.tstrace('Failed to load character ' + (_level2.ship_ke[_level2.plane_from[1][0] - 6] - 1) + ' artwork');
          shipe.attachMovie('nodatachar', 'ship', 1);
          shipe.ship._x = 440;
          shipe.ship._y = 810;
          _level2.ldr2.removeListener(_level2.lsnr2);
        };

      }
    }

    frame 116 {
      _level2.playSFX('battle_fannelCutIn.mp3');
    }

    frame 121 {
      var e_index = _level2.plane_from[1][0] - 6;
      var e_id = _level2.ship_ke[e_index];
      _level2.playVoiceE_Atk(e_index, e_id);
    }

    frame 123 {
      if (epl[2] > 0) {
        e2.pl.gotoAndStop(epl[2]);
      } else {
        e2._visible = false;
      }
      _level2.playSFX('battle_cutinMove.mp3');
      _level2.tstrace('epl = ' + epl);
    }

    frame 127 {
      if (epl[3] > 0) {
        e3.pl.gotoAndStop(epl[3]);
      } else {
        e3._visible = false;
      }
      _level2.playSFX('battle_cutinMove.mp3');
    }

    frame 130 {
      if (epl[1] > 0) {
        e1.pl.gotoAndStop(epl[1]);
      } else {
        e1._visible = false;
      }
      _level2.playSFX('battle_cutinMove.mp3');
    }

    frame 157 {
      _level2.playSFX('battle_plane1.mp3');
    }

    frame 160 {
      _level2.playSFX('battle_plane1.mp3');
    }

    frame 166 {
      _level2.playSFX('battle_plane1.mp3');
    }

    frame 180 {
      gotoAndPlay('owari');
    }

    frame 181 {
      _level2.tstrace('Aerial phase frame: einai');
    }

    frame 184 {
      _level2.tstrace('Aerial phase frame: owari');
    }

    frame 191 {
      stop();
      _level2.play();
    }
  }

  frame 140 {
    stop();
  }

  frame 141 {
    planeGoF = [false, false, false, false, false, false, false];
    planeGoE = [false, false, false, false, false, false, false];
    _level2.tstrace('------------ ' + _level2.plane_from[0]);
    i = 0;
    while (i < _level2.plane_from[0].length) {
      _level2.tstrace(_level2.plane_from[0][i]);
      planeGoF[_level2.plane_from[0][i]] = true;
      if (_level2.plane_from[0][i] >= 0) {
        _level2.plane_counter_e = true;
      }
      ++i;
    }
    _level2.tstrace('------------ ' + _level2.plane_from[1]);
    i = 0;
    while (i < _level2.plane_from[1].length) {
      _level2.tstrace(_level2.plane_from[1][i]);
      planeGoE[_level2.plane_from[1][i] - 6] = true;
      if (_level2.plane_from[1][i] >= 0) {
        _level2.plane_counter_f = true;
      }
      ++i;
    }
    _level2.tstrace('_level2.plane_counter_f = ' + _level2.plane_counter_f);
    _level2.tstrace('_level2.plane_counter_e = ' + _level2.plane_counter_e);
    doesEnemyHavePlane = false;
    i = 1;
    while (i <= 6) {
      eval('planef' + i)._x = 80;
      eval('planef' + i)._y = (eval('f' + i))._y + 20;
      tellTarget (''planef' + i') {
        gotoAndPlay(2);
        plane.gotoAndPlay(random(60));
      }
      if (!planeGoF[i]) {
        eval('planef' + i)._visible = false;
      }
      if (!_level2.psaku_suc) {
        eval('planee' + i)._x = 820;
      } else {
        eval('planee' + i)._x = 720;
      }
      eval('planee' + i)._y = (eval('e' + i))._y + 20;
      tellTarget (''planee' + i') {
        gotoAndPlay(2);
        plane.gotoAndPlay(random(60));
      }
      if (!planeGoE[i]) {
        eval('planee' + i)._visible = false;
      } else {
        doesEnemyHavePlane = true;
      }
      ++i;
    }
    _level2.playSFX('battle_hikouki2.mp3');
    seikutext.play();
  }

  movieClip 891  {

    frame 1 {
      stop();
    }
  }

  movieClip 892  {

    frame 35 {
      text.gotoAndStop(_level2.seikuu + 1);
      i = 1;
      while (i <= 6) {
        tellTarget (''f' + i') {
          gotoAndStop('default');
        }
        ++i;
      }
    }

    frame 91 {
      stop();
    }
  }

  frame 142 {
    _level2.tstrace('Frame: kk1');
    _level2.noplanes = true;
    i = 1;
    while (i <= 6) {
      if ((eval('planef' + i))._visible == true) {
        _level2.noplanes = false;
      }
      if ((eval('planee' + i))._visible == true) {
        _level2.noplanes = false;
      }
      ++i;
    }
    if (_level2.noplanes) {
      _level2.gotoAndPlay('kk6');
    } else {
      stop();
    }
    if (_level2.stage_flag[0] == 1 && _level2.stage1 != undefined && _level2.stage1 != null) {
      _level2.playSFX('battle_shoot.mp3');
    }
    seikutext.play();
  }

  frame 143 {
    _level2.tstrace('Frame: kk1_2');
    if (_level2.stage1.api_f_count > 0 && _level2.stage1.api_f_lostcount > 0) {
      lostratio = _level2.stage1.api_f_lostcount * 1 / _level2.stage1.api_f_count;
      _level2.tstrace('_level2.stage1["api_f_count"] = ' + _level2.stage1.api_f_count);
      _level2.tstrace('_level2.stage1["api_f_lostcount"] = ' + _level2.stage1.api_f_lostcount);
      _level2.tstrace('flostratio = ' + lostratio);
      _level2.fcurplane = 0;
      while (lostratio >= _level2.fcurplane * 1 / _level2.ftotalplanecount) {
        tellTarget ('_level2.ftotalplanes[_level2.fcurplane]') {
          gotoAndPlay('dam2');
        }
        ++_level2.fcurplane;
      }
      if (lostratio < 1 && lostratio != 0) {
        --_level2.fcurplane;
        tellTarget ('_level2.ftotalplanes[_level2.fcurplane]') {
          gotoAndPlay('dam1');
        }
      }
    }
    if (_level2.stage1.api_e_count > 0 && _level2.stage1.api_e_lostcount > 0) {
      lostratio = _level2.stage1.api_e_lostcount * 1 / _level2.stage1.api_e_count;
      _level2.tstrace('_level2.stage1["api_e_count"] = ' + _level2.stage1.api_e_count);
      _level2.tstrace('_level2.stage1["api_e_lostcount"] = ' + _level2.stage1.api_e_lostcount);
      _level2.tstrace('elostratio = ' + lostratio);
      _level2.ecurplane = 0;
      while (lostratio >= _level2.ecurplane * 1 / _level2.etotalplanecount) {
        tellTarget ('_level2.etotalplanes[_level2.ecurplane]') {
          gotoAndPlay('dam2');
        }
        ++_level2.ecurplane;
      }
      if (lostratio < 1 && lostratio != 0) {
        --_level2.ecurplane;
        tellTarget ('_level2.etotalplanes[_level2.ecurplane]') {
          gotoAndPlay('dam1');
        }
      }
    }
    stop();
    seikutext.play();
  }

  frame 144 {
    _level2.tstrace('Frame: kk2');
    if (_level2.stage_flag[1] == 1 && _level2.stage2 != undefined && _level2.stage2 != null) {
      _level2.playSFX('battle_shoot.mp3');
      i = 0;
      while (i < 6) {
        if (_level2.ftaikuu[i] && doesEnemyHavePlane) {
          tellTarget (''aaa' + (i + 1)') {
            gotoAndPlay(1 + random(10));
          }
        } else {
          tellTarget (''aaa' + (i + 1)') {
            stop();
          }
        }
        ++i;
      }
    }
    i = 0;
    while (i < 6) {
      if (_level2.supertaikuu[i] && doesEnemyHavePlane) {
        tellTarget (''f' + (i + 1)') {
          gotoAndPlay('attack_f');
        }
      }
      ++i;
    }
    stop();
    seikutext.play();
  }

  movieClip 895  {
  }

  movieClip 898  {
  }

  movieClip 901  {
  }

  movieClip 902  {

    frame 42 {
      stop();
    }
  }

  frame 145 {
    _level2.tstrace('Frame: kk2_2');
    if (_level2.stage2.api_f_count > 0 && _level2.stage2.api_f_lostcount > 0) {
      lostratio = _level2.stage2.api_f_lostcount * 1 / _level2.stage2.api_f_count;
      _level2.tstrace('_level2.stage2["api_f_count"] = ' + _level2.stage2.api_f_count);
      _level2.tstrace('_level2.stage2["api_f_lostcount"] = ' + _level2.stage2.api_f_lostcount);
      _level2.tstrace('flostratio = ' + lostratio);
      _level2.fcurplane = 0;
      while (lostratio >= _level2.fcurplane * 1 / _level2.ftotalplanecount) {
        _level2.tstrace(_level2.fcurplane * 1 / _level2.ftotalplanecount + ' ' + _level2.fcurplane + ' ' + _level2.ftotalplanecount);
        tellTarget ('_level2.ftotalplanes[_level2.fcurplane]') {
          gotoAndPlay('dam2');
        }
        ++_level2.fcurplane;
      }
      _level2.tstrace('while_end');
      if (lostratio < 1 && lostratio != 0) {
        tellTarget ('_level2.ftotalplanes[_level2.fcurplane - 1]') {
          gotoAndPlay('dam1');
        }
      }
    }
    if (_level2.stage2.api_e_count > 0 && _level2.stage2.api_e_lostcount > 0) {
      lostratio = _level2.stage2.api_e_lostcount * 1 / _level2.stage2.api_e_count;
      _level2.tstrace('_level2.stage2["api_e_count"] = ' + _level2.stage2.api_e_count);
      _level2.tstrace('_level2.stage2["api_e_lostcount"] = ' + _level2.stage2.api_e_lostcount);
      _level2.tstrace('elostratio = ' + lostratio);
      _level2.ecurplane = 0;
      while (lostratio >= _level2.ecurplane * 1 / _level2.etotalplanecount) {
        tellTarget ('_level2.etotalplanes[_level2.ecurplane]') {
          gotoAndPlay('dam2');
        }
        ++_level2.ecurplane;
      }
      if (lostratio < 1 && lostratio != 0) {
        tellTarget ('_level2.etotalplanes[_level2.ecurplane - 1]') {
          gotoAndPlay('dam1');
        }
      }
    }
    stop();
    seikutext.play();
  }

  frame 146 {
    _level2.tstrace('Frame: kk3');
    if (_level2.stage_flag[2] == 1 && _level2.stage3 != undefined && _level2.stage3 != null) {
      if (_level2.stage3 != undefined) {
        i = 1;
        while (i <= 6) {
          if (_level2.stage3.api_erai_flag[i] == 1) {
            _level2.raidam = _level2.stage3.api_edam[i];
            if (_level2.raidam < 16) {
              _level2.bp = 1;
            } else {
              if (_level2.raidam < 40) {
                _level2.bp = 2;
              } else {
                _level2.bp = 3;
              }
            }
            _level2.starty = (eval('planef' + i))._y + 20;
            _level2.tgty = (eval('e' + i))._y + 20;
            tellTarget (''dam_num' + (i + 6)') {
              preset_damage = _level2.raidam;
              crit = false;
              miss = false;
            }
            tellTarget (''mine' + i') {
              if (_level2.raidam > 0) {
                hit = true;
              } else {
                hit = false;
              }
              bp = _level2.bp;
              tgt = _level2.i + 6;
              gotoAndPlay(2);
              tgty = _level2.tgty;
              starty = _level2.starty;
            }
            eval('mine' + i)._x = 360;
            tellTarget (''planef' + i') {
              _level2.starty = _y + plane._y + 60;
              _level2.xdist = 640 - plane._x;
            }
            eval('mine' + i)._y = _level2.starty;
            tellTarget (''mine' + i') {
              starty = _level2.starty;
              xdist = _level2.xdist;
            }
          }
          if (_level2.stage3.api_frai_flag[i] == 1) {
            _level2.raidam = _level2.stage3.api_fdam[i];
            if (_level2.raidam < 16) {
              _level2.bp = 1;
            } else {
              if (_level2.raidam < 40) {
                _level2.bp = 2;
              } else {
                _level2.bp = 3;
              }
            }
            _level2.starty = (eval('planee' + i))._y + 20;
            _level2.tgty = (eval('f' + i))._y + 20;
            tellTarget (''dam_num' + i') {
              preset_damage = _level2.raidam;
              crit = false;
              miss = false;
            }
            tellTarget (''mine' + (i + 6)') {
              if (_level2.raidam > 0) {
                hit = true;
              } else {
                hit = false;
              }
              bp = _level2.bp;
              tgt = _level2.i;
              gotoAndPlay(2);
              tgty = _level2.tgty;
              starty = _level2.starty;
            }
            eval('mine' + (i + 6))._x = 360;
            tellTarget (''planee' + i') {
              _level2.starty = _y + plane._y + 60;
              _level2.xdist = plane._x - 160;
            }
            eval('mine' + (i + 6))._y = _level2.starty;
            tellTarget (''mine' + (i + 6)') {
              starty = _level2.starty;
              xdist = _level2.xdist;
            }
          }
          ++i;
        }
      }
      _level2.tstrace('koukuu gyorai rai_flag = [' + _level2.stage3.api_frai_flag + ', ' + _level2.stage3.api_erai_flag + ']');
      _level2.tstrace('koukuu gyorai dam = [' + _level2.stage3.api_fdam + ', ' + _level2.stage3.api_edam + ']');
      _level2.damageserverdebug += 'koukuu gyorai rai_flag = [' + _level2.stage3.api_frai_flag + ', ' + _level2.stage3.api_erai_flag + ']';
      _level2.damageserverdebug += '\rkoukuu gyorai dam = [' + _level2.stage3.api_fdam + ', ' + _level2.stage3.api_edam + ']';
    }
    stop();
    seikutext.play();
  }

  frame 147 {
    _level2.tstrace('Frame: kk4');
    if (_level2.stage_flag[2] == 1 && _level2.stage3 != undefined && _level2.stage3 != null) {
      i = 1;
      while (i <= 6) {
        if (_level2.stage3.api_ebak_flag[i] == 1) {
          if (_level2.stage3.api_erai_flag[i] != 1) {
            _level2.bakdam = _level2.stage3.api_edam[i];
            tellTarget (''dam_num' + (i + 6)') {
              damage = _level2.bakdam;
              crit = false;
              miss = false;
              gotoAndPlay(2);
            }
            if (_level2.bakdam > 0) {
              if (_level2.bakdam != Math.floor(_level2.bakdam)) {
                tellTarget (''e' + i') {
                  gotoAndPlay('block_e');
                }
                _level2.eshield.play();
              } else {
                tellTarget (''e' + i') {
                  gotoAndPlay('gyorai_hit');
                }
              }
            }
          }
          if (_level2.stage3.api_edam[i] > 0) {
            tellTarget ('exp_kansai1') {
              eid = 6;
              play();
            }
          }
        }
        if (_level2.stage3.api_fbak_flag[i] == 1) {
          if (_level2.stage3.api_frai_flag[i] != 1) {
            _level2.bakdam = _level2.stage3.api_fdam[i];
            tellTarget (''dam_num' + i') {
              damage = _level2.bakdam;
              crit = false;
              miss = false;
              gotoAndPlay(2);
            }
            if (_level2.bakdam > 0) {
              if (_level2.bakdam != Math.floor(_level2.bakdam)) {
                tellTarget (''f' + i') {
                  gotoAndPlay('block_f');
                }
                _level2.fshield.play();
              } else {
                tellTarget (''f' + i') {
                  gotoAndPlay('gyorai_hit');
                }
              }
            }
          }
          if (_level2.stage3.api_fdam[i] > 0) {
            tellTarget ('exp_kansai2') {
              eid = 0;
              play();
            }
          }
        }
        ++i;
      }
      _level2.tstrace('koukuu bakugeki bak_flag = [' + _level2.stage3.api_fbak_flag + ', ' + _level2.stage3.api_ebak_flag + ']');
      _level2.tstrace('koukuu cl_flag = [' + _level2.stage3.api_fcl_flag + ', ' + _level2.stage3.api_ecl_flag + ']');
      _level2.damageserverdebug += '\rkoukuu bakugeki bak_flag = [' + _level2.stage3.api_fbak_flag + ', ' + _level2.stage3.api_ebak_flag + ']';
    }
    stop();
    seikutext.play();
  }

  frame 148 {
    _level2.tstrace('Frame: kk5');
    seikutext.play();
  }

  frame 158 {
  }

  frame 159 {
    _level2.tstrace('Frame: kk6');
    seikutext.play();
  }

  frame 166 {
    if (_level2.gekichinFlg) {
      _level2.gekichinFlg = false;
      gekichin_cut.gotoAndPlay(2);
      stop();
    } else {
      if (_level2.ftaihaFlg) {
        _level2.ftaihaFlg = false;
        taiha_cut.gotoAndPlay(2);
        stop();
      }
    }
  }

  frame 168 {
    if (_level2.support_flag == 0) {
      gotoAndPlay('4_hougeki');
    }
  }

  frame 169 {
    _level2.tstrace('Frame: 4_hougeki');
    i = 1;
    while (i <= 6) {
      tellTarget (''f' + i') {
        gotoAndPlay('default');
      }
      ++i;
    }
    i = 1;
    while (i <= 6) {
      tellTarget (''e' + i') {
        gotoAndPlay('default');
      }
      ++i;
    }
    sokuhanFlag = true;
    if (_level2.psaku_suc || _level2.yasen_reversal) {
      if (_level2.support_flag == 0) {
        gotoAndPlay('kaimaku');
        _level2.centerline.flg = 1;
      } else {
        gotoAndPlay('shien');
        _level2.centerline.flg = 1;
      }
    } else {
      _level2.centerline.flg = 0;
      _level2.centerline.id = 3;
      _level2.centerline.gotoAndPlay(2);
      play();
    }
    i = 1;
    _level2.tstrace('at_list = [' + at_list + ']');
    _level2.tstrace('at_type = [' + at_type + ']');
    _level2.tstrace('df_list = [' + df_list + ']');
    _level2.tstrace('si_list = [' + si_list + ']');
    _level2.tstrace('cl_list = [' + cl_list + ']');
    _level2.tstrace('damage_hougeki = [' + damage_hougeki + ']');
    _level2.damageserverdebug += '\rat_list = [' + at_list + ']';
    _level2.damageserverdebug += '\rat_type = [' + at_type + ']';
    _level2.damageserverdebug += '\rdf_list = [' + df_list + ']';
    _level2.damageserverdebug += '\rsi_list = [' + si_list + ']';
    _level2.damageserverdebug += '\rcl_list = [' + cl_list + ']';
    _level2.damageserverdebug += '\rdamage_hougeki = [' + damage_hougeki + ']';
  }

  frame 178 {
    _level2.tstrace('Frame: hougeki_comein');
    if (_level2.ship_ke[i] > -1) {
      tellTarget (''e' + i') {
        gotoAndPlay('comein');
      }
      tellTarget (''dam_num' + (i + 6)') {
        this._visible = true;
      }
    }
    ++i;
  }

  frame 181 {
    if (i <= 6) {
      gotoAndPlay('hougeki_comein');
    }
  }

  frame 190 {
    if (_level2.support_flag == 0) {
      gotoAndPlay('kaimaku');
    }
  }

  frame 191 {
    _level2.tstrace('Frame: shien');
  }
  
  // unknown tag 88 length 73

  movieClip 908  {
  }

  movieClip 909  {

    frame 44 {
      stop();
    }
  }

  movieClip 910  {

    frame 1 {
      if (_level2.nowhps[7] <= 0) {
        a1._visible = false;
      }
    }

    frame 2 {
      if (_level2.ship_ke[3] == -1 || _level2.nowhps[9] <= 0) {
        t3._visible = false;
      }
      _level2.tstrace('_level2.ship_ke = [' + _level2.ship_ke + ']');
      _level2.tstrace('_level2.nowhps = [' + _level2.nowhps + ']');
    }

    frame 4 {
      if (_level2.ship_ke[5] == -1 || _level2.nowhps[11] <= 0) {
        t5._visible = false;
      }
    }

    frame 6 {
      if (_level2.ship_ke[6] == -1 || _level2.nowhps[12] <= 0) {
        t6._visible = false;
      }
    }

    frame 8 {
      if (_level2.ship_ke[4] == -1 || _level2.nowhps[10] <= 0) {
        t4._visible = false;
      }
    }

    frame 11 {
      if (_level2.ship_ke[2] == -1 || _level2.nowhps[8] <= 0) {
        t2._visible = false;
      }
    }

    frame 41 {
      if (_level2.nowhps[7] > 0) {
        _level2.crit = _level2.support_crit[1] == 2;
        _level2.miss = _level2.support_crit[1] == 0;
        tellTarget ('_level2.dam_num7') {
          damage = _level2.support_damage[1];
          crit = _level2.crit;
          miss = _level2.miss;
          gotoAndPlay(2);
        }
        tellTarget ('_level2.e1') {
          bp = 3;
          gotoAndPlay('gyorai_hit');
        }
      }
    }

    frame 42 {
      if (_level2.ship_ke[3] > 0 && _level2.nowhps[9] > 0) {
        _level2.crit = _level2.support_crit[3] == 2;
        _level2.miss = _level2.support_crit[3] == 0;
        tellTarget ('_level2.dam_num9') {
          damage = _level2.support_damage[3];
          crit = _level2.crit;
          miss = _level2.miss;
          gotoAndPlay(2);
        }
        tmpdmg = _level2.support_damage[3];
        if (tmpdmg != Math.floor(tmpdmg)) {
          tellTarget ('_level2.e3') {
            bp = 3;
            gotoAndPlay('block_e');
          }
          _level2.eshield.play();
        } else {
          tellTarget ('_level2.e3') {
            bp = 3;
            gotoAndPlay('gyorai_hit');
          }
        }
      }
    }

    frame 44 {
      if (_level2.ship_ke[5] > 0 && _level2.nowhps[11] > 0) {
        _level2.crit = _level2.support_crit[5] == 2;
        _level2.miss = _level2.support_crit[5] == 0;
        tellTarget ('_level2.dam_num11') {
          damage = _level2.support_damage[5];
          crit = _level2.crit;
          miss = _level2.miss;
          gotoAndPlay(2);
        }
        tmpdmg = _level2.support_damage[5];
        if (tmpdmg != Math.floor(tmpdmg)) {
          tellTarget ('_level2.e5') {
            bp = 3;
            gotoAndPlay('block_e');
          }
          _level2.eshield.play();
        } else {
          tellTarget ('_level2.e5') {
            bp = 3;
            gotoAndPlay('gyorai_hit');
          }
        }
      }
    }

    frame 46 {
      if (_level2.ship_ke[6] > 0 && _level2.nowhps[12] > 0) {
        _level2.crit = _level2.support_crit[6] == 2;
        _level2.miss = _level2.support_crit[6] == 0;
        tellTarget ('_level2.dam_num12') {
          damage = _level2.support_damage[6];
          crit = _level2.crit;
          miss = _level2.miss;
          gotoAndPlay(2);
        }
        tmpdmg = _level2.support_damage[6];
        if (tmpdmg != Math.floor(tmpdmg)) {
          tellTarget ('_level2.e6') {
            bp = 3;
            gotoAndPlay('block_e');
          }
          _level2.eshield.play();
        } else {
          tellTarget ('_level2.e6') {
            bp = 3;
            gotoAndPlay('gyorai_hit');
          }
        }
      }
    }

    frame 48 {
      if (_level2.ship_ke[4] > 0 && _level2.nowhps[10] > 0) {
        _level2.crit = _level2.support_crit[4] == 2;
        _level2.miss = _level2.support_crit[4] == 0;
        tellTarget ('_level2.dam_num10') {
          damage = _level2.support_damage[4];
          crit = _level2.crit;
          miss = _level2.miss;
          gotoAndPlay(2);
        }
        tmpdmg = _level2.support_damage[4];
        if (tmpdmg != Math.floor(tmpdmg)) {
          tellTarget ('_level2.e4') {
            bp = 3;
            gotoAndPlay('block_e');
          }
          _level2.eshield.play();
        } else {
          tellTarget ('_level2.e4') {
            bp = 3;
            gotoAndPlay('gyorai_hit');
          }
        }
      }
    }

    frame 51 {
      if (_level2.ship_ke[2] > 0 && _level2.nowhps[8] > 0) {
        _level2.crit = _level2.support_crit[2] == 2;
        _level2.miss = _level2.support_crit[2] == 0;
        tellTarget ('_level2.dam_num8') {
          damage = _level2.support_damage[2];
          crit = _level2.crit;
          miss = _level2.miss;
          gotoAndPlay(2);
        }
        tmpdmg = _level2.support_damage[2];
        if (tmpdmg != Math.floor(tmpdmg)) {
          tellTarget ('_level2.e2') {
            bp = 3;
            gotoAndPlay('block_e');
          }
          _level2.eshield.play();
        } else {
          tellTarget ('_level2.e2') {
            bp = 3;
            gotoAndPlay('gyorai_hit');
          }
        }
      }
    }

    frame 77 {
      _level2.shienphase = false;
      stop();
      _level2.play();
    }
  }

  movieClip 913  {
  }

  movieClip 914  {

    frame 32 {
      stop();
    }
  }

  movieClip 915  {

    frame 1 {
      if (_level2.nowhps[7] <= 0) {
        a1._visible = false;
      }
    }

    frame 2 {
      if (_level2.ship_ke[3] == -1 || _level2.nowhps[9] <= 0) {
        a3._visible = false;
      }
      _level2.tstrace('_level2.ship_ke = [' + _level2.ship_ke + ']');
      _level2.tstrace('_level2.nowhps = [' + _level2.nowhps + ']');
    }

    frame 4 {
      if (_level2.ship_ke[5] == -1 || _level2.nowhps[11] <= 0) {
        a5._visible = false;
      }
    }

    frame 6 {
      if (_level2.ship_ke[6] == -1 || _level2.nowhps[12] <= 0) {
        a6._visible = false;
      }
    }

    frame 8 {
      if (_level2.ship_ke[4] == -1 || _level2.nowhps[10] <= 0) {
        a4._visible = false;
      }
    }

    frame 11 {
      if (_level2.ship_ke[2] == -1 || _level2.nowhps[8] <= 0) {
        a2._visible = false;
      }
    }

    frame 30 {
      if (_level2.nowhps[7] > 0) {
        _level2.crit = _level2.support_crit[1] == 2;
        _level2.miss = _level2.support_crit[1] == 0;
        tellTarget ('_level2.dam_num7') {
          damage = _level2.support_damage[1];
          crit = _level2.crit;
          miss = _level2.miss;
          gotoAndPlay(2);
        }
        tellTarget ('_level2.e1') {
          bp = 3;
          gotoAndPlay('ex_e');
        }
      }
    }

    frame 31 {
      if (_level2.ship_ke[3] > 0 && _level2.nowhps[9] > 0) {
        _level2.crit = _level2.support_crit[3] == 2;
        _level2.miss = _level2.support_crit[3] == 0;
        tellTarget ('_level2.dam_num9') {
          damage = _level2.support_damage[3];
          crit = _level2.crit;
          miss = _level2.miss;
          gotoAndPlay(2);
        }
        tmpdmg = _level2.support_damage[3];
        if (tmpdmg != Math.floor(tmpdmg)) {
          tellTarget ('_level2.e3') {
            bp = 3;
            gotoAndPlay('block_e');
          }
          _level2.eshield.play();
        } else {
          tellTarget ('_level2.e3') {
            bp = 3;
            gotoAndPlay('ex_e');
          }
        }
      }
    }

    frame 33 {
      if (_level2.ship_ke[5] > 0 && _level2.nowhps[11] > 0) {
        _level2.crit = _level2.support_crit[5] == 2;
        _level2.miss = _level2.support_crit[5] == 0;
        tellTarget ('_level2.dam_num11') {
          damage = _level2.support_damage[5];
          crit = _level2.crit;
          miss = _level2.miss;
          gotoAndPlay(2);
        }
        tmpdmg = _level2.support_damage[5];
        if (tmpdmg != Math.floor(tmpdmg)) {
          tellTarget ('_level2.e5') {
            bp = 3;
            gotoAndPlay('block_e');
          }
          _level2.eshield.play();
        } else {
          tellTarget ('_level2.e5') {
            bp = 3;
            gotoAndPlay('ex_e');
          }
        }
      }
    }

    frame 35 {
      if (_level2.ship_ke[6] > 0 && _level2.nowhps[12] > 0) {
        _level2.crit = _level2.support_crit[6] == 2;
        _level2.miss = _level2.support_crit[6] == 0;
        tellTarget ('_level2.dam_num12') {
          damage = _level2.support_damage[6];
          crit = _level2.crit;
          miss = _level2.miss;
          gotoAndPlay(2);
        }
        tmpdmg = _level2.support_damage[6];
        if (tmpdmg != Math.floor(tmpdmg)) {
          tellTarget ('_level2.e6') {
            bp = 3;
            gotoAndPlay('block_e');
          }
          _level2.eshield.play();
        } else {
          tellTarget ('_level2.e6') {
            bp = 3;
            gotoAndPlay('ex_e');
          }
        }
      }
    }

    frame 37 {
      if (_level2.ship_ke[4] > 0 && _level2.nowhps[10] > 0) {
        _level2.crit = _level2.support_crit[4] == 2;
        _level2.miss = _level2.support_crit[4] == 0;
        tellTarget ('_level2.dam_num10') {
          damage = _level2.support_damage[4];
          crit = _level2.crit;
          miss = _level2.miss;
          gotoAndPlay(2);
        }
        tmpdmg = _level2.support_damage[4];
        if (tmpdmg != Math.floor(tmpdmg)) {
          tellTarget ('_level2.e4') {
            bp = 3;
            gotoAndPlay('block_e');
          }
          _level2.eshield.play();
        } else {
          tellTarget ('_level2.e4') {
            bp = 3;
            gotoAndPlay('ex_e');
          }
        }
      }
    }

    frame 40 {
      if (_level2.ship_ke[2] > 0 && _level2.nowhps[8] > 0) {
        _level2.crit = _level2.support_crit[2] == 2;
        _level2.miss = _level2.support_crit[2] == 0;
        tellTarget ('_level2.dam_num8') {
          damage = _level2.support_damage[2];
          crit = _level2.crit;
          miss = _level2.miss;
          gotoAndPlay(2);
        }
        tmpdmg = _level2.support_damage[2];
        if (tmpdmg != Math.floor(tmpdmg)) {
          tellTarget ('_level2.e2') {
            bp = 3;
            gotoAndPlay('block_e');
          }
          _level2.eshield.play();
        } else {
          tellTarget ('_level2.e2') {
            bp = 3;
            gotoAndPlay('ex_e');
          }
        }
      }
    }

    frame 65 {
      _level2.shienphase = false;
      stop();
      _level2.play();
    }
  }

  movieClip 917  {

    frame 1 {
      stop();
    }

    frame 19 {
      gotoAndPlay('smokeloop');
    }
  }

  movieClip 919  {

    frame 1 {
      stop();
    }

    frame 5 {
      gotoAndPlay(6 + random(6));
    }

    frame 19 {
      gotoAndStop(1);
    }

    frame 35 {
      plane.play();
      vel = 1;
    }

    frame 36 {
      _y = _y + vel;
      vel += 0.5;
    }

    frame 37 {
      gotoAndPlay('diveloop');
    }

    frame 55 {
      stop();
    }
  }

  movieClip 920  {

    frame 1 {
      play();
    }

    frame 62 {
      gotoAndPlay(1);
    }
  }

  movieClip 922  {
  }

  movieClip 925  {
  }

  movieClip 926  {

    frame 25 {
      gotoAndPlay(1);
    }
  }

  movieClip 927  {

    frame 29 {
      stop();
    }
  }

  movieClip 928  {

    frame 1 {
      if (_level2.shien_pcnt == 3) {
        plane2._visible = false;
      }
      if (_level2.shien_pcnt == 4) {
        plane2.p2._visible = false;
        plane2.p3._visible = false;
      }
      if (_level2.shien_pcnt == 5) {
        plane2.p3._visible = false;
      }
      if (_level2.shien_epcnt == 0) {
        eplane._visible = false;
        eplane2._visible = false;
      }
      if (_level2.shien_epcnt == 1) {
        eplane.p2._visible = false;
        eplane.p3._visible = false;
        eplane2._visible = false;
      }
      if (_level2.shien_epcnt == 2) {
        eplane.p3._visible = false;
        eplane2._visible = false;
      }
      if (_level2.shien_epcnt == 3) {
        eplane2._visible = false;
      }
      if (_level2.shien_epcnt == 4) {
        eplane2.p2._visible = false;
        eplane2.p3._visible = false;
      }
      if (_level2.shien_epcnt == 5) {
        eplane2.p3._visible = false;
      }
    }

    frame 18 {
      if (_level2.support_lost_ratio > 0.99999) {
        plane.p1.gotoAndPlay('dam2');
        plane.p2.gotoAndPlay('dam2');
        plane.p3.gotoAndPlay('dam2');
        if (_level2.shien_pcnt > 3) {
          plane2.p1.gotoAndPlay('dam2');
        }
        if (_level2.shien_pcnt > 4) {
          plane2.p2.gotoAndPlay('dam2');
        }
        if (_level2.shien_pcnt > 5) {
          plane2.p3.gotoAndPlay('dam2');
        }
      } else {
        if (_level2.support_lost_ratio > 0.8333 && _level2.shien_pcnt == 6) {
          plane.p1.gotoAndPlay('dam1');
          plane.p2.gotoAndPlay('dam2');
          plane.p3.gotoAndPlay('dam2');
          plane2.p1.gotoAndPlay('dam2');
          plane2.p2.gotoAndPlay('dam2');
          plane2.p3.gotoAndPlay('dam2');
        } else {
          if (_level2.support_lost_ratio > 0.8 && _level2.shien_pcnt == 5) {
            plane.p1.gotoAndPlay('dam1');
            plane.p2.gotoAndPlay('dam2');
            plane.p3.gotoAndPlay('dam2');
            plane2.p1.gotoAndPlay('dam2');
            plane2.p2.gotoAndPlay('dam2');
          } else {
            if (_level2.support_lost_ratio > 0.75 && _level2.shien_pcnt == 4) {
              plane.p1.gotoAndPlay('dam1');
              plane.p2.gotoAndPlay('dam2');
              plane.p3.gotoAndPlay('dam2');
              plane2.p1.gotoAndPlay('dam2');
            } else {
              if (_level2.support_lost_ratio > 0.6667 && _level2.shien_pcnt == 6) {
                plane.p2.gotoAndPlay('dam1');
                plane.p3.gotoAndPlay('dam2');
                plane2.p1.gotoAndPlay('dam2');
                plane2.p2.gotoAndPlay('dam2');
                plane2.p3.gotoAndPlay('dam2');
              } else {
                if (_level2.support_lost_ratio > 0.6667 && _level2.shien_pcnt == 3) {
                  plane.p1.gotoAndPlay('dam1');
                  plane.p2.gotoAndPlay('dam2');
                  plane.p3.gotoAndPlay('dam2');
                } else {
                  if (_level2.support_lost_ratio > 0.6 && _level2.shien_pcnt == 5) {
                    plane.p2.gotoAndPlay('dam1');
                    plane.p3.gotoAndPlay('dam2');
                    plane2.p1.gotoAndPlay('dam2');
                    plane2.p2.gotoAndPlay('dam2');
                  } else {
                    if (_level2.support_lost_ratio > 0.5 && _level2.shien_pcnt == 6) {
                      plane.p3.gotoAndPlay('dam1');
                      plane2.p1.gotoAndPlay('dam2');
                      plane2.p2.gotoAndPlay('dam2');
                      plane2.p3.gotoAndPlay('dam2');
                    } else {
                      if (_level2.support_lost_ratio > 0.5 && _level2.shien_pcnt == 4) {
                        plane.p2.gotoAndPlay('dam1');
                        plane.p3.gotoAndPlay('dam2');
                        plane2.p1.gotoAndPlay('dam2');
                      } else {
                        if (_level2.support_lost_ratio > 0.4 && _level2.shien_pcnt == 5) {
                          plane.p3.gotoAndPlay('dam1');
                          plane2.p1.gotoAndPlay('dam2');
                          plane2.p2.gotoAndPlay('dam2');
                        } else {
                          if (_level2.support_lost_ratio > 0.3333 && _level2.shien_pcnt == 6) {
                            plane2.p1.gotoAndPlay('dam1');
                            plane2.p2.gotoAndPlay('dam2');
                            plane2.p3.gotoAndPlay('dam2');
                          } else {
                            if (_level2.support_lost_ratio > 0.3333 && _level2.shien_pcnt == 3) {
                              plane.p2.gotoAndPlay('dam1');
                              plane.p3.gotoAndPlay('dam2');
                            } else {
                              if (_level2.support_lost_ratio > 0.25 && _level2.shien_pcnt == 4) {
                                plane.p3.gotoAndPlay('dam1');
                                plane2.p1.gotoAndPlay('dam2');
                              } else {
                                if (_level2.support_lost_ratio > 0.2 && _level2.shien_pcnt == 5) {
                                  plane2.p1.gotoAndPlay('dam1');
                                  plane2.p2.gotoAndPlay('dam2');
                                } else {
                                  if (_level2.support_lost_ratio > 0.1667 && _level2.shien_pcnt == 6) {
                                    plane2.p2.gotoAndPlay('dam1');
                                    plane2.p3.gotoAndPlay('dam2');
                                  } else {
                                    if (_level2.support_lost_ratio > 1.0e-05) {
                                      if (_level2.shien_pcnt == 3) {
                                        plane.p3.gotoAndPlay('dam1');
                                      } else {
                                        if (_level2.shien_pcnt == 4) {
                                          plane2.p1.gotoAndPlay('dam1');
                                        } else {
                                          if (_level2.shien_pcnt == 5) {
                                            plane2.p2.gotoAndPlay('dam1');
                                          } else {
                                            if (_level2.shien_pcnt == 6) {
                                              plane2.p3.gotoAndPlay('dam1');
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      if (_level2.support_lost_ratio > 1.0e-05) {
        if (_level2.shien_pcnt > 0) {
          eplane.p1.gotoAndPlay('atk1');
        }
        if (_level2.shien_pcnt > 1) {
          eplane.p2.gotoAndPlay('atk1');
        }
        if (_level2.shien_pcnt > 2) {
          eplane.p3.gotoAndPlay('atk1');
        }
        if (_level2.shien_pcnt > 3) {
          eplane2.p1.gotoAndPlay('atk1');
        }
        if (_level2.shien_pcnt > 4) {
          eplane2.p2.gotoAndPlay('atk1');
        }
        if (_level2.shien_pcnt > 5) {
          eplane2.p3.gotoAndPlay('atk1');
        }
      }
    }

    frame 26 {
      if (_level2.support_lost_ratio > 0.99999) {
        gotoAndStop(1);
        _level2.play();
      }
    }

    frame 27 {
      if (_level2.support_erai_flag[3] == 0) {
        t3._visible = false;
      }
      _level2.tstrace('_level2.support_erai_flag[3] = ' + _level2.support_erai_flag[3]);
      _level2.tstrace('t3._visible = ' + t3._visible);
    }

    frame 30 {
      if (_level2.support_erai_flag[6] == 0) {
        t6._visible = false;
      }
      _level2.tstrace('_level2.support_erai_flag[6] = ' + _level2.support_erai_flag[6]);
      _level2.tstrace('t6._visible = ' + t6._visible);
    }

    frame 33 {
      if (_level2.support_erai_flag[4] == 0) {
        t4._visible = false;
      }
      _level2.tstrace('_level2.support_erai_flag[4] = ' + _level2.support_erai_flag[4]);
      _level2.tstrace('t4._visible = ' + t4._visible);
    }

    frame 36 {
      if (_level2.support_erai_flag[1] == 0) {
        t1._visible = false;
      }
      _level2.tstrace('_level2.support_erai_flag[1] = ' + _level2.support_erai_flag[1]);
      _level2.tstrace('t1._visible = ' + t1._visible);
    }

    frame 39 {
      if (_level2.support_erai_flag[5] == 0) {
        t5._visible = false;
      }
      _level2.tstrace('_level2.support_erai_flag[5] = ' + _level2.support_erai_flag[5]);
      _level2.tstrace('t5._visible = ' + t5._visible);
    }

    frame 42 {
      if (_level2.support_erai_flag[2] == 0) {
        t2._visible = false;
      }
      _level2.tstrace('_level2.support_erai_flag[2] = ' + _level2.support_erai_flag[2]);
      _level2.tstrace('t2._visible = ' + t2._visible);
    }

    frame 45 {
      if (_level2.support_erai_flag[3] == 0) {
        t3._visible = false;
      }
    }

    frame 48 {
      if (_level2.support_erai_flag[6] == 0) {
        t6._visible = false;
      }
    }

    frame 51 {
      if (_level2.support_erai_flag[4] == 0) {
        t4._visible = false;
      }
    }

    frame 54 {
      if (_level2.support_erai_flag[1] == 0) {
        t1._visible = false;
      }
    }

    frame 57 {
      if (_level2.support_erai_flag[5] == 0) {
        t5._visible = false;
      }
    }

    frame 60 {
      if (_level2.support_erai_flag[2] == 0) {
        t2._visible = false;
      }
      _level2.playSFX('battle_bomb3.mp3');
    }

    frame 64 {
      expl = false;
      i = 1;
      while (i <= 6) {
        if (_level2.support_ebak_flag[i] == 1) {
          expl = true;
        }
        ++i;
      }
      if (expl == false) {
        bombing._visible = false;
      }
    }

    frame 66 {
      _level2.nosfx = true;
      i = 0;
      while (i < 6) {
        _level2.crit = _level2.support_crit[i + 1] == 1;
        tellTarget (''_level2.dam_num' + (i + 7)') {
          damage = _level2.support_damage[_level2.sfattack.plane.i + 1];
          crit = _level2.crit;
          miss = false;
          gotoAndPlay(2);
        }
        tmpdmg = _level2.support_damage[_level2.sfattack.plane.i + 1];
        if (tmpdmg != Math.floor(tmpdmg)) {
          tellTarget (''_level2.e' + (i + 1)') {
            bp = 3;
            gotoAndPlay('block_e');
          }
          _level2.eshield.play();
        } else {
          tellTarget (''_level2.e' + (i + 1)') {
            bp = 3;
            gotoAndPlay('ex_e');
          }
        }
        ++i;
      }
    }

    frame 91 {
      _level2.nosfx = false;
      _level2.shienphase = false;
      stop();
      _level2.play();
    }
  }

  movieClip 929  {

    frame 1 {
      stop();
    }

    frame 4 {
      _level2.shienphase = true;
      switch (_level2.support_flag) {
        case 1:
          torpedo._visible = false;
          torpedo.stop();
          artillery._visible = false;
          artillery.stop();
          _level2.playSFX('battle_plane1.mp3');
          break;
        case 2:
          plane._visible = false;
          plane.stop();
          torpedo._visible = false;
          torpedo.stop();
          _level2.playSFX('artillery');
          break;
        case 3:
          plane._visible = false;
          plane.stop();
          artillery._visible = false;
          artillery.stop();
          _level2.playSFX('battle_gyorai.mp3');
          break;
        default:
          stop();
          _level2.shienphase = false;
          _level2.play();
      }
    }

    frame 6 {
      gotoAndPlay('loop');
    }
  }

  movieClip 934  {
  }

  movieClip 935  {

    frame 1 {
      play();
    }

    frame 3 {
      now_con.gotoAndStop(1);
      if (sid == 0) {
        flagmark.gotoAndStop(2);
      }
      stop();
    }
  }

  movieClip 938  {
  }

  movieClip 941  {
  }

  movieClip 942  {

    frame 8 {
      stop();
    }
  }

  movieClip 943  {

    frame 4 {
      scnt = 0;
      i = 0;
      while (i < 6) {
        if (_level2.support_deck[i] != -1) {
          ++scnt;
        }
        ++i;
      }
      if (scnt != 3 && scnt != 4) {
        s1alt._visible = false;
        _level2.banldr1.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + _level2.support_deck[0] + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.support_deck[0])].api_version, s1.girl);
        _level2.banldr1.addListener(_level2.banlsnr1);
        _level2.banlsnr1.onLoadInit = function () {
          _level2.tstrace('Loading character ' + _level2.support_deck[0] + ' banner artwork');
          if (_level2.support_taiha[0] == 1) {
            _level2.sfcut.s1.girl.gotoAndStop(3);
            _level2.sfcut.s1.girl._x = 0;
            _level2.sfcut.s1.girl._y = 0;
          } else {
            _level2.sfcut.s1.girl.gotoAndStop(2);
            _level2.sfcut.s1.girl._x = 0;
            _level2.sfcut.s1.girl._y = 0;
          }
          _level2.banldr1.removeListener(_level2.banlsnr1);
        };

        _level2.banlsnr1.onLoadError = function () {
          _level2.tstrace('Failed to load character ' + _level2.support_deck[0] + ' banner artwork');
          _level2.sfcut.s1.attachMovie('nodatabanner', 'girl', 1);
          _level2.sfcut.s1.girl._x = 0;
          _level2.sfcut.s1.girl._y = 0;
          _level2.banldr1.removeListener(_level2.banlsnr1);
        };

      } else {
        s1._visible = false;
        _level2.banldr1.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + _level2.support_deck[0] + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.support_deck[0])].api_version, s1alt.girl);
        _level2.banldr1.addListener(_level2.banlsnr1);
        _level2.banlsnr1.onLoadInit = function () {
          _level2.tstrace('Loading character ' + _level2.support_deck[0] + ' banner artwork');
          if (_level2.support_taiha[0] == 1) {
            _level2.sfcut.s1alt.girl.gotoAndStop(3);
            _level2.sfcut.s1alt.girl._x = 0;
            _level2.sfcut.s1alt.girl._y = 0;
          } else {
            _level2.sfcut.s1alt.girl.gotoAndStop(2);
            _level2.sfcut.s1alt.girl._x = 0;
            _level2.sfcut.s1alt.girl._y = 0;
          }
          _level2.banldr1.removeListener(_level2.banlsnr1);
        };

        _level2.banlsnr1.onLoadError = function () {
          _level2.tstrace('Failed to load character ' + _level2.support_deck[0] + ' banner artwork');
          _level2.sfcut.s1alt.attachMovie('nodatabanner', 'girl', 1);
          _level2.sfcut.s1alt.girl._x = 0;
          _level2.sfcut.s1alt.girl._y = 0;
          _level2.banldr1.removeListener(_level2.banlsnr1);
        };

      }
      if (_level2.support_deck[1] != -1) {
        if (scnt != 4 && scnt != 5) {
          s2alt._visible = false;
          _level2.banldr2.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + _level2.support_deck[1] + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.support_deck[1])].api_version, s2.girl);
          _level2.banldr2.addListener(_level2.banlsnr2);
          _level2.banlsnr2.onLoadInit = function () {
            _level2.tstrace('Loading character ' + _level2.support_deck[1] + ' banner artwork');
            if (_level2.support_taiha[1] == 1) {
              _level2.sfcut.s2.girl.gotoAndStop(3);
              _level2.sfcut.s2.girl._x = 0;
              _level2.sfcut.s2.girl._y = 0;
            } else {
              _level2.sfcut.s2.girl.gotoAndStop(2);
              _level2.sfcut.s2.girl._x = 0;
              _level2.sfcut.s2.girl._y = 0;
            }
            _level2.banldr2.removeListener(_level2.banlsnr2);
          };

          _level2.banlsnr2.onLoadError = function () {
            _level2.tstrace('Failed to load character ' + _level2.support_deck[1] + ' banner artwork');
            _level2.sfcut.s2.attachMovie('nodatabanner', 'girl', 1);
            _level2.sfcut.s2.girl._x = 0;
            _level2.sfcut.s2.girl._y = 0;
            _level2.banldr2.removeListener(_level2.banlsnr2);
          };

        } else {
          s2._visible = false;
          _level2.banldr2.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + _level2.support_deck[1] + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.support_deck[1])].api_version, s2alt.girl);
          _level2.banldr2.addListener(_level2.banlsnr2);
          _level2.banlsnr2.onLoadInit = function () {
            _level2.tstrace('Loading character ' + _level2.support_deck[1] + ' banner artwork');
            if (_level2.support_taiha[1] == 1) {
              _level2.sfcut.s2alt.girl.gotoAndStop(3);
              _level2.sfcut.s2alt.girl._x = 0;
              _level2.sfcut.s2alt.girl._y = 0;
            } else {
              _level2.sfcut.s2alt.girl.gotoAndStop(2);
              _level2.sfcut.s2alt.girl._x = 0;
              _level2.sfcut.s2alt.girl._y = 0;
            }
            _level2.banldr2.removeListener(_level2.banlsnr2);
          };

          _level2.banlsnr2.onLoadError = function () {
            _level2.tstrace('Failed to load character ' + _level2.support_deck[1] + ' banner artwork');
            _level2.sfcut.s2alt.attachMovie('nodatabanner', 'girl', 1);
            _level2.sfcut.s2alt.girl._x = 0;
            _level2.sfcut.s2alt.girl._y = 0;
            _level2.banldr2.removeListener(_level2.banlsnr2);
          };

        }
      } else {
        s2._visible = false;
        s2alt._visible = false;
      }
      if (_level2.support_deck[2] != -1) {
        if (scnt != 3 && scnt != 4) {
          s3alt._visible = false;
          _level2.banldr3.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + _level2.support_deck[2] + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.support_deck[2])].api_version, s3.girl);
          _level2.banldr3.addListener(_level2.banlsnr3);
          _level2.banlsnr3.onLoadInit = function () {
            _level2.tstrace('Loading character ' + _level2.support_deck[2] + ' banner artwork');
            if (_level2.support_taiha[2] == 1) {
              _level2.sfcut.s3.girl.gotoAndStop(3);
              _level2.sfcut.s3.girl._x = 0;
              _level2.sfcut.s3.girl._y = 0;
            } else {
              _level2.sfcut.s3.girl.gotoAndStop(2);
              _level2.sfcut.s3.girl._x = 0;
              _level2.sfcut.s3.girl._y = 0;
            }
            _level2.banldr3.removeListener(_level2.banlsnr3);
          };

          _level2.banlsnr3.onLoadError = function () {
            _level2.tstrace('Failed to load character ' + _level2.support_deck[2] + ' banner artwork');
            _level2.sfcut.s3.attachMovie('nodatabanner', 'girl', 1);
            _level2.sfcut.s3.girl._x = 0;
            _level2.sfcut.s3.girl._y = 0;
            _level2.banldr3.removeListener(_level2.banlsnr3);
          };

        } else {
          s3._visible = false;
          _level2.banldr3.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + _level2.support_deck[2] + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.support_deck[2])].api_version, s3alt.girl);
          _level2.banldr3.addListener(_level2.banlsnr3);
          _level2.banlsnr3.onLoadInit = function () {
            _level2.tstrace('Loading character ' + _level2.support_deck[2] + ' banner artwork');
            if (_level2.support_taiha[2] == 1) {
              _level2.sfcut.s3alt.girl.gotoAndStop(3);
              _level2.sfcut.s3alt.girl._x = 0;
              _level2.sfcut.s3alt.girl._y = 0;
            } else {
              _level2.sfcut.s3alt.girl.gotoAndStop(2);
              _level2.sfcut.s3alt.girl._x = 0;
              _level2.sfcut.s3alt.girl._y = 0;
            }
            _level2.banldr3.removeListener(_level2.banlsnr3);
          };

          _level2.banlsnr3.onLoadError = function () {
            _level2.tstrace('Failed to load character ' + _level2.support_deck[2] + ' banner artwork');
            _level2.sfcut.s3alt.attachMovie('nodatabanner', 'girl', 1);
            _level2.sfcut.s3alt.girl._x = 0;
            _level2.sfcut.s3alt.girl._y = 0;
            _level2.banldr3.removeListener(_level2.banlsnr3);
          };

        }
      } else {
        s3._visible = false;
        s3alt._visible = false;
      }
      if (_level2.support_deck[3] != -1) {
        if (scnt != 4 && scnt != 5) {
          s4alt._visible = false;
          _level2.banldr4.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + _level2.support_deck[3] + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.support_deck[3])].api_version, s4.girl);
          _level2.banldr4.addListener(_level2.banlsnr4);
          _level2.banlsnr4.onLoadInit = function () {
            _level2.tstrace('Loading character ' + _level2.support_deck[3] + ' banner artwork');
            if (_level2.support_taiha[3] == 1) {
              _level2.sfcut.s4.girl.gotoAndStop(3);
              _level2.sfcut.s4.girl._x = 0;
              _level2.sfcut.s4.girl._y = 0;
            } else {
              _level2.sfcut.s4.girl.gotoAndStop(2);
              _level2.sfcut.s4.girl._x = 0;
              _level2.sfcut.s4.girl._y = 0;
            }
            _level2.banldr4.removeListener(_level2.banlsnr4);
          };

          _level2.banlsnr4.onLoadError = function () {
            _level2.tstrace('Failed to load character ' + _level2.support_deck[3] + ' banner artwork');
            _level2.sfcut.s4.attachMovie('nodatabanner', 'girl', 1);
            _level2.sfcut.s4.girl._x = 0;
            _level2.sfcut.s4.girl._y = 0;
            _level2.banldr4.removeListener(_level2.banlsnr4);
          };

        } else {
          s4._visible = false;
          _level2.banldr4.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + _level2.support_deck[3] + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.support_deck[3])].api_version, s4alt.girl);
          _level2.banldr4.addListener(_level2.banlsnr4);
          _level2.banlsnr4.onLoadInit = function () {
            _level2.tstrace('Loading character ' + _level2.support_deck[3] + ' banner artwork');
            if (_level2.support_taiha[3] == 1) {
              _level2.sfcut.s4alt.girl.gotoAndStop(3);
              _level2.sfcut.s4alt.girl._x = 0;
              _level2.sfcut.s4alt.girl._y = 0;
            } else {
              _level2.sfcut.s4alt.girl.gotoAndStop(2);
              _level2.sfcut.s4alt.girl._x = 0;
              _level2.sfcut.s4alt.girl._y = 0;
            }
            _level2.banldr4.removeListener(_level2.banlsnr4);
          };

          _level2.banlsnr4.onLoadError = function () {
            _level2.tstrace('Failed to load character ' + _level2.support_deck[3] + ' banner artwork');
            _level2.sfcut.s4alt.attachMovie('nodatabanner', 'girl', 1);
            _level2.sfcut.s4alt.girl._x = 0;
            _level2.sfcut.s4alt.girl._y = 0;
            _level2.banldr4.removeListener(_level2.banlsnr4);
          };

        }
      } else {
        s4._visible = false;
        s4alt._visible = false;
      }
      if (_level2.support_deck[4] != -1) {
        _level2.banldr5.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + _level2.support_deck[4] + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.support_deck[4])].api_version, s5.girl);
        _level2.banldr5.addListener(_level2.banlsnr5);
        _level2.banlsnr5.onLoadInit = function () {
          _level2.tstrace('Loading character ' + _level2.support_deck[4] + ' banner artwork');
          if (_level2.support_taiha[4] == 1) {
            _level2.sfcut.s5.girl.gotoAndStop(3);
            _level2.sfcut.s5.girl._x = 0;
            _level2.sfcut.s5.girl._y = 0;
          } else {
            _level2.sfcut.s5.girl.gotoAndStop(2);
            _level2.sfcut.s5.girl._x = 0;
            _level2.sfcut.s5.girl._y = 0;
          }
          _level2.tstrace('_level2.sfcut.s5.girl._currentframe = ' + _level2.sfcut.s5.girl._currentframe);
          _level2.banldr5.removeListener(_level2.banlsnr5);
        };

        _level2.banlsnr5.onLoadError = function () {
          _level2.tstrace('Failed to load character ' + _level2.support_deck[4] + ' banner artwork');
          _level2.sfcut.s5.attachMovie('nodatabanner', 'girl', 1);
          _level2.sfcut.s5.girl._x = 0;
          _level2.sfcut.s5.girl._y = 0;
          _level2.banldr5.removeListener(_level2.banlsnr5);
        };

      } else {
        s5._visible = false;
      }
      if (_level2.support_deck[5] != -1) {
        _level2.banldr6.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + _level2.support_deck[5] + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.support_deck[5])].api_version, s6.girl);
        _level2.banldr6.addListener(_level2.banlsnr6);
        _level2.banlsnr6.onLoadInit = function () {
          _level2.tstrace('Loading character ' + _level2.support_deck[5] + ' banner artwork');
          if (_level2.support_taiha[5] == 1) {
            _level2.sfcut.s6.girl.gotoAndStop(3);
            _level2.sfcut.s6.girl._x = 0;
            _level2.sfcut.s6.girl._y = 0;
          } else {
            _level2.sfcut.s6.girl.gotoAndStop(2);
            _level2.sfcut.s6.girl._x = 0;
            _level2.sfcut.s6.girl._y = 0;
          }
          _level2.tstrace('_level2.sfcut.s6.girl._currentframe = ' + _level2.sfcut.s6.girl._currentframe);
          _level2.banldr6.removeListener(_level2.banlsnr6);
        };

        _level2.banlsnr6.onLoadError = function () {
          _level2.tstrace('Failed to load character ' + _level2.support_deck[5] + ' banner artwork');
          _level2.sfcut.s6.attachMovie('nodatabanner', 'girl', 1);
          _level2.sfcut.s6.girl._x = 0;
          _level2.sfcut.s6.girl._y = 0;
          _level2.banldr6.removeListener(_level2.banlsnr6);
        };

      } else {
        s6._visible = false;
      }
    }

    instance s6 of movieClip 935  {

      onClipEvent (load) {
        sid = 5;
      }
    }

    instance s2 of movieClip 935  {

      onClipEvent (load) {
        sid = 4;
      }
    }

    instance s4 of movieClip 935  {

      onClipEvent (load) {
        sid = 3;
      }
    }

    instance s3 of movieClip 935  {

      onClipEvent (load) {
        sid = 2;
      }
    }

    instance s1 of movieClip 935  {

      onClipEvent (load) {
        sid = 1;
      }
    }

    instance s5 of movieClip 935  {

      onClipEvent (load) {
        sid = 0;
      }
    }

    instance s2alt of movieClip 935  {

      onClipEvent (load) {
        sid = 4;
      }
    }

    instance s4alt of movieClip 935  {

      onClipEvent (load) {
        sid = 3;
      }
    }

    instance s3alt of movieClip 935  {

      onClipEvent (load) {
        sid = 2;
      }
    }

    instance s1alt of movieClip 935  {

      onClipEvent (load) {
        sid = 1;
      }
    }

    frame 106 {
      _level2.ldr1.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + _level2.support_deck[0] + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.support_deck[0])].api_version, ship.ship);
      _level2.ldr1.addListener(_level2.lsnr1);
      _level2.lsnr1.onLoadInit = function () {
        _level2.tstrace('Loading character ' + _level2.support_deck[0] + ' artwork');
        if (_level2.support.taiha[0] == 1) {
          ship.ship.gotoAndStop(11);
          ship.ship._x = _level1.SYS_ship_pos[_level1.getPosID(_level2.support_deck[0])].api_battle_d[0];
          ship.ship._y = _level1.SYS_ship_pos[_level1.getPosID(_level2.support_deck[0])].api_battle_d[1];
        } else {
          ship.ship.gotoAndStop(10);
          ship.ship._x = _level1.SYS_ship_pos[_level1.getPosID(_level2.support_deck[0])].api_battle_n[0];
          ship.ship._y = _level1.SYS_ship_pos[_level1.getPosID(_level2.support_deck[0])].api_battle_n[1];
        }
        _level2.ldr1.removeListener(_level2.lsnr1);
      };

      _level2.lsnr1.onLoadError = function () {
        _level2.tstrace('Failed to load character ' + _level2.support_deck[0] + ' artwork');
        ship.attachMovie('nodatachar', 'ship', 1);
        ship.ship._x = 440;
        ship.ship._y = 810;
        _level2.ldr1.removeListener(_level2.lsnr1);
      };

    }

    frame 128 {
      _level2.playVoice(_level2.support_deck[0], [16, 17, 18], [33, 33, 34]);
    }

    frame 151 {
      _level2.sfattack.play();
    }

    frame 176 {
      stop();
    }
  }

  frame 203 {
    upperbar.nex = 6 + _level2.support_flag;
    upperbar.play();
    stop();
  }

  frame 204 {
    _level2.shienphase = false;
    _level2.nosfx = false;
  }

  frame 208 {
    _level2.tstrace('Frame: kaimaku');
    i = 1;
    while (i <= 6) {
      tellTarget (''f' + i') {
        gotoAndStop('default');
      }
      tellTarget (''e' + i') {
        gotoAndStop('default');
      }
      ++i;
    }
    if (_level2.opening_flag == 1) {
      _level2.centerline.flg = 1;
      i = 1;
      while (i <= 6) {
        tellTarget (''f' + i') {
          gotoAndStop('default');
        }
        tellTarget (''e' + i') {
          gotoAndStop('default');
        }
        ++i;
      }
      lop = 0;
      upperbar.gotoAndStop(1);
      _level2.tstrace('kfrai = [' + kfrai + ']');
      _level2.tstrace('kerai = [' + kerai + ']');
      _level2.tstrace('kfdam = [' + kfdam + ']');
      _level2.tstrace('kedam = [' + kedam + ']');
      _level2.tstrace('kfydam = [' + kfydam + ']');
      _level2.tstrace('keydam = [' + keydam + ']');
      _level2.tstrace('kfcl = [' + kfcl + ']');
      _level2.tstrace('kecl = [' + kecl + ']');
      _level2.damageserverdebug += '\rkfrai = [' + kfrai + '], kerai = [' + kerai + ']';
      _level2.damageserverdebug += '\rkfdam = [' + kfdam + '], kedam = [' + kedam + ']';
      _level2.damageserverdebug += '\rkfydam = [' + kfydam + '], keydam = [' + keydam + ']';
      _level2.damageserverdebug += '\rkfcl = [' + kfcl + '], kecl = [' + kecl + ']';
    } else {
      gotoAndPlay('hougeki_start');
    }
    _level2.tstrace('_level2.opening_flag = ' + _level2.opening_flag);
  }

  frame 211 {
    if (_level2.gekichin_cut._currentframe != 1 || _level2.taiha_cut._currentframe != 1) {
      stop();
    }
  }

  frame 216 {
    _level2.tstrace('Frame: kai_raigeki_loop');
  }

  frame 217 {
    shmax = -35;
    if (centerline.flg == 0) {
      gotoAndPlay('kai_raigeki_loop');
    } else {
      sh = 0;
      i = 1;
      while (i <= 6) {
        if (kfrai[i] >= 0 || kerai[i] >= 0) {
          shmax = 60;
        }
        ++i;
      }
      zfx = [0, 0, 0, 0, 0, 0];
      zfy = [0, 0, 0, 0, 0, 0];
      zex = [0, 0, 0, 0, 0, 0];
      zey = [0, 0, 0, 0, 0, 0];
      i = 1;
      while (i <= 6) {
        zfx[i] = (eval('f' + i))._x + 80;
        zfy[i] = (eval('f' + i))._y + 20;
        zex[i] = (eval('e' + i))._x + 80;
        zey[i] = (eval('e' + i))._y + 20;
        ++i;
      }
      i = 1;
      while (i <= 6) {
        eval('sp' + i)._x = (eval('f' + i))._x + 160;
        eval('sp' + i)._y = (eval('f' + i))._y + 40;
        eval('sp' + (i + 6))._x = (eval('e' + i))._x;
        eval('sp' + (i + 6))._y = (eval('e' + i))._y + 40;
        if (kfrai[i] > 0) {
          tellTarget (''f' + i') {
            gotoAndPlay('raigeki');
          }
          tellTarget ('_level2.sfx') {
            sstr[(curCh + queued) % totCh] = 'battle_gyorai.mp3';
            ++queued;
            gotoAndPlay('play');
          }
        }
        if (kerai[i] > 0) {
          tellTarget (''e' + i') {
            gotoAndPlay('raigeki');
          }
          _level2.playSFX('battle_gyorai.mp3');
        }
        ++i;
      }
    }
  }

  frame 218 {
    _level2.tstrace('Frame: kai_shoots');
  }

  frame 219 {
    ++lop;
    if (lop < 15) {
      gotoAndPlay('kai_shoots');
    } else {
      i = 1;
      while (i <= 6) {
        if (kfrai[i] > 0) {
          _level2.playVoice(ship_kf[i] - 1, [15, 16], [50, 50]);
          break;
        }
        ++i;
      }
      _level2.tstrace('kerai : ' + kerai);
      i = 1;
      while (i <= 6) {
        if (kerai[i] > 0) {
          _level2.playVoiceE_Atk(i, ship_ke[i]);
          break;
        }
        ++i;
      }
      i = 1;
      while (i <= 6) {
        if (kfrai[i] > 0) {
          tellTarget (''f' + i') {
            gotoAndPlay('raigeki2');
          }
          rr = Math.atan2(zey[kfrai[i]] - zfy[i], zex[kfrai[i]] - zfx[i]) * 180 / Math.PI;
          eval('g' + i)._x = zfx[i];
          eval('g' + i)._y = zfy[i];
          eval('g' + i)._rotation = rr;
        }
        if (kerai[i] > 0) {
          tellTarget (''e' + i') {
            gotoAndPlay('raigeki3');
          }
          rr = Math.atan2(zfy[kerai[i]] - zey[i], zfx[kerai[i]] - zex[i]) * 180 / Math.PI;
          eval('g' + (i + 6))._x = zex[i];
          eval('g' + (i + 6))._y = zey[i];
          eval('g' + (i + 6))._rotation = rr;
        }
        ++i;
      }
    }
  }

  frame 220 {
    _level2.tstrace('Frame: kai_gyorai_loop');
    ++sh;
    i = 1;
    while (i <= 6) {
      if (kfrai[i] > 0) {
        eval('g' + i)._x = zfx[i] + ((zex[kfrai[i]] - zfx[i]) / shmax) * sh;
        eval('g' + i)._y = zfy[i] + ((zey[kfrai[i]] - zfy[i]) / shmax) * sh;
      }
      if (kerai[i] > 0) {
        eval('g' + (i + 6))._x = zex[i] + ((zfx[kerai[i]] - zex[i]) / shmax) * sh;
        eval('g' + (i + 6))._y = zey[i] + ((zfy[kerai[i]] - zey[i]) / shmax) * sh;
      }
      ++i;
    }
  }

  frame 221 {
    if (sh == shmax) {
      i = 1;
      while (i <= 12) {
        tellTarget (''dam_num' + i') {
          crit = false;
          norm = false;
          miss = false;
          hirurai = true;
        }
        ++i;
      }
      i = 1;
      while (i <= 6) {
        if (kerai[i] > 0) {
          tmp = kfdam[kerai[i]];
          tellTarget (''dam_num' + kerai[i]') {
            damage = _level2.tmp;
            if (_level2.kecl[_level2.i] == 0) {
              miss = true;
            }
            if (_level2.kecl[_level2.i] == 1) {
              norm = true;
            }
            if (_level2.kecl[_level2.i] == 2) {
              crit = true;
            }
            gotoAndPlay(2);
          }
          if (tmp > 0) {
            tellTarget (''sp' + kerai[i]') {
              gotoAndPlay('sp1');
            }
          } else {
            tellTarget (''ssp' + kerai[i]') {
              gotoAndPlay('sp1');
            }
          }
          if (tmp < 16) {
            _level2.bp = 1;
          } else {
            if (tmp < 40) {
              _level2.bp = 2;
            } else {
              _level2.bp = 3;
            }
          }
          if (kfdam[kerai[i]] != Math.floor(kfdam[kerai[i]])) {
            tellTarget (''f' + kerai[i]') {
              bp = _level2.bp;
              gotoAndPlay('block_f');
            }
            _level2.fshield.play();
          } else {
            tellTarget (''f' + kerai[i]') {
              bp = _level2.bp;
              gotoAndPlay('gyorai_hit');
            }
          }
        }
        if (kfrai[i] > 0) {
          tmp = kedam[kfrai[i]];
          tellTarget (''dam_num' + (kfrai[i] + 6)') {
            damage = _level2.tmp;
            if (_level2.kfcl[_level2.i] == 0) {
              miss = true;
            }
            if (_level2.kfcl[_level2.i] == 1) {
              norm = true;
            }
            if (_level2.kfcl[_level2.i] == 2) {
              crit = true;
            }
            gotoAndPlay(2);
          }
          if (tmp > 0) {
            tellTarget (''sp' + (kfrai[i] + 6)') {
              gotoAndPlay('sp2');
            }
          } else {
            tellTarget (''ssp' + (kfrai[i] + 6)') {
              gotoAndPlay('sp2');
            }
          }
          if (tmp < 16) {
            _level2.bp = 1;
          } else {
            if (tmp < 40) {
              _level2.bp = 2;
            } else {
              _level2.bp = 3;
            }
          }
          if (kedam[kfrai[i]] != Math.floor(kedam[kfrai[i]])) {
            tellTarget (''e' + kfrai[i]') {
              bp = _level2.bp;
              gotoAndPlay('block_e');
            }
            _level2.eshield.play();
          } else {
            tellTarget (''e' + kfrai[i]') {
              bp = _level2.bp;
              gotoAndPlay('gyorai_hit');
            }
          }
        }
        ++i;
      }
    }
    if (sh < shmax + 35) {
      gotoAndPlay('kai_gyorai_loop');
    } else {
      i = 1;
      while (i <= 6) {
        tellTarget (''f' + i') {
          gotoAndStop('default');
        }
        tellTarget (''e' + i') {
          gotoAndStop('default');
        }
        ++i;
      }
      i = 1;
      while (i <= 12) {
        eval('g' + i)._y = -300;
        ++i;
      }
    }
  }

  frame 227 {
    if (_level2.gekichinFlg) {
      _level2.gekichinFlg = false;
      gekichin_cut.gotoAndPlay(2);
      stop();
    } else {
      if (_level2.ftaihaFlg) {
        _level2.ftaihaFlg = false;
        taiha_cut.gotoAndPlay(2);
        stop();
      }
    }
    i = 1;
    while (i <= 12) {
      tellTarget (''dam_num' + i') {
        hirurai = false;
      }
      ++i;
    }
  }

  frame 231 {
    _level2.tstrace('Frame: hougeki_start');
    upperbar.nex = 3;
    upperbar.play();
  }

  frame 232 {
  }

  frame 233 {
    _level2.hougeki_main.jin_friend = _level2.formation[0];
    _level2.hougeki_main.jin_enemy = 5 + _level2.formation[1];
    _level2.hougeki_main.kousen = _level2.formation[2];
    _level2.rader.gotoAndStop(2);
  }

  movieClip 946  {
  }

  movieClip 967  {

    frame 1 {
      stop();
    }
  }

  movieClip 974  {

    frame 1 {
      stop();
    }
  }

  movieClip 979  {

    frame 1 {
      stop();
    }
  }

  movieClip 982  {
  }

  movieClip 987  {

    frame 1 {
      stop();
    }
  }

  movieClip 988  {

    frame 1 {
      jinmei_f.gotoAndStop(jin_friend);
      jinmei_e.gotoAndStop(jin_enemy);
      ch1.gotoAndStop(kousen);
      ch2.gotoAndStop(kousen);
      ch3.gotoAndStop(kousen);
    }

    frame 9 {
      rdf.gotoAndStop(_level2.jin_friend);
      rde.gotoAndStop(_level2.jin_enemy);
      _level2.rader.rader_f.gotoAndStop('end');
      _level2.rader.rader_e.gotoAndStop('end');
    }

    frame 21 {
      _level2.rader.rader_f.rd.gotoAndStop(_level2.jin_friend);
      _level2.rader.rader_e.rd.gotoAndStop(_level2.jin_enemy);
    }

    frame 32 {
      _level2.playSFX('battle_don.mp3');
    }

    frame 40 {
      _level2.playSFX('battle_don.mp3');
    }

    frame 48 {
      _level2.playSFX('battle_don.mp3');
      t_res.gotoAndStop(kousen);
    }

    frame 79 {
      stop();
      _parent.play();
    }
  }

  frame 235 {
    stop();
  }

  frame 239 {
    if (at_list == undefined || at_list[1] == undefined || at_list[1] == -1) {
      gotoAndPlay('5_raigeki');
    }
    if (!_level2.yasen_special && !_level2.yasen_reversal) {
      _level2.rader.wave.gotoAndPlay('wloop');
      _level2.rader.wave2.gotoAndPlay('wloop');
    }
  }

  frame 240 {
    _level2.tstrace('Frame: hougeki_round');
    i = 1;
    while (i <= 6) {
      tellTarget (''f' + i') {
        gotoAndStop('default');
      }
      tellTarget (''e' + i') {
        gotoAndStop('default');
      }
      ++i;
    }
    _level2.rader.rader_f.gotoAndStop('end');
    _level2.rader.rader_e.gotoAndStop('end');
    _level2.rader.rader_f.rd.gotoAndStop(_level2.jin_friend);
    _level2.rader.rader_e.rd.gotoAndStop(_level2.jin_enemy);
    _level2.tstrace('_level2.nowhps = [' + _level2.nowhps + ']');
    if (_level2.gekichin_cut._currentframe != 1 || _level2.taiha_cut._currentframe != 1) {
      stop();
    }
  }

  movieClip 995  {

    frame 1 {
      stop();
    }
  }

  movieClip 1078  {

    frame 1 {
      stop();
    }
  }

  movieClip 1083  {

    frame 1 {
      stop();
    }
  }

  movieClip 1165  {

    frame 1 {
      stop();
    }
  }

  movieClip 1166  {

    frame 1 {
      rand = _parent.rand;
      if (_level2.atkWeapon == -1) {
        stop();
      } else {
        gotoAndPlay('ptn' + rand);
      }
    }

    frame 2 {
      if (_level2.scene == _level2.SCENE_YASEN) {
        sl.gotoAndStop(2);
      }
      _parent.rand += (rand - 1) * _level2.CUTIN_NUM;
    }

    frame 8 {
      arms.gotoAndStop(_level2.atkWeapon + 1);
    }

    frame 16 {
      if (_level2.raiflag) {
        _level2.playSFX('battle_gyorai.mp3');
      } else {
        if (!_level2.airhouFlg && !_level2.divehouFlg) {
          _level2.playSFX('battle_bomb1.mp3');
        }
      }
    }

    frame 34 {
      stop();
    }

    frame 35 {
      if (_level2.scene == _level2.SCENE_YASEN) {
        sl.gotoAndStop(2);
      }
      _parent.rand += (rand - 1) * _level2.CUTIN_NUM;
    }

    frame 41 {
      arms.gotoAndStop(_level2.atkWeapon + 1);
    }

    frame 51 {
      if (_level2.raiflag) {
        _level2.playSFX('battle_gyorai.mp3');
      } else {
        if (!_level2.airhouFlg && !_level2.divehouFlg) {
          _level2.playSFX('battle_bomb1.mp3');
        }
      }
    }

    frame 67 {
      stop();
    }

    frame 68 {
      if (_level2.scene == _level2.SCENE_YASEN) {
        sl.gotoAndStop(2);
      }
      _parent.rand += (rand - 1) * _level2.CUTIN_NUM;
    }

    frame 74 {
      arms.gotoAndStop(_level2.atkWeapon + 1);
    }

    frame 86 {
      if (_level2.raiflag) {
        _level2.playSFX('battle_gyorai.mp3');
      } else {
        if (!_level2.airhouFlg && !_level2.divehouFlg) {
          _level2.playSFX('battle_bomb1.mp3');
        }
      }
    }

    frame 100 {
      stop();
    }
  }

  movieClip 1220  {

    frame 1 {
      stop();
    }
  }

  movieClip 1227  {

    frame 2 {
      i = 1;
      while (i <= 4) {
        chk = _level2.cutin_slot[i - 1];
        if (chk != -1) {
          tellTarget (''s' + i') {
            gotoAndStop(_parent.chk + 2);
          }
        } else {
          tellTarget (''s' + i') {
            gotoAndStop(2);
          }
        }
        chk2 = _level2.cutin_powup[i - 1];
        this['powup' + i].text = chk2;
        ++i;
      }
      lv.text = _level2.cutin_lv;
      ship.text = _level2.cutin_name;
      bar.gotoAndStop(_level2.cutin_hp);
      stop();
    }
  }

  movieClip 1230  {
  }

  movieClip 1323  {

    frame 1 {
      stop();
    }

    frame 516 {
      if (_level1.npc_battle) {
        gotoAndStop(576);
      }
    }

    frame 517 {
      if (_level1.npc_battle) {
        gotoAndStop(577);
      }
    }

    frame 518 {
      if (_level1.npc_battle) {
        gotoAndStop(578);
      }
    }

    frame 519 {
      if (_level1.npc_battle) {
        gotoAndStop(579);
      }
    }

    frame 520 {
      if (_level1.npc_battle) {
        gotoAndStop(580);
      }
    }

    frame 521 {
      if (_level1.npc_battle) {
        gotoAndStop(581);
      }
    }

    frame 522 {
      if (_level1.npc_battle) {
        gotoAndStop(582);
      }
    }

    frame 523 {
      if (_level1.npc_battle) {
        gotoAndStop(583);
      }
    }

    frame 524 {
      if (_level1.npc_battle) {
        gotoAndStop(584);
      }
    }

    frame 525 {
      if (_level1.npc_battle) {
        gotoAndStop(585);
      }
    }

    frame 526 {
      if (_level1.npc_battle) {
        gotoAndStop(586);
      }
    }
  }

  movieClip 1324  {

    frame 1 {
      stop();
    }
  }

  movieClip 1327  {
  }

  movieClip 1329  {

    frame 1 {
      stop();
    }
  }

  movieClip 1332  {
  }

  movieClip 1333  {

    frame 1 {
      _level2.ldr1.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + (_level2.shipid - 1) + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.shipid - 1)].api_version, ship.ship);
      _level2.ldr1.addListener(_level2.lsnr1);
      _level2.lsnr1.onLoadInit = function () {
        _level2.tstrace('Loading character ' + (_level2.shipid - 1) + ' artwork');
        if (_level2.taihastate[_level2.attacker - 1]) {
          ship.ship.gotoAndStop(11);
          ship.ship._x = _level1.SYS_ship_pos[_level1.getPosID(_level2.shipid - 1)].api_battle_d[0];
          ship.ship._y = _level1.SYS_ship_pos[_level1.getPosID(_level2.shipid - 1)].api_battle_d[1];
        } else {
          ship.ship.gotoAndStop(10);
          ship.ship._x = _level1.SYS_ship_pos[_level1.getPosID(_level2.shipid - 1)].api_battle_n[0];
          ship.ship._y = _level1.SYS_ship_pos[_level1.getPosID(_level2.shipid - 1)].api_battle_n[1];
        }
        _level2.ldr1.removeListener(_level2.lsnr1);
      };

      _level2.lsnr1.onLoadError = function () {
        _level2.tstrace('Failed to load character ' + (_level2.shipid - 1) + ' artwork');
        ship.attachMovie('nodatachar', 'ship', 1);
        ship.ship._x = 440;
        ship.ship._y = 810;
        _level2.ldr1.removeListener(_level2.lsnr1);
      };

    }

    frame 12 {
      we3.gotoAndStop(_level2.wepList[1] + 1);
      gr3.gotoAndStop(_level2.wepList[1]);
      we2.gotoAndStop(_level2.wepList[1] + 1);
      gr2.gotoAndStop(_level2.wepList[1]);
      _level2.playSFX('battle_card.mp3');
      _level2.tstrace('Cut in with character frame ' + ship._currentframe);
    }

    frame 13 {
      _level2.playSFX('battle_card.mp3');
    }

    frame 19 {
      _level2.playSFX('battle_don.mp3');
    }

    frame 26 {
      gr1.gotoAndStop(_level2.wepList[0]);
      _level2.playSFX('battle_card.mp3');
    }

    frame 39 {
      we1.gotoAndStop(_level2.wepList[0] + 1);
    }

    frame 41 {
      _level2.playSFX('battle_don.mp3');
    }

    frame 54 {
      _level2.playVoice(_level2.shipid - 1, 17);
    }

    frame 72 {
      _level2.tstrace('we1._currentframe = ' + we1._currentframe);
      _level2.tstrace('we2._currentframe = ' + we2._currentframe);
    }

    frame 73 {
      _parent.play();
    }

    frame 83 {
      stop();
    }
  }

  movieClip 1336  {
  }

  movieClip 1340  {
  }

  movieClip 1342  {

    frame 1 {
      _level2.ldr1.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + (_level2.shipid - 1) + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.shipid - 1)].api_version, ship.ship);
      _level2.ldr1.addListener(_level2.lsnr1);
      _level2.lsnr1.onLoadInit = function () {
        _level2.tstrace('Loading character ' + (_level2.shipid - 1) + ' artwork');
        if (_level2.taihastate[_level2.attacker - 1]) {
          ship.ship.gotoAndStop(11);
          ship.ship._x = _level1.SYS_ship_pos[_level1.getPosID(_level2.shipid - 1)].api_battle_d[0];
          ship.ship._y = _level1.SYS_ship_pos[_level1.getPosID(_level2.shipid - 1)].api_battle_d[1];
        } else {
          ship.ship.gotoAndStop(10);
          ship.ship._x = _level1.SYS_ship_pos[_level1.getPosID(_level2.shipid - 1)].api_battle_n[0];
          ship.ship._y = _level1.SYS_ship_pos[_level1.getPosID(_level2.shipid - 1)].api_battle_n[1];
        }
        _level2.ldr1.removeListener(_level2.lsnr1);
      };

      _level2.lsnr1.onLoadError = function () {
        _level2.tstrace('Failed to load character ' + (_level2.shipid - 1) + ' artwork');
        ship.attachMovie('nodatachar', 'ship', 1);
        ship.ship._x = 440;
        ship.ship._y = 810;
        _level2.ldr1.removeListener(_level2.lsnr1);
      };

    }

    frame 12 {
      we1.gotoAndStop(_level2.wepList[0] + 1);
      gr1.gotoAndStop(_level2.wepList[0]);
      _level2.playSFX('battle_card.mp3');
      _level2.tstrace('Cut in with character frame ' + ship._currentframe);
    }

    frame 19 {
      _level2.playSFX('battle_don.mp3');
    }

    frame 25 {
      we2.gotoAndStop(_level2.wepList[1] + 1);
      gr2.gotoAndStop(_level2.wepList[1]);
      _level2.playSFX('battle_card.mp3');
    }

    frame 32 {
      _level2.playSFX('battle_don.mp3');
    }

    frame 38 {
      we3.gotoAndStop(_level2.wepList[1] + 1);
      gr3.gotoAndStop(_level2.wepList[1]);
      _level2.playSFX('battle_card.mp3');
    }

    frame 45 {
      _level2.playSFX('battle_don.mp3');
    }

    frame 55 {
      _level2.playVoice(_level2.shipid - 1, 17);
    }

    frame 56 {
      _parent.play();
    }

    frame 70 {
      _level2.tstrace('we1._currentframe = ' + we1._currentframe);
      _level2.tstrace('we2._currentframe = ' + we2._currentframe);
    }

    frame 81 {
      stop();
    }
  }

  movieClip 1344  {

    frame 1 {
      _level2.ldr1.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + (_level2.shipid - 1) + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.shipid - 1)].api_version, ship.ship);
      _level2.ldr1.addListener(_level2.lsnr1);
      _level2.lsnr1.onLoadInit = function () {
        _level2.tstrace('Loading character ' + (_level2.shipid - 1) + ' artwork');
        if (_level2.taihastate[_level2.attacker - 1]) {
          ship.ship.gotoAndStop(11);
          ship.ship._x = _level1.SYS_ship_pos[_level1.getPosID(_level2.shipid - 1)].api_battle_d[0];
          ship.ship._y = _level1.SYS_ship_pos[_level1.getPosID(_level2.shipid - 1)].api_battle_d[1];
        } else {
          ship.ship.gotoAndStop(10);
          ship.ship._x = _level1.SYS_ship_pos[_level1.getPosID(_level2.shipid - 1)].api_battle_n[0];
          ship.ship._y = _level1.SYS_ship_pos[_level1.getPosID(_level2.shipid - 1)].api_battle_n[1];
        }
        _level2.ldr1.removeListener(_level2.lsnr1);
      };

      _level2.lsnr1.onLoadError = function () {
        _level2.tstrace('Failed to load character ' + (_level2.shipid - 1) + ' artwork');
        ship.attachMovie('nodatachar', 'ship', 1);
        ship.ship._x = 440;
        ship.ship._y = 810;
        _level2.ldr1.removeListener(_level2.lsnr1);
      };

    }

    frame 12 {
      gr1.gotoAndStop(_level2.wepList[0]);
      _level2.tstrace('Cut in with character frame ' + ship._currentframe);
    }

    frame 16 {
      _level2.playSFX('battle_card.mp3');
    }

    frame 18 {
      _level2.playSFX('battle_don.mp3');
      we1.gotoAndStop(_level2.wepList[0] + 1);
    }

    frame 25 {
      gr2.gotoAndStop(_level2.wepList[1]);
    }

    frame 29 {
      _level2.playSFX('battle_card.mp3');
    }

    frame 31 {
      _level2.playSFX('battle_don.mp3');
      we2.gotoAndStop(_level2.wepList[1] + 1);
    }

    frame 38 {
      gr3.gotoAndStop(_level2.wepList[2]);
    }

    frame 42 {
      _level2.playSFX('battle_card.mp3');
    }

    frame 44 {
      _level2.playSFX('battle_don.mp3');
      we3.gotoAndStop(_level2.wepList[2] + 1);
    }

    frame 53 {
      _level2.playVoice(_level2.shipid - 1, 17);
    }

    frame 66 {
      _parent.play();
    }

    frame 69 {
      _level2.tstrace('we1._currentframe = ' + we1._currentframe);
      _level2.tstrace('we2._currentframe = ' + we2._currentframe);
      _level2.tstrace('we3._currentframe = ' + we3._currentframe);
    }

    frame 80 {
      stop();
    }
  }

  movieClip 1350  {

    frame 1 {
      _level2.ldr1.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + (_level2.shipid - 1) + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.shipid - 1)].api_version, ship.ship);
      _level2.ldr1.addListener(_level2.lsnr1);
      _level2.lsnr1.onLoadInit = function () {
        _level2.tstrace('Loading character ' + (_level2.shipid - 1) + ' artwork');
        if (_level2.taihastate[_level2.attacker - 1]) {
          ship.ship.gotoAndStop(11);
          ship.ship._x = _level1.SYS_ship_pos[_level1.getPosID(_level2.shipid - 1)].api_battle_d[0];
          ship.ship._y = _level1.SYS_ship_pos[_level1.getPosID(_level2.shipid - 1)].api_battle_d[1];
        } else {
          ship.ship.gotoAndStop(10);
          ship.ship._x = _level1.SYS_ship_pos[_level1.getPosID(_level2.shipid - 1)].api_battle_n[0];
          ship.ship._y = _level1.SYS_ship_pos[_level1.getPosID(_level2.shipid - 1)].api_battle_n[1];
        }
        _level2.ldr1.removeListener(_level2.lsnr1);
      };

      _level2.lsnr1.onLoadError = function () {
        _level2.tstrace('Failed to load character ' + (_level2.shipid - 1) + ' artwork');
        ship.attachMovie('nodatachar', 'ship', 1);
        ship.ship._x = 440;
        ship.ship._y = 810;
        _level2.ldr1.removeListener(_level2.lsnr1);
      };

    }

    frame 12 {
      we1.gotoAndStop(_level2.wepList[0] + 1);
      gr1.gotoAndStop(_level2.wepList[0]);
      _level2.playSFX('battle_card.mp3');
      _level2.tstrace('Cut in with character frame ' + ship._currentframe);
    }

    frame 18 {
      _level2.playSFX('battle_don.mp3');
    }

    frame 25 {
      we2.gotoAndStop(_level2.wepList[1] + 1);
      gr2.gotoAndStop(_level2.wepList[1]);
      _level2.playSFX('battle_card.mp3');
    }

    frame 31 {
      _level2.playSFX('battle_don.mp3');
    }

    frame 38 {
      we3.gotoAndStop(_level2.wepList[2] + 1);
      gr3.gotoAndStop(_level2.wepList[2]);
      _level2.playSFX('battle_card.mp3');
    }

    frame 44 {
      _level2.playSFX('battle_don.mp3');
    }

    frame 51 {
      _level2.playVoice(_level2.shipid - 1, 17);
    }

    frame 69 {
      _level2.tstrace('we1._currentframe = ' + we1._currentframe);
      _level2.tstrace('we2._currentframe = ' + we2._currentframe);
      _level2.tstrace('we3._currentframe = ' + we3._currentframe);
    }

    frame 70 {
      _parent.play();
    }

    frame 80 {
      stop();
    }
  }

  movieClip 1352  {

    frame 1 {
      stop();
    }

    frame 2 {
      _level2.CUTIN_NUM = 4;
    }

    frame 3 {
      rand = Math.floor(Math.random() * _level2.CUTIN_NUM + 1);
      gotoAndPlay('ptn' + rand);
    }

    frame 4 {
      _level2.cutid = ids - 1;
      _level2.ldr1.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + _level2.cutid + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.cutid)].api_version, ship.ship);
      _level2.ldr1.addListener(_level2.lsnr1);
      _level2.lsnr1.onLoadInit = function () {
        _level2.tstrace('Loading character ' + _level2.cutid + ' artwork');
        if (_level2.taihastate[_level2.attacker - 1]) {
          ship.ship.gotoAndStop(11);
          ship.ship._x = _level1.SYS_ship_pos[_level1.getPosID(_level2.cutid)].api_battle_d[0];
          ship.ship._y = _level1.SYS_ship_pos[_level1.getPosID(_level2.cutid)].api_battle_d[1];
        } else {
          ship.ship.gotoAndStop(10);
          ship.ship._x = _level1.SYS_ship_pos[_level1.getPosID(_level2.cutid)].api_battle_n[0];
          ship.ship._y = _level1.SYS_ship_pos[_level1.getPosID(_level2.cutid)].api_battle_n[1];
        }
        _level2.ldr1.removeListener(_level2.lsnr1);
      };

      _level2.lsnr1.onLoadError = function () {
        _level2.tstrace('Failed to load character ' + _level2.cutid + ' artwork');
        ship.attachMovie('nodatachar', 'ship', 1);
        ship.ship._x = 440;
        ship.ship._y = 810;
        _level2.ldr1.removeListener(_level2.lsnr1);
      };

    }

    frame 12 {
      _level2.playSFX('battle_cutinMove.mp3');
      _level2.tstrace('Cut in with character frame ' + ship._currentframe);
      if (_level2.atkWeapon == -1) {
        cha._visible = false;
      }
    }

    frame 15 {
      if (_level2.atkWeapon == -1) {
        statusWindow._visible = false;
      }
    }

    frame 20 {
      if (_level2.scene == _level2.SCENE_YASEN) {
        _level2.playVoice(ids - 1, 17);
      } else {
        j = 0;
        for (;;) {
          if (!(_level1.SYS_ship_data[j].api_id != _level2.ship_kf[_level2.attacker] - 1 && j < 1000)) break;
          ++j;
        }
        typ = _level1.SYS_ship_data[j].api_stype;
        _level2.tstrace('j = ' + j);
        _level2.tstrace('typ = ' + typ);
        _level2.tstrace('_level1.SYS_ship_data[j]["api_name"] = ' + _level1.SYS_ship_data[j].api_name);
        if (typ == 7 || typ == 11 || typ == 18) {
          _level2.playVoice(ids - 1, [16, 18], [50, 50]);
        } else {
          _level2.playVoice(ids - 1, [15, 16], [50, 50]);
        }
      }
    }

    frame 36 {
      _level2.play();
    }

    frame 54 {
      gotoAndStop(1);
    }

    frame 55 {
      _level2.cutid = ids - 1;
      _level2.ldr1.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + _level2.cutid + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.cutid)].api_version, ship.ship);
      _level2.ldr1.addListener(_level2.lsnr1);
      _level2.lsnr1.onLoadInit = function () {
        _level2.tstrace('Loading character ' + _level2.cutid + ' artwork');
        if (_level2.taihastate[_level2.attacker - 1]) {
          ship.ship.gotoAndStop(11);
          ship.ship._x = _level1.SYS_ship_pos[_level1.getPosID(_level2.cutid)].api_battle_d[0];
          ship.ship._y = _level1.SYS_ship_pos[_level1.getPosID(_level2.cutid)].api_battle_d[1];
        } else {
          ship.ship.gotoAndStop(10);
          ship.ship._x = _level1.SYS_ship_pos[_level1.getPosID(_level2.cutid)].api_battle_n[0];
          ship.ship._y = _level1.SYS_ship_pos[_level1.getPosID(_level2.cutid)].api_battle_n[1];
        }
        _level2.ldr1.removeListener(_level2.lsnr1);
      };

      _level2.lsnr1.onLoadError = function () {
        _level2.tstrace('Failed to load character ' + _level2.cutid + ' artwork');
        ship.attachMovie('nodatachar', 'ship', 1);
        ship.ship._x = 440;
        ship.ship._y = 810;
        _level2.ldr1.removeListener(_level2.lsnr1);
      };

    }

    frame 63 {
      _level2.playSFX('battle_cutinMove.mp3');
      _level2.tstrace('Cut in with character frame ' + ship._currentframe);
      if (_level2.atkWeapon == -1) {
        cha._visible = false;
      }
    }

    frame 66 {
      if (_level2.atkWeapon == -1) {
        statusWindow._visible = false;
      }
    }

    frame 69 {
      if (_level2.raiflag) {
        arms.gotoAndStop(random(3) + 13);
      } else {
        arms.gotoAndStop(random(12) + 1);
      }
    }

    frame 71 {
      if (_level2.scene == _level2.SCENE_YASEN) {
        _level2.playVoice(ids - 1, 17);
      } else {
        j = 0;
        for (;;) {
          if (!(_level1.SYS_ship_data[j].api_id != _level2.ship_kf[_level2.attacker] - 1 && j < 1000)) break;
          ++j;
        }
        typ = _level1.SYS_ship_data[j].api_stype;
        _level2.tstrace('j = ' + j);
        _level2.tstrace('typ = ' + typ);
        _level2.tstrace('_level1.SYS_ship_data[j]["api_name"] = ' + _level1.SYS_ship_data[j].api_name);
        if (typ == 7 || typ == 11 || typ == 18) {
          _level2.playVoice(ids - 1, [16, 18], [50, 50]);
        } else {
          _level2.playVoice(ids - 1, [15, 16], [50, 50]);
        }
      }
    }

    frame 87 {
      _level2.play();
    }

    frame 105 {
      gotoAndStop(1);
    }

    frame 106 {
      _level2.cutid = ids - 1;
      _level2.ldr1.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + _level2.cutid + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.cutid)].api_version, ship.ship);
      _level2.ldr1.addListener(_level2.lsnr1);
      _level2.lsnr1.onLoadInit = function () {
        _level2.tstrace('Loading character ' + _level2.cutid + ' artwork');
        if (_level2.taihastate[_level2.attacker - 1]) {
          ship.ship.gotoAndStop(11);
          ship.ship._x = _level1.SYS_ship_pos[_level1.getPosID(_level2.cutid)].api_battle_d[0];
          ship.ship._y = _level1.SYS_ship_pos[_level1.getPosID(_level2.cutid)].api_battle_d[1];
        } else {
          ship.ship.gotoAndStop(10);
          ship.ship._x = _level1.SYS_ship_pos[_level1.getPosID(_level2.cutid)].api_battle_n[0];
          ship.ship._y = _level1.SYS_ship_pos[_level1.getPosID(_level2.cutid)].api_battle_n[1];
        }
        _level2.ldr1.removeListener(_level2.lsnr1);
      };

      _level2.lsnr1.onLoadError = function () {
        _level2.tstrace('Failed to load character ' + _level2.cutid + ' artwork');
        ship.attachMovie('nodatachar', 'ship', 1);
        ship.ship._x = 440;
        ship.ship._y = 810;
        _level2.ldr1.removeListener(_level2.lsnr1);
      };

    }

    frame 114 {
      _level2.playSFX('battle_cutinMove.mp3');
      _level2.tstrace('Cut in with character frame ' + ship._currentframe);
      if (_level2.atkWeapon == -1) {
        cha._visible = false;
      }
    }

    frame 117 {
      if (_level2.atkWeapon == -1) {
        statusWindow._visible = false;
      }
    }

    frame 120 {
      if (_level2.raiflag) {
        arms.gotoAndStop(random(3) + 13);
      } else {
        arms.gotoAndStop(random(12) + 1);
      }
    }

    frame 122 {
      if (_level2.scene == _level2.SCENE_YASEN) {
        _level2.playVoice(ids - 1, 17);
      } else {
        j = 0;
        for (;;) {
          if (!(_level1.SYS_ship_data[j].api_id != _level2.ship_kf[_level2.attacker] - 1 && j < 1000)) break;
          ++j;
        }
        typ = _level1.SYS_ship_data[j].api_stype;
        _level2.tstrace('j = ' + j);
        _level2.tstrace('typ = ' + typ);
        _level2.tstrace('_level1.SYS_ship_data[j]["api_name"] = ' + _level1.SYS_ship_data[j].api_name);
        if (typ == 7 || typ == 11 || typ == 18) {
          _level2.playVoice(ids - 1, [16, 18], [50, 50]);
        } else {
          _level2.playVoice(ids - 1, [15, 16], [50, 50]);
        }
      }
    }

    frame 138 {
      _level2.play();
    }

    frame 156 {
      gotoAndStop(1);
    }

    frame 157 {
      _level2.cutid = ids - 1;
      _level2.ldr1.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + _level2.cutid + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.cutid)].api_version, ship.ship);
      _level2.ldr1.addListener(_level2.lsnr1);
      _level2.lsnr1.onLoadInit = function () {
        _level2.tstrace('Loading character ' + _level2.cutid + ' artwork');
        if (_level2.taihastate[_level2.attacker - 1]) {
          ship.ship.gotoAndStop(11);
          ship.ship._x = _level1.SYS_ship_pos[_level1.getPosID(_level2.cutid)].api_battle_d[0];
          ship.ship._y = _level1.SYS_ship_pos[_level1.getPosID(_level2.cutid)].api_battle_d[1];
        } else {
          ship.ship.gotoAndStop(10);
          ship.ship._x = _level1.SYS_ship_pos[_level1.getPosID(_level2.cutid)].api_battle_n[0];
          ship.ship._y = _level1.SYS_ship_pos[_level1.getPosID(_level2.cutid)].api_battle_n[1];
        }
        _level2.ldr1.removeListener(_level2.lsnr1);
      };

      _level2.lsnr1.onLoadError = function () {
        _level2.tstrace('Failed to load character ' + _level2.cutid + ' artwork');
        ship.attachMovie('nodatachar', 'ship', 1);
        ship.ship._x = 440;
        ship.ship._y = 810;
        _level2.ldr1.removeListener(_level2.lsnr1);
      };

    }

    frame 165 {
      _level2.playSFX('battle_cutinMove.mp3');
      _level2.tstrace('Cut in with character frame ' + ship._currentframe);
      if (_level2.atkWeapon == -1) {
        cha._visible = false;
      }
    }

    frame 168 {
      if (_level2.atkWeapon == -1) {
        statusWindow._visible = false;
      }
    }

    frame 171 {
      if (_level2.raiflag) {
        arms.gotoAndStop(random(3) + 13);
      } else {
        arms.gotoAndStop(random(12) + 1);
      }
    }

    frame 173 {
      if (_level2.scene == _level2.SCENE_YASEN) {
        _level2.playVoice(ids - 1, 17);
      } else {
        j = 0;
        for (;;) {
          if (!(_level1.SYS_ship_data[j].api_id != _level2.ship_kf[_level2.attacker] - 1 && j < 10000)) break;
          ++j;
        }
        typ = _level1.SYS_ship_data[j].api_stype;
        _level2.tstrace('j = ' + j);
        _level2.tstrace('typ = ' + typ);
        _level2.tstrace('_level1.SYS_ship_data[j]["api_name"] = ' + _level1.SYS_ship_data[j].api_name);
        if (typ == 7 || typ == 11 || typ == 18) {
          _level2.playVoice(ids - 1, [16, 18], [50, 50]);
        } else {
          _level2.playVoice(ids - 1, [15, 16], [50, 50]);
        }
      }
    }

    frame 189 {
      _level2.play();
    }

    frame 207 {
      gotoAndStop(1);
    }

    frame 208 {
      play();
    }

    frame 209 {
      stop();
    }

    frame 217 {
      _level2.gotoAndPlay('super_rai');
      stop();
    }

    frame 228 {
      gotoAndStop(1);
    }

    frame 229 {
      play();
    }

    frame 230 {
      stop();
    }

    frame 239 {
      _level2.gotoAndPlay('super_rai');
      stop();
    }

    frame 249 {
      gotoAndStop(1);
    }

    frame 250 {
      play();
    }

    frame 251 {
      stop();
    }

    frame 260 {
      _level2.gotoAndPlay('super_hou2');
      stop();
    }

    frame 267 {
      gotoAndStop(1);
    }

    frame 268 {
      play();
    }

    frame 269 {
      stop();
    }

    frame 274 {
      _level2.gotoAndPlay('super_hou');
      stop();
    }

    frame 286 {
      gotoAndStop(1);
    }

    frame 287 {
      stop();
    }

    frame 288 {
      _level2.CUTIN_NUM = 4;
    }

    frame 289 {
      rand = Math.floor(Math.random() * _level2.CUTIN_NUM + 1);
      gotoAndPlay('ren' + rand);
    }

    frame 290 {
      _level2.cutid = ids - 1;
      _level2.ldr1.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + _level2.cutid + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.cutid)].api_version, ship.ship);
      _level2.ldr1.addListener(_level2.lsnr1);
      _level2.lsnr1.onLoadInit = function () {
        _level2.tstrace('Loading character ' + _level2.cutid + ' artwork');
        if (_level2.taihastate[_level2.attacker - 1]) {
          ship.ship.gotoAndStop(11);
          ship.ship._x = _level1.SYS_ship_pos[_level1.getPosID(_level2.cutid)].api_battle_d[0];
          ship.ship._y = _level1.SYS_ship_pos[_level1.getPosID(_level2.cutid)].api_battle_d[1];
        } else {
          ship.ship.gotoAndStop(10);
          ship.ship._x = _level1.SYS_ship_pos[_level1.getPosID(_level2.cutid)].api_battle_n[0];
          ship.ship._y = _level1.SYS_ship_pos[_level1.getPosID(_level2.cutid)].api_battle_n[1];
        }
        _level2.ldr1.removeListener(_level2.lsnr1);
      };

      _level2.lsnr1.onLoadError = function () {
        _level2.tstrace('Failed to load character ' + _level2.cutid + ' artwork');
        ship.attachMovie('nodatachar', 'ship', 1);
        ship.ship._x = 440;
        ship.ship._y = 810;
        _level2.ldr1.removeListener(_level2.lsnr1);
      };

    }

    frame 297 {
      _level2.atkWeapon = _level2.wepList[0];
    }

    frame 298 {
      _level2.playSFX('battle_cutinMove.mp3');
      _level2.tstrace('Cut in with character frame ' + ship._currentframe);
      if (_level2.atkWeapon == -1) {
        cha._visible = false;
      }
    }

    frame 316 {
      _level2.play();
    }

    frame 317 {
      _level2.playVoice(ids - 1, 17);
    }

    frame 320 {
      _level2.atkWeapon = _level2.wepList[1];
    }

    frame 321 {
      _level2.wepID = _level2.presetWepID;
    }

    frame 367 {
      gotoAndStop(1);
    }

    frame 368 {
      _level2.cutid = ids - 1;
      _level2.ldr1.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + _level2.cutid + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.cutid)].api_version, ship.ship);
      _level2.ldr1.addListener(_level2.lsnr1);
      _level2.lsnr1.onLoadInit = function () {
        _level2.tstrace('Loading character ' + _level2.cutid + ' artwork');
        if (_level2.taihastate[_level2.attacker - 1]) {
          ship.ship.gotoAndStop(11);
          ship.ship._x = _level1.SYS_ship_pos[_level1.getPosID(_level2.cutid)].api_battle_d[0];
          ship.ship._y = _level1.SYS_ship_pos[_level1.getPosID(_level2.cutid)].api_battle_d[1];
        } else {
          ship.ship.gotoAndStop(10);
          ship.ship._x = _level1.SYS_ship_pos[_level1.getPosID(_level2.cutid)].api_battle_n[0];
          ship.ship._y = _level1.SYS_ship_pos[_level1.getPosID(_level2.cutid)].api_battle_n[1];
        }
        _level2.ldr1.removeListener(_level2.lsnr1);
      };

      _level2.lsnr1.onLoadError = function () {
        _level2.tstrace('Failed to load character ' + _level2.cutid + ' artwork');
        ship.attachMovie('nodatachar', 'ship', 1);
        ship.ship._x = 440;
        ship.ship._y = 810;
        _level2.ldr1.removeListener(_level2.lsnr1);
      };

    }

    frame 375 {
      _level2.atkWeapon = _level2.wepList[0];
    }

    frame 376 {
      _level2.playSFX('battle_cutinMove.mp3');
      _level2.tstrace('Cut in with character frame ' + ship._currentframe);
      if (_level2.atkWeapon == -1) {
        cha._visible = false;
      }
    }

    frame 382 {
      if (_level2.raiflag) {
        arms.gotoAndStop(random(3) + 13);
      } else {
        arms.gotoAndStop(random(12) + 1);
      }
    }

    frame 394 {
      _level2.play();
    }

    frame 395 {
      _level2.playVoice(ids - 1, 17);
    }

    frame 399 {
      _level2.wepID = _level2.presetWepID;
      _level2.atkWeapon = _level2.wepList[1];
    }

    frame 445 {
      gotoAndStop(1);
    }

    frame 446 {
      _level2.cutid = ids - 1;
      _level2.ldr1.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + _level2.cutid + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.cutid)].api_version, ship.ship);
      _level2.ldr1.addListener(_level2.lsnr1);
      _level2.lsnr1.onLoadInit = function () {
        _level2.tstrace('Loading character ' + _level2.cutid + ' artwork');
        if (_level2.taihastate[_level2.attacker - 1]) {
          ship.ship.gotoAndStop(11);
          ship.ship._x = _level1.SYS_ship_pos[_level1.getPosID(_level2.cutid)].api_battle_d[0];
          ship.ship._y = _level1.SYS_ship_pos[_level1.getPosID(_level2.cutid)].api_battle_d[1];
        } else {
          ship.ship.gotoAndStop(10);
          ship.ship._x = _level1.SYS_ship_pos[_level1.getPosID(_level2.cutid)].api_battle_n[0];
          ship.ship._y = _level1.SYS_ship_pos[_level1.getPosID(_level2.cutid)].api_battle_n[1];
        }
        _level2.ldr1.removeListener(_level2.lsnr1);
      };

      _level2.lsnr1.onLoadError = function () {
        _level2.tstrace('Failed to load character ' + _level2.cutid + ' artwork');
        ship.attachMovie('nodatachar', 'ship', 1);
        ship.ship._x = 440;
        ship.ship._y = 810;
        _level2.ldr1.removeListener(_level2.lsnr1);
      };

    }

    frame 453 {
      _level2.atkWeapon = _level2.wepList[0];
    }

    frame 454 {
      _level2.playSFX('battle_cutinMove.mp3');
      _level2.tstrace('Cut in with character frame ' + ship._currentframe);
      if (_level2.atkWeapon == -1) {
        cha._visible = false;
      }
    }

    frame 460 {
      if (_level2.raiflag) {
        arms.gotoAndStop(random(3) + 13);
      } else {
        arms.gotoAndStop(random(12) + 1);
      }
    }

    frame 472 {
      _level2.play();
    }

    frame 474 {
      _level2.playVoice(ids - 1, 17);
    }

    frame 477 {
      _level2.wepID = _level2.presetWepID;
      _level2.atkWeapon = _level2.wepList[1];
    }

    frame 523 {
      gotoAndStop(1);
    }

    frame 524 {
      _level2.cutid = ids - 1;
      _level2.ldr1.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + _level2.cutid + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.cutid)].api_version, ship.ship);
      _level2.ldr1.addListener(_level2.lsnr1);
      _level2.lsnr1.onLoadInit = function () {
        _level2.tstrace('Loading character ' + _level2.cutid + ' artwork');
        if (_level2.taihastate[_level2.attacker - 1]) {
          ship.ship.gotoAndStop(11);
          ship.ship._x = _level1.SYS_ship_pos[_level1.getPosID(_level2.cutid)].api_battle_d[0];
          ship.ship._y = _level1.SYS_ship_pos[_level1.getPosID(_level2.cutid)].api_battle_d[1];
        } else {
          ship.ship.gotoAndStop(10);
          ship.ship._x = _level1.SYS_ship_pos[_level1.getPosID(_level2.cutid)].api_battle_n[0];
          ship.ship._y = _level1.SYS_ship_pos[_level1.getPosID(_level2.cutid)].api_battle_n[1];
        }
        _level2.ldr1.removeListener(_level2.lsnr1);
      };

      _level2.lsnr1.onLoadError = function () {
        _level2.tstrace('Failed to load character ' + _level2.cutid + ' artwork');
        ship.attachMovie('nodatachar', 'ship', 1);
        ship.ship._x = 440;
        ship.ship._y = 810;
        _level2.ldr1.removeListener(_level2.lsnr1);
      };

    }

    frame 531 {
      _level2.atkWeapon = _level2.wepList[0];
    }

    frame 532 {
      _level2.playSFX('battle_cutinMove.mp3');
      _level2.tstrace('Cut in with character frame ' + ship._currentframe);
      if (_level2.atkWeapon == -1) {
        cha._visible = false;
      }
    }

    frame 538 {
      if (_level2.raiflag) {
        arms.gotoAndStop(random(3) + 13);
      } else {
        arms.gotoAndStop(random(12) + 1);
      }
    }

    frame 550 {
      _level2.play();
    }

    frame 552 {
      _level2.playVoice(ids - 1, 17);
    }

    frame 554 {
      _level2.atkWeapon = _level2.wepList[1];
    }

    frame 555 {
      _level2.wepID = _level2.presetWepID;
    }

    frame 601 {
      gotoAndStop(1);
    }
  }

  movieClip 1358  {

    frame 1 {
      stop();
    }
  }

  movieClip 1363  {

    frame 1 {
      stop();
    }
  }

  movieClip 1364  {

    frame 1 {
      stop();
    }
  }

  movieClip 1365  {

    frame 1 {
      rand = random(3) + 1;
      gotoAndPlay('ptn' + rand);
    }

    frame 2 {
      if (_level2.scene == _level2.SCENE_YASEN) {
        sl.gotoAndStop(2);
      }
      _parent.rand += (rand - 1) * _level2.CUTIN_NUM;
    }

    frame 8 {
      arms.gotoAndStop(_level2.atkWeapon + 1);
    }

    frame 16 {
      if (_level2.raiflag) {
        _level2.playSFX('battle_gyorai.mp3');
      } else {
        if (!_level2.airhouFlg && !_level2.divehouFlg) {
          _level2.playSFX('battle_bomb1.mp3');
        }
      }
    }

    frame 34 {
      stop();
    }

    frame 35 {
      if (_level2.scene == _level2.SCENE_YASEN) {
        sl.gotoAndStop(2);
      }
      _parent.rand += (rand - 1) * _level2.CUTIN_NUM;
    }

    frame 41 {
      arms.gotoAndStop(_level2.atkWeapon + 1);
    }

    frame 51 {
      if (_level2.raiflag) {
        _level2.playSFX('battle_gyorai.mp3');
      } else {
        if (!_level2.airhouFlg && !_level2.divehouFlg) {
          _level2.playSFX('battle_bomb1.mp3');
        }
      }
    }

    frame 67 {
      stop();
    }

    frame 68 {
      if (_level2.scene == _level2.SCENE_YASEN) {
        sl.gotoAndStop(2);
      }
      _parent.rand += (rand - 1) * _level2.CUTIN_NUM;
    }

    frame 74 {
      arms.gotoAndStop(_level2.atkWeapon + 1);
    }

    frame 86 {
      if (_level2.raiflag) {
        _level2.playSFX('battle_gyorai.mp3');
      } else {
        if (!_level2.airhouFlg && !_level2.divehouFlg) {
          _level2.playSFX('battle_bomb1.mp3');
        }
      }
    }

    frame 99 {
      stop();
    }
  }

  movieClip 1374  {

    frame 2 {
      i = 1;
      while (i <= 4) {
        chk = _level2.cutin_slot[i - 1];
        if (chk != -1) {
          tellTarget (''s' + i') {
            gotoAndStop(_parent.chk + 2);
          }
        } else {
          tellTarget (''s' + i') {
            gotoAndStop(2);
          }
        }
        chk2 = _level2.cutin_powup[i - 1];
        this['powup' + i].text = chk2;
        ++i;
      }
      lv.text = _level2.cutin_lv;
      ship.text = _level2.cutin_name;
      bar.gotoAndStop(_level2.cutin_hp);
      stop();
    }
  }

  movieClip 1377  {
  }

  movieClip 1380  {
  }

  movieClip 1381  {

    frame 1 {
      _level2.cutid = _level2.shipid;
      if (!_level1.npc_battle) {
        --_level2.cutid;
      }
      _level2.ldr1.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + _level2.cutid + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.cutid)].api_version, ship.ship);
      _level2.ldr1.addListener(_level2.lsnr1);
      _level2.lsnr1.onLoadInit = function () {
        _level2.tstrace('Loading character ' + _level2.cutid + ' artwork');
        ship.ship.gotoAndStop(10);
        ship.ship._x = _level1.SYS_ship_pos[_level1.getPosID(_level2.cutid)].api_battle_n[0];
        ship.ship._y = _level1.SYS_ship_pos[_level1.getPosID(_level2.cutid)].api_battle_n[1];
        _level2.ldr1.removeListener(_level2.lsnr1);
      };

      _level2.lsnr1.onLoadError = function () {
        _level2.tstrace('Failed to load character ' + _level2.cutid + ' artwork');
        ship.attachMovie('nodatachar', 'ship', 1);
        ship.ship._x = 440;
        ship.ship._y = 810;
        _level2.ldr1.removeListener(_level2.lsnr1);
      };

    }

    frame 12 {
      we3.gotoAndStop(_level2.wepList[1] + 1);
      gr3.gotoAndStop(_level2.wepList[1]);
      we2.gotoAndStop(_level2.wepList[1] + 1);
      gr2.gotoAndStop(_level2.wepList[1]);
      _level2.playSFX('battle_card.mp3');
    }

    frame 13 {
      _level2.playSFX('battle_card.mp3');
    }

    frame 19 {
      _level2.playSFX('battle_don.mp3');
    }

    frame 26 {
      gr1.gotoAndStop(_level2.wepList[0]);
      _level2.playSFX('battle_card.mp3');
    }

    frame 39 {
      we1.gotoAndStop(_level2.wepList[0] + 1);
    }

    frame 41 {
      _level2.playSFX('battle_don.mp3');
    }

    frame 54 {
      _level2.playVoiceE_Atk(_parent.attacker_id, _level2.cutid);
    }

    frame 72 {
      _level2.tstrace('we1._currentframe = ' + we1._currentframe);
      _level2.tstrace('we2._currentframe = ' + we2._currentframe);
    }

    frame 73 {
      _parent.play();
    }

    frame 83 {
      stop();
    }
  }

  movieClip 1384  {
  }

  movieClip 1387  {
  }

  movieClip 1388  {

    frame 1 {
      _level2.cutid = _level2.shipid;
      if (!_level1.npc_battle) {
        --_level2.cutid;
      }
      _level2.ldr1.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + _level2.cutid + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.cutid)].api_version, ship.ship);
      _level2.ldr1.addListener(_level2.lsnr1);
      _level2.lsnr1.onLoadInit = function () {
        _level2.tstrace('Loading character ' + _level2.cutid + ' artwork');
        ship.ship.gotoAndStop(10);
        ship.ship._x = _level1.SYS_ship_pos[_level1.getPosID(_level2.cutid)].api_battle_n[0];
        ship.ship._y = _level1.SYS_ship_pos[_level1.getPosID(_level2.cutid)].api_battle_n[1];
        _level2.ldr1.removeListener(_level2.lsnr1);
      };

      _level2.lsnr1.onLoadError = function () {
        _level2.tstrace('Failed to load character ' + _level2.cutid + ' artwork');
        ship.attachMovie('nodatachar', 'ship', 1);
        ship.ship._x = 440;
        ship.ship._y = 810;
        _level2.ldr1.removeListener(_level2.lsnr1);
      };

    }

    frame 12 {
      we1.gotoAndStop(_level2.wepList[0] + 1);
      gr1.gotoAndStop(_level2.wepList[0]);
      _level2.playSFX('battle_card.mp3');
    }

    frame 19 {
      _level2.playSFX('battle_don.mp3');
    }

    frame 25 {
      we2.gotoAndStop(_level2.wepList[1] + 1);
      gr2.gotoAndStop(_level2.wepList[1]);
      _level2.playSFX('battle_card.mp3');
    }

    frame 32 {
      _level2.playSFX('battle_don.mp3');
    }

    frame 38 {
      we3.gotoAndStop(_level2.wepList[1] + 1);
      gr3.gotoAndStop(_level2.wepList[1]);
      _level2.playSFX('battle_card.mp3');
    }

    frame 45 {
      _level2.playSFX('battle_don.mp3');
    }

    frame 55 {
      _level2.playVoiceE_Atk(_parent.attacker_id, _level2.cutid);
    }

    frame 56 {
      _parent.play();
    }

    frame 70 {
      _level2.tstrace('we1._currentframe = ' + we1._currentframe);
      _level2.tstrace('we2._currentframe = ' + we2._currentframe);
    }

    frame 81 {
      stop();
    }
  }

  movieClip 1389  {

    frame 1 {
      _level2.cutid = _level2.shipid;
      if (!_level1.npc_battle) {
        --_level2.cutid;
      }
      _level2.ldr1.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + _level2.cutid + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.cutid)].api_version, ship.ship);
      _level2.ldr1.addListener(_level2.lsnr1);
      _level2.lsnr1.onLoadInit = function () {
        _level2.tstrace('Loading character ' + _level2.cutid + ' artwork');
        ship.ship.gotoAndStop(10);
        ship.ship._x = _level1.SYS_ship_pos[_level1.getPosID(_level2.cutid)].api_battle_n[0];
        ship.ship._y = _level1.SYS_ship_pos[_level1.getPosID(_level2.cutid)].api_battle_n[1];
        _level2.ldr1.removeListener(_level2.lsnr1);
      };

      _level2.lsnr1.onLoadError = function () {
        _level2.tstrace('Failed to load character ' + _level2.cutid + ' artwork');
        ship.attachMovie('nodatachar', 'ship', 1);
        ship.ship._x = 440;
        ship.ship._y = 810;
        _level2.ldr1.removeListener(_level2.lsnr1);
      };

    }

    frame 12 {
      gr1.gotoAndStop(_level2.wepList[0]);
    }

    frame 16 {
      _level2.playSFX('battle_card.mp3');
    }

    frame 18 {
      _level2.playSFX('battle_don.mp3');
      we1.gotoAndStop(_level2.wepList[0] + 1);
    }

    frame 25 {
      gr2.gotoAndStop(_level2.wepList[1]);
    }

    frame 29 {
      _level2.playSFX('battle_card.mp3');
    }

    frame 31 {
      _level2.playSFX('battle_don.mp3');
      we2.gotoAndStop(_level2.wepList[1] + 1);
    }

    frame 38 {
      gr3.gotoAndStop(_level2.wepList[2]);
    }

    frame 42 {
      _level2.playSFX('battle_card.mp3');
    }

    frame 44 {
      _level2.playSFX('battle_don.mp3');
      we3.gotoAndStop(_level2.wepList[2] + 1);
    }

    frame 53 {
      _level2.playVoiceE_Atk(_parent.attacker_id, _level2.cutid);
    }

    frame 66 {
      _parent.play();
    }

    frame 69 {
      _level2.tstrace('we1._currentframe = ' + we1._currentframe);
      _level2.tstrace('we2._currentframe = ' + we2._currentframe);
      _level2.tstrace('we3._currentframe = ' + we3._currentframe);
    }

    frame 80 {
      stop();
    }
  }

  movieClip 1393  {

    frame 1 {
      _level2.cutid = _level2.shipid;
      if (!_level1.npc_battle) {
        --_level2.cutid;
      }
      _level2.ldr1.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + _level2.cutid + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.cutid)].api_version, ship.ship);
      _level2.ldr1.addListener(_level2.lsnr1);
      _level2.lsnr1.onLoadInit = function () {
        _level2.tstrace('Loading character ' + _level2.cutid + ' artwork');
        ship.ship.gotoAndStop(10);
        ship.ship._x = _level1.SYS_ship_pos[_level1.getPosID(_level2.cutid)].api_battle_n[0];
        ship.ship._y = _level1.SYS_ship_pos[_level1.getPosID(_level2.cutid)].api_battle_n[1];
        _level2.ldr1.removeListener(_level2.lsnr1);
      };

      _level2.lsnr1.onLoadError = function () {
        _level2.tstrace('Failed to load character ' + _level2.cutid + ' artwork');
        ship.attachMovie('nodatachar', 'ship', 1);
        ship.ship._x = 440;
        ship.ship._y = 810;
        _level2.ldr1.removeListener(_level2.lsnr1);
      };

    }

    frame 12 {
      we1.gotoAndStop(_level2.wepList[0] + 1);
      gr1.gotoAndStop(_level2.wepList[0]);
      _level2.playSFX('battle_card.mp3');
    }

    frame 18 {
      _level2.playSFX('battle_don.mp3');
    }

    frame 25 {
      we2.gotoAndStop(_level2.wepList[1] + 1);
      gr2.gotoAndStop(_level2.wepList[1]);
      _level2.playSFX('battle_card.mp3');
    }

    frame 31 {
      _level2.playSFX('battle_don.mp3');
    }

    frame 38 {
      we3.gotoAndStop(_level2.wepList[2] + 1);
      gr3.gotoAndStop(_level2.wepList[2]);
      _level2.playSFX('battle_card.mp3');
    }

    frame 44 {
      _level2.playSFX('battle_don.mp3');
    }

    frame 51 {
      _level2.playVoiceE_Atk(_parent.attacker_id, _level2.cutid);
    }

    frame 69 {
      _level2.tstrace('we1._currentframe = ' + we1._currentframe);
      _level2.tstrace('we2._currentframe = ' + we2._currentframe);
      _level2.tstrace('we3._currentframe = ' + we3._currentframe);
    }

    frame 70 {
      _parent.play();
    }

    frame 80 {
      stop();
    }
  }

  movieClip 1399  {

    frame 1 {
      stop();
    }

    frame 2 {
      _level2.CUTIN_NUM = 4;
    }

    frame 3 {
      rand = Math.floor(Math.random() * _level2.CUTIN_NUM + 1);
      gotoAndPlay('ptn' + rand);
    }

    frame 4 {
      _level2.cutid = ids;
      if (!_level1.npc_battle) {
        --_level2.cutid;
      }
      _level2.ldr1.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + _level2.cutid + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.cutid)].api_version, ship.ship);
      _level2.ldr1.addListener(_level2.lsnr1);
      _level2.lsnr1.onLoadInit = function () {
        _level2.tstrace('Loading character ' + _level2.cutid + ' artwork');
        ship.ship.gotoAndStop(10);
        ship.ship._x = _level1.SYS_ship_pos[_level1.getPosID(_level2.cutid)].api_battle_n[0];
        ship.ship._y = _level1.SYS_ship_pos[_level1.getPosID(_level2.cutid)].api_battle_n[1];
        _level2.ldr1.removeListener(_level2.lsnr1);
      };

      _level2.lsnr1.onLoadError = function () {
        _level2.tstrace('Failed to load character ' + _level2.cutid + ' artwork');
        ship.attachMovie('nodatachar', 'ship', 1);
        ship.ship._x = 440;
        ship.ship._y = 810;
        _level2.ldr1.removeListener(_level2.lsnr1);
      };

    }

    frame 12 {
      _level2.playSFX('battle_cutinMove.mp3');
      if (_level2.atkWeapon == -1) {
        cha._visible = false;
      }
    }

    frame 15 {
      if (_level2.atkWeapon == -1) {
        statusWindow._visible = false;
      }
    }

    frame 20 {
      _level2.playVoiceE_Atk(attacker_id, ids);
    }

    frame 36 {
      _level2.play();
    }

    frame 54 {
      gotoAndStop(1);
    }

    frame 55 {
      _level2.cutid = ids;
      if (!_level1.npc_battle) {
        --_level2.cutid;
      }
      _level2.ldr1.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + _level2.cutid + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.cutid)].api_version, ship.ship);
      _level2.ldr1.addListener(_level2.lsnr1);
      _level2.lsnr1.onLoadInit = function () {
        _level2.tstrace('Loading character ' + _level2.cutid + ' artwork');
        ship.ship.gotoAndStop(10);
        ship.ship._x = _level1.SYS_ship_pos[_level1.getPosID(_level2.cutid)].api_battle_n[0];
        ship.ship._y = _level1.SYS_ship_pos[_level1.getPosID(_level2.cutid)].api_battle_n[1];
        _level2.ldr1.removeListener(_level2.lsnr1);
      };

      _level2.lsnr1.onLoadError = function () {
        _level2.tstrace('Failed to load character ' + _level2.cutid + ' artwork');
        ship.attachMovie('nodatachar', 'ship', 1);
        ship.ship._x = 440;
        ship.ship._y = 810;
        _level2.ldr1.removeListener(_level2.lsnr1);
      };

    }

    frame 63 {
      _level2.playSFX('battle_cutinMove.mp3');
      if (_level2.atkWeapon == -1) {
        cha._visible = false;
      }
    }

    frame 66 {
      if (_level2.atkWeapon == -1) {
        statusWindow._visible = false;
      }
    }

    frame 69 {
      if (_level2.raiflag) {
        arms.gotoAndStop(random(3) + 13);
      } else {
        arms.gotoAndStop(random(12) + 1);
      }
    }

    frame 71 {
      _level2.playVoiceE_Atk(attacker_id, ids);
    }

    frame 87 {
      _level2.play();
    }

    frame 105 {
      gotoAndStop(1);
    }

    frame 106 {
      _level2.cutid = ids;
      if (!_level1.npc_battle) {
        --_level2.cutid;
      }
      _level2.ldr1.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + _level2.cutid + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.cutid)].api_version, ship.ship);
      _level2.ldr1.addListener(_level2.lsnr1);
      _level2.lsnr1.onLoadInit = function () {
        _level2.tstrace('Loading character ' + _level2.cutid + ' artwork');
        ship.ship.gotoAndStop(10);
        ship.ship._x = _level1.SYS_ship_pos[_level1.getPosID(_level2.cutid)].api_battle_n[0];
        ship.ship._y = _level1.SYS_ship_pos[_level1.getPosID(_level2.cutid)].api_battle_n[1];
        _level2.ldr1.removeListener(_level2.lsnr1);
      };

      _level2.lsnr1.onLoadError = function () {
        _level2.tstrace('Failed to load character ' + _level2.cutid + ' artwork');
        ship.attachMovie('nodatachar', 'ship', 1);
        ship.ship._x = 440;
        ship.ship._y = 810;
        _level2.ldr1.removeListener(_level2.lsnr1);
      };

    }

    frame 114 {
      _level2.playSFX('battle_cutinMove.mp3');
      if (_level2.atkWeapon == -1) {
        cha._visible = false;
      }
    }

    frame 117 {
      if (_level2.atkWeapon == -1) {
        statusWindow._visible = false;
      }
    }

    frame 120 {
      if (_level2.raiflag) {
        arms.gotoAndStop(random(3) + 13);
      } else {
        arms.gotoAndStop(random(12) + 1);
      }
    }

    frame 122 {
      _level2.playVoiceE_Atk(attacker_id, ids);
    }

    frame 138 {
      _level2.play();
    }

    frame 156 {
      gotoAndStop(1);
    }

    frame 157 {
      _level2.cutid = ids;
      if (!_level1.npc_battle) {
        --_level2.cutid;
      }
      _level2.ldr1.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + _level2.cutid + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.cutid)].api_version, ship.ship);
      _level2.ldr1.addListener(_level2.lsnr1);
      _level2.lsnr1.onLoadInit = function () {
        _level2.tstrace('Loading character ' + _level2.cutid + ' artwork');
        ship.ship.gotoAndStop(10);
        ship.ship._x = _level1.SYS_ship_pos[_level1.getPosID(_level2.cutid)].api_battle_n[0];
        ship.ship._y = _level1.SYS_ship_pos[_level1.getPosID(_level2.cutid)].api_battle_n[1];
        _level2.ldr1.removeListener(_level2.lsnr1);
      };

      _level2.lsnr1.onLoadError = function () {
        _level2.tstrace('Failed to load character ' + _level2.cutid + ' artwork');
        ship.attachMovie('nodatachar', 'ship', 1);
        ship.ship._x = 440;
        ship.ship._y = 810;
        _level2.ldr1.removeListener(_level2.lsnr1);
      };

    }

    frame 165 {
      _level2.playSFX('battle_cutinMove.mp3');
      if (_level2.atkWeapon == -1) {
        cha._visible = false;
      }
    }

    frame 168 {
      if (_level2.atkWeapon == -1) {
        statusWindow._visible = false;
      }
    }

    frame 171 {
      if (_level2.raiflag) {
        arms.gotoAndStop(random(3) + 13);
      } else {
        arms.gotoAndStop(random(12) + 1);
      }
    }

    frame 173 {
      _level2.playVoiceE_Atk(attacker_id, ids);
    }

    frame 189 {
      _level2.play();
    }

    frame 207 {
      gotoAndStop(1);
    }

    frame 208 {
      play();
    }

    frame 209 {
      stop();
    }

    frame 217 {
      _level2.gotoAndPlay('super_rai');
      stop();
    }

    frame 228 {
      gotoAndStop(1);
    }

    frame 229 {
      play();
    }

    frame 230 {
      stop();
    }

    frame 239 {
      _level2.gotoAndPlay('super_rai');
      stop();
    }

    frame 249 {
      gotoAndStop(1);
    }

    frame 250 {
      play();
    }

    frame 251 {
      stop();
    }

    frame 260 {
      _level2.gotoAndPlay('super_hou2');
      stop();
    }

    frame 267 {
      gotoAndStop(1);
    }

    frame 268 {
      play();
    }

    frame 269 {
      stop();
    }

    frame 274 {
      _level2.gotoAndPlay('super_hou');
      stop();
    }

    frame 286 {
      gotoAndStop(1);
    }

    frame 287 {
      stop();
    }

    frame 288 {
      _level2.CUTIN_NUM = 4;
    }

    frame 289 {
      rand = Math.floor(Math.random() * _level2.CUTIN_NUM + 1);
      gotoAndPlay('ren' + rand);
    }

    frame 290 {
      _level2.cutid = ids;
      if (!_level1.npc_battle) {
        --_level2.cutid;
      }
      _level2.ldr1.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + _level2.cutid + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.cutid)].api_version, ship.ship);
      _level2.ldr1.addListener(_level2.lsnr1);
      _level2.lsnr1.onLoadInit = function () {
        _level2.tstrace('Loading character ' + _level2.cutid + ' artwork');
        ship.ship.gotoAndStop(10);
        ship.ship._x = _level1.SYS_ship_pos[_level1.getPosID(_level2.cutid)].api_battle_n[0];
        ship.ship._y = _level1.SYS_ship_pos[_level1.getPosID(_level2.cutid)].api_battle_n[1];
        _level2.ldr1.removeListener(_level2.lsnr1);
      };

      _level2.lsnr1.onLoadError = function () {
        _level2.tstrace('Failed to load character ' + _level2.cutid + ' artwork');
        ship.attachMovie('nodatachar', 'ship', 1);
        ship.ship._x = 440;
        ship.ship._y = 810;
        _level2.ldr1.removeListener(_level2.lsnr1);
      };

    }

    frame 297 {
      _level2.atkWeapon = _level2.wepList[0];
    }

    frame 298 {
      _level2.playSFX('battle_cutinMove.mp3');
      if (_level2.atkWeapon == -1) {
        cha._visible = false;
      }
    }

    frame 306 {
      _level2.playVoiceE_Atk(attacker_id, ids);
    }

    frame 316 {
      _level2.play();
    }

    frame 317 {
    }

    frame 319 {
    }

    frame 320 {
      _level2.atkWeapon = _level2.wepList[1];
    }

    frame 321 {
      _level2.wepID = _level2.presetWepID;
    }

    frame 367 {
      gotoAndStop(1);
    }

    frame 368 {
      _level2.cutid = ids;
      if (!_level1.npc_battle) {
        --_level2.cutid;
      }
      _level2.ldr1.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + _level2.cutid + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.cutid)].api_version, ship.ship);
      _level2.ldr1.addListener(_level2.lsnr1);
      _level2.lsnr1.onLoadInit = function () {
        _level2.tstrace('Loading character ' + _level2.cutid + ' artwork');
        ship.ship.gotoAndStop(10);
        ship.ship._x = _level1.SYS_ship_pos[_level1.getPosID(_level2.cutid)].api_battle_n[0];
        ship.ship._y = _level1.SYS_ship_pos[_level1.getPosID(_level2.cutid)].api_battle_n[1];
        _level2.ldr1.removeListener(_level2.lsnr1);
      };

      _level2.lsnr1.onLoadError = function () {
        _level2.tstrace('Failed to load character ' + _level2.cutid + ' artwork');
        ship.attachMovie('nodatachar', 'ship', 1);
        ship.ship._x = 440;
        ship.ship._y = 810;
        _level2.ldr1.removeListener(_level2.lsnr1);
      };

    }

    frame 375 {
      _level2.atkWeapon = _level2.wepList[0];
    }

    frame 376 {
      _level2.atkWeapon = _level2.wepList[0];
    }

    frame 377 {
      _level2.playSFX('battle_cutinMove.mp3');
      if (_level2.atkWeapon == -1) {
        cha._visible = false;
      }
    }

    frame 385 {
      _level2.playVoiceE_Atk(attacker_id, ids);
    }

    frame 395 {
      _level2.play();
    }

    frame 399 {
      _level2.atkWeapon = _level2.wepList[1];
    }

    frame 400 {
      _level2.wepID = _level2.presetWepID;
    }

    frame 446 {
      gotoAndStop(1);
    }

    frame 447 {
      _level2.cutid = ids;
      if (!_level1.npc_battle) {
        --_level2.cutid;
      }
      _level2.ldr1.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + _level2.cutid + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.cutid)].api_version, ship.ship);
      _level2.ldr1.addListener(_level2.lsnr1);
      _level2.lsnr1.onLoadInit = function () {
        _level2.tstrace('Loading character ' + _level2.cutid + ' artwork');
        ship.ship.gotoAndStop(10);
        ship.ship._x = _level1.SYS_ship_pos[_level1.getPosID(_level2.cutid)].api_battle_n[0];
        ship.ship._y = _level1.SYS_ship_pos[_level1.getPosID(_level2.cutid)].api_battle_n[1];
        _level2.ldr1.removeListener(_level2.lsnr1);
      };

      _level2.lsnr1.onLoadError = function () {
        _level2.tstrace('Failed to load character ' + _level2.cutid + ' artwork');
        ship.attachMovie('nodatachar', 'ship', 1);
        ship.ship._x = 440;
        ship.ship._y = 810;
        _level2.ldr1.removeListener(_level2.lsnr1);
      };

    }

    frame 454 {
      _level2.atkWeapon = _level2.wepList[0];
    }

    frame 455 {
      _level2.atkWeapon = _level2.wepList[0];
    }

    frame 456 {
      _level2.playSFX('battle_cutinMove.mp3');
      if (_level2.atkWeapon == -1) {
        cha._visible = false;
      }
    }

    frame 464 {
      _level2.playVoiceE_Atk(attacker_id, ids);
    }

    frame 474 {
      _level2.play();
    }

    frame 478 {
      _level2.atkWeapon = _level2.wepList[1];
    }

    frame 479 {
      _level2.wepID = _level2.presetWepID;
    }

    frame 525 {
      gotoAndStop(1);
    }

    frame 526 {
      _level2.cutid = ids;
      if (!_level1.npc_battle) {
        --_level2.cutid;
      }
      _level2.ldr1.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + _level2.cutid + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.cutid)].api_version, ship.ship);
      _level2.ldr1.addListener(_level2.lsnr1);
      _level2.lsnr1.onLoadInit = function () {
        _level2.tstrace('Loading character ' + _level2.cutid + ' artwork');
        ship.ship.gotoAndStop(10);
        ship.ship._x = _level1.SYS_ship_pos[_level1.getPosID(_level2.cutid)].api_battle_n[0];
        ship.ship._y = _level1.SYS_ship_pos[_level1.getPosID(_level2.cutid)].api_battle_n[1];
        _level2.ldr1.removeListener(_level2.lsnr1);
      };

      _level2.lsnr1.onLoadError = function () {
        _level2.tstrace('Failed to load character ' + _level2.cutid + ' artwork');
        ship.attachMovie('nodatachar', 'ship', 1);
        ship.ship._x = 440;
        ship.ship._y = 810;
        _level2.ldr1.removeListener(_level2.lsnr1);
      };

    }

    frame 533 {
      _level2.atkWeapon = _level2.wepList[0];
    }

    frame 534 {
      _level2.atkWeapon = _level2.wepList[0];
    }

    frame 535 {
      _level2.playSFX('battle_cutinMove.mp3');
      if (_level2.atkWeapon == -1) {
        cha._visible = false;
      }
    }

    frame 543 {
      _level2.playVoiceE_Atk(attacker_id, ids);
    }

    frame 553 {
      _level2.play();
    }

    frame 557 {
      _level2.atkWeapon = _level2.wepList[1];
    }

    frame 558 {
      _level2.wepID = _level2.presetWepID;
    }

    frame 604 {
      gotoAndStop(1);
    }
  }

  frame 241 {
    attacker = at_list[round];
    attype = at_type[round];
    atkWeapon = si_list[round];
    cutin_powup = new Array();
    cutin_slot = new Array();
    cutin_name = _level2.ship_name[attacker];
    cutin_hp = Math.floor((nowhps[attacker] * 1 / maxhps[attacker]) * 100);
    if (attacker > 6) {
      cutin_slot = eSlot[attacker - 7];
      cutin_lv = ship_lve[attacker - 6];
      cutin_powup = _level2.eParam[attacker - 6];
      if (attype == 1) {
        deffencer = df_list[round];
        hou_dam = damage_hougeki[round];
        critmiss = cl_list[round];
        tellTarget (''e' + (attacker - 6)') {
          gotoAndPlay('attack_e2');
        }
        i = 1;
        while (i <= 6) {
          tellTarget (''f' + i') {
            gotoAndPlay('attack_f');
          }
          ++i;
        }
        gotoAndStop('hougeki_laser');
        _level2.atkWeapon = -1;
        _level2.raiflag = false;
        _level2.airhouFlg = false;
        _level2.divehouFlg = false;
      } else {
        deffencer = df_list[round][0];
        hou_dam = damage_hougeki[round][0];
        crit = cl_list[round][0] == 2;
        miss = cl_list[round][0] == 0;
        j = 0;
        if (_level1.npc_battle) {
          for (;;) {
            if (!(_level1.SYS_ship_data[j].api_id != ship_ke[attacker - 6] && j < 1000)) break;
            ++j;
          }
        } else {
          for (;;) {
            if (!(_level1.SYS_ship_data[j].api_id != ship_ke[attacker - 6] - 1 && j < 1000)) break;
            ++j;
          }
        }
        typ = _level1.SYS_ship_data[j].api_stype;
        k = 0;
        for (;;) {
          if (!(_level1.SYS_ship_data[k].api_id != ship_kf[deffencer] - 1 && k < 1000)) break;
          ++k;
        }
        typ_target = _level1.SYS_ship_data[k].api_stype;
        _level2.tstrace('j=' + j + ' typ=' + typ + ' k=' + k + ' typ_target=' + typ_target);
        if (typ == 7 || typ == 11 || typ == 18) {
          gotoAndStop('hougeki_air');
          _level2.atkWeapon = -1;
          _level2.raiflag = false;
          _level2.airhouFlg = true;
          _level2.divehouFlg = false;
        } else {
          if (typ_target == 13 || typ_target == 14) {
            if (typ == 6 || typ == 10 || typ == 14 || typ == 16 || typ == 17) {
              gotoAndStop('hougeki_air');
              _level2.atkWeapon = -1;
              _level2.raiflag = false;
              _level2.airhouFlg = true;
              _level2.divehouFlg = false;
            } else {
              if (typ == 13) {
                gotoAndStop('hougeki_rai');
                _level2.raiflag = true;
                _level2.airhouFlg = false;
                _level2.divehouFlg = false;
              } else {
                gotoAndStop('hougeki_dive');
                _level2.atkWeapon = -1;
                _level2.raiflag = false;
                _level2.airhouFlg = false;
                _level2.divehouFlg = true;
              }
            }
          } else {
            tellTarget (''e' + (attacker - 6)') {
              gotoAndPlay('attack_e2');
            }
            if (hou_dam == Math.floor(hou_dam)) {
              tellTarget (''f' + deffencer') {
                gotoAndPlay('attack_f');
              }
            } else {}
            _level2.raiflag = false;
            _level2.airhouFlg = false;
            _level2.divehouFlg = false;
            stop();
          }
        }
      }
      hougeki_cutin2.attacker_id = attacker - 6;
      hougeki_cutin2.ids = ship_ke[attacker - 6];
      hougeki_cutin2.gotoAndPlay('hou');
    } else {
      cutin_slot = fSlot[attacker - 1];
      cutin_lv = ship_lvf[attacker];
      cutin_powup = _level2.fParam[attacker];
      if (attype == 1) {
        deffencer = df_list[round];
        hou_dam = damage_hougeki[round];
        critmiss = cl_list[round];
        tellTarget (''f' + attacker') {
          gotoAndPlay('attack_f2');
        }
        i = 1;
        while (i <= 6) {
          tellTarget (''e' + i') {
            gotoAndPlay('attack_e');
          }
          ++i;
        }
        gotoAndStop('hougeki_laser');
        _level2.atkWeapon = -1;
        _level2.raiflag = false;
        _level2.airhouFlg = false;
        _level2.divehouFlg = false;
      } else {
        deffencer = df_list[round][0];
        hou_dam = damage_hougeki[round][0];
        crit = cl_list[round][0] == 2;
        miss = cl_list[round][0] == 0;
        j = 0;
        for (;;) {
          if (!(_level1.SYS_ship_data[j].api_id != ship_kf[attacker] - 1 && j < 1000)) break;
          ++j;
        }
        typ = _level1.SYS_ship_data[j].api_stype;
        k = 0;
        if (_level1.npc_battle) {
          for (;;) {
            if (!(_level1.SYS_ship_data[k].api_id != ship_ke[deffencer - 6] && k < 1000)) break;
            ++k;
          }
        } else {
          for (;;) {
            if (!(_level1.SYS_ship_data[k].api_id != ship_ke[deffencer - 6] - 1 && k < 1000)) break;
            ++k;
          }
        }
        typ_target = _level1.SYS_ship_data[k].api_stype;
        _level2.tstrace('j=' + j + ' typ=' + typ + ' k=' + k + ' typ_target=' + typ_target);
        _level2.tstrace('_level1.SYS_ship_data[j]["api_name"] = ' + _level1.SYS_ship_data[j].api_name);
        if (typ == 7 || typ == 11 || typ == 18) {
          gotoAndStop('hougeki_air');
          _level2.atkWeapon = -1;
          _level2.raiflag = false;
          _level2.airhouFlg = true;
          _level2.divehouFlg = false;
        } else {
          if (typ_target == 13 || typ_target == 14) {
            if (typ == 6 || typ == 10 || typ == 14 || typ == 16 || typ == 17) {
              gotoAndStop('hougeki_air');
              _level2.atkWeapon = -1;
              _level2.raiflag = false;
              _level2.airhouFlg = true;
              _level2.divehouFlg = false;
            } else {
              if (typ == 13) {
                gotoAndStop('hougeki_rai');
                _level2.raiflag = true;
                _level2.airhouFlg = false;
                _level2.divehouFlg = false;
              } else {
                gotoAndStop('hougeki_dive');
                _level2.atkWeapon = -1;
                _level2.raiflag = false;
                _level2.airhouFlg = false;
                _level2.divehouFlg = true;
              }
            }
          } else {
            tellTarget (''f' + attacker') {
              gotoAndPlay('attack_f2');
            }
            if (hou_dam == Math.floor(hou_dam)) {
              tellTarget (''e' + (deffencer - 6)') {
                gotoAndPlay('attack_e');
              }
            } else {}
            _level2.raiflag = false;
            _level2.airhouFlg = false;
            _level2.divehouFlg = false;
            stop();
          }
        }
      }
      hougeki_cutin.ids = ship_kf[attacker];
      hougeki_cutin.gotoAndPlay('hou');
    }
    _level2.tstrace('attacker = ' + attacker);
    _level2.tstrace('attype = ' + attype);
    _level2.tstrace('atkWeapon = ' + atkWeapon);
    _level2.tstrace('deffencer = ' + deffencer);
    _level2.tstrace('hou_dam = ' + hou_dam);
    _level2.tstrace('crit = ' + crit);
    _level2.tstrace('miss = ' + miss);
  }

  frame 242 {
    stop();
    if (hou_dam < 16) {
      _level2.bp = 1;
    } else {
      if (hou_dam < 40) {
        _level2.bp = 2;
      } else {
        _level2.bp = 3;
      }
    }
    if (attacker > 6) {
      tellTarget (''dam_num' + deffencer') {
        damage = _level2.hou_dam;
        crit = _level2.crit;
        miss = _level2.miss;
        gotoAndPlay(2);
      }
      if (hou_dam != Math.floor(hou_dam)) {
        tellTarget (''f' + deffencer') {
          bp = _level2.bp;
          gotoAndPlay('block_f');
        }
        _level2.fshield.play();
      } else {
        tellTarget (''f' + deffencer') {
          bp = _level2.bp;
          gotoAndPlay('ex_f');
        }
      }
    } else {
      tellTarget (''dam_num' + deffencer') {
        damage = _level2.hou_dam;
        crit = _level2.crit;
        miss = _level2.miss;
        gotoAndPlay(2);
      }
      if (hou_dam != Math.floor(hou_dam)) {
        tellTarget (''e' + (deffencer - 6)') {
          bp = _level2.bp;
          gotoAndPlay('block_e');
        }
        _level2.eshield.play();
      } else {
        tellTarget (''e' + (deffencer - 6)') {
          bp = _level2.bp;
          gotoAndPlay('ex_e');
        }
      }
    }
  }

  frame 250 {
    if (_level2.gekichinFlg) {
      _level2.gekichinFlg = false;
      gekichin_cut.gotoAndPlay(2);
      stop();
    } else {
      if (_level2.ftaihaFlg) {
        _level2.ftaihaFlg = false;
        taiha_cut.gotoAndPlay(2);
        stop();
      }
    }
  }

  frame 254 {
    ++round;
    if (round <= hougeki_num) {
      gotoAndPlay('hougeki_round');
    } else {
      gotoAndPlay('5_raigeki');
    }
  }

  frame 255 {
    _level2.tstrace('Frame: hougeki_air');
    if (attacker > 6) {
      tellTarget (''e' + (attacker - 6)') {
        _level2.planee._x = _x + 80;
        _level2.planee._y = _y + 40;
        _level2.planee.starty = _y + 40;
      }
      tellTarget (''f' + deffencer') {
        _level2.planee.endy = _y;
      }
      _level2.planee.play();
      _level2.planef._visible = false;
      _level2.planee.pid = attacker;
      if (_level2.eplanecount[attacker - 7] < 3) {
        _level2.planee.plane.p3._visible = false;
      }
      if (_level2.eplanecount[attacker - 7] < 2) {
        _level2.planee.plane.p2._visible = false;
      }
    } else {
      tellTarget (''f' + attacker') {
        _level2.planef._x = _x + 160;
        _level2.planef._y = _y + 40;
        _level2.planef.starty = _y + 40;
      }
      tellTarget (''e' + (deffencer - 6)') {
        _level2.planef.endy = _y;
      }
      _level2.planef.play();
      _level2.planee._visible = false;
      _level2.planef.pid = attacker;
      if (_level2.fplanecount[attacker - 1] < 3) {
        _level2.planef.plane.p3._visible = false;
      }
      if (_level2.fplanecount[attacker - 1] < 2) {
        _level2.planef.plane.p2._visible = false;
      }
    }
    _level2.playSFX('battle_plane1.mp3');
  }

  movieClip 1400  {

    frame 1 {
      play();
      pos._visible = false;
    }

    instance plane of movieClip 808  {

      onClipEvent (enterFrame) {
        p1.plane.plane.formid = 0;
        p2.plane.plane.formid = 1;
        p3.plane.plane.formid = 2;
      }
    }

    frame 2 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 3 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 4 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 5 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 6 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 7 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 8 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 9 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 10 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 11 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 12 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 13 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 14 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 15 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 16 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 17 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 18 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 19 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 20 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 21 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 22 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 23 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 24 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 25 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 26 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 27 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 28 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 29 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 30 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 31 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 32 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 33 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 34 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 35 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 36 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 37 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 38 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 39 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 40 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 41 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 42 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 43 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 44 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 45 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 46 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 47 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 48 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 49 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 50 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 51 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 52 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 53 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 54 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 55 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 56 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 57 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 58 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 59 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 60 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 61 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 62 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 63 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 64 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 65 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 66 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 67 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 68 {
      play();
      _y = _y + (endy - starty) / 82;
      plane.p1.gotoAndPlay('atk1');
    }

    frame 69 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 70 {
      play();
      _y = _y + (endy - starty) / 82;
      plane.p2.gotoAndPlay('atk1');
    }

    frame 71 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 72 {
      play();
      _y = _y + (endy - starty) / 82;
      plane.p3.gotoAndPlay('atk1');
    }

    frame 73 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 74 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 75 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 76 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 77 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 78 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 79 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 80 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 81 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 82 {
      _level2.play();
    }

    frame 83 {
      play();
    }

    frame 84 {
      play();
    }

    frame 85 {
      play();
    }

    frame 86 {
      play();
    }

    frame 87 {
      play();
    }

    frame 88 {
      play();
    }

    frame 89 {
      play();
    }

    frame 90 {
      play();
    }

    frame 91 {
      play();
    }

    frame 92 {
      play();
    }

    frame 93 {
      play();
    }

    frame 94 {
      play();
    }

    frame 95 {
      play();
    }

    frame 96 {
      play();
    }

    frame 97 {
      play();
    }

    frame 98 {
      play();
    }

    frame 99 {
      play();
    }

    frame 100 {
      play();
    }

    frame 101 {
      play();
    }

    frame 102 {
      play();
    }

    frame 103 {
      play();
    }

    frame 104 {
      play();
    }

    frame 105 {
      play();
    }

    frame 106 {
      play();
    }

    frame 107 {
      play();
    }

    frame 108 {
      play();
    }

    frame 109 {
      play();
    }

    frame 110 {
      play();
    }

    frame 111 {
      play();
    }

    frame 112 {
      play();
    }

    frame 113 {
      play();
    }

    frame 114 {
      play();
    }

    frame 115 {
      play();
    }

    frame 116 {
      play();
    }

    frame 117 {
      play();
    }

    frame 118 {
      play();
    }

    frame 119 {
      play();
    }

    frame 120 {
      stop();
      _visible = false;
      _level2.play();
    }
  }

  instance planef of movieClip 1400  {
  }

  movieClip 1401  {

    frame 1 {
      play();
      pos._visible = false;
    }

    instance plane of movieClip 801  {

      onClipEvent (enterFrame) {
        p1.plane.plane.formid = 0;
        p2.plane.plane.formid = 1;
        p3.plane.plane.formid = 2;
      }
    }

    frame 3 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 4 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 5 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 6 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 7 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 8 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 9 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 10 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 11 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 12 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 13 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 14 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 15 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 16 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 17 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 18 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 19 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 20 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 21 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 22 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 23 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 24 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 25 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 26 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 27 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 28 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 29 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 30 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 31 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 32 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 33 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 34 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 35 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 36 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 37 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 38 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 39 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 40 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 41 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 42 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 43 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 44 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 45 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 46 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 47 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 48 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 49 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 50 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 51 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 52 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 53 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 54 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 55 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 56 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 57 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 58 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 59 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 60 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 61 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 62 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 63 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 64 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 65 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 66 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 67 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 68 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 69 {
      play();
      _y = _y + (endy - starty) / 82;
      plane.p1.gotoAndPlay('atk1');
    }

    frame 70 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 71 {
      play();
      _y = _y + (endy - starty) / 82;
      plane.p2.gotoAndPlay('atk1');
    }

    frame 72 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 73 {
      play();
      _y = _y + (endy - starty) / 82;
      plane.p3.gotoAndPlay('atk1');
    }

    frame 74 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 75 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 76 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 77 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 78 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 79 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 80 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 81 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 82 {
      play();
      _y = _y + (endy - starty) / 82;
    }

    frame 83 {
      _level2.play();
    }

    frame 84 {
      play();
    }

    frame 85 {
      play();
    }

    frame 86 {
      play();
    }

    frame 87 {
      play();
    }

    frame 88 {
      play();
    }

    frame 89 {
      play();
    }

    frame 90 {
      play();
    }

    frame 91 {
      play();
    }

    frame 92 {
      play();
    }

    frame 93 {
      play();
    }

    frame 94 {
      play();
    }

    frame 95 {
      play();
    }

    frame 96 {
      play();
    }

    frame 97 {
      play();
    }

    frame 98 {
      play();
    }

    frame 99 {
      play();
    }

    frame 100 {
      play();
    }

    frame 101 {
      play();
    }

    frame 102 {
      play();
    }

    frame 103 {
      play();
    }

    frame 104 {
      play();
    }

    frame 105 {
      play();
    }

    frame 106 {
      play();
    }

    frame 107 {
      play();
    }

    frame 108 {
      play();
    }

    frame 109 {
      play();
    }

    frame 110 {
      play();
    }

    frame 111 {
      play();
    }

    frame 112 {
      play();
    }

    frame 113 {
      play();
    }

    frame 114 {
      play();
    }

    frame 115 {
      play();
    }

    frame 116 {
      play();
    }

    frame 117 {
      play();
    }

    frame 118 {
      play();
    }

    frame 119 {
      play();
    }

    frame 120 {
      play();
    }

    frame 121 {
      stop();
      _visible = false;
      _level2.play();
    }
  }

  instance planee of movieClip 1401  {
  }

  frame 256 {
    stop();
  }

  frame 258 {
    _level2.tstrace('Frame: hougeki_aerial_bomb');
    stop();
    if (hou_dam < 16) {
      _level2.bp = 1;
    } else {
      if (hou_dam < 40) {
        _level2.bp = 2;
      } else {
        _level2.bp = 3;
      }
    }
    if (attacker > 6) {
      tellTarget (''dam_num' + deffencer') {
        damage = _level2.hou_dam;
        crit = _level2.crit;
        miss = _level2.miss;
        gotoAndPlay(2);
      }
      if (hou_dam != Math.floor(hou_dam)) {
        tellTarget (''f' + deffencer') {
          bp = _level2.bp;
          gotoAndPlay('block_f');
        }
        _level2.fshield.play();
      } else {
        tellTarget (''f' + deffencer') {
          bp = _level2.bp;
          gotoAndPlay('ex_f');
        }
      }
    } else {
      tellTarget (''dam_num' + deffencer') {
        damage = _level2.hou_dam;
        crit = _level2.crit;
        miss = _level2.miss;
        gotoAndPlay(2);
      }
      if (hou_dam != Math.floor(hou_dam)) {
        tellTarget (''e' + (deffencer - 6)') {
          bp = _level2.bp;
          gotoAndPlay('block_e');
        }
        _level2.eshield.play();
      } else {
        tellTarget (''e' + (deffencer - 6)') {
          bp = _level2.bp;
          gotoAndPlay('ex_e');
        }
      }
    }
  }

  frame 264 {
    if (_level2.gekichinFlg) {
      _level2.gekichinFlg = false;
      gekichin_cut.gotoAndPlay(2);
      stop();
    } else {
      if (_level2.ftaihaFlg) {
        _level2.ftaihaFlg = false;
        taiha_cut.gotoAndPlay(2);
        stop();
      }
    }
  }

  frame 268 {
    ++round;
    if (round <= hougeki_num) {
      gotoAndPlay('hougeki_round');
    } else {
      gotoAndPlay('5_raigeki');
    }
  }

  frame 269 {
    _level2.tstrace('Frame: hougeki_dive');
    if (attacker <= 6) {
      this['f' + attacker].gotoAndPlay('attack_f2');
      if (hou_dam == Math.floor(hou_dam)) {
        this['e' + (deffencer - 6)].gotoAndPlay('attack_e');
      } else {}
    } else {
      this['e' + (attacker - 6)].gotoAndPlay('attack_e2');
      if (hou_dam == Math.floor(hou_dam)) {
        this['f' + deffencer].gotoAndPlay('attack_f');
      } else {}
    }
    stop();
  }

  frame 270 {
    stop();
    if (attacker <= 6) {
      b_start._y = this['f' + attacker]._y + 110;
      b_start_enemy._visible = false;
    } else {
      b_start_enemy._y = this['e' + (attacker - 6)]._y + 110;
      b_start._visible = false;
    }
  }

  movieClip 1402  {
  }

  movieClip 1405  {
  }

  movieClip 1406  {

    frame 34 {
      _parent.play();
    }
  }

  frame 271 {
    stop();
    if (attacker <= 6) {
      b_end._y = this['e' + (deffencer - 6)]._y + 40;
      b_end_enemy._visible = false;
    } else {
      b_end_enemy._y = this['f' + deffencer]._y + 40;
      b_end._visible = false;
    }
  }

  movieClip 1409  {
  }

  movieClip 1410  {

    frame 13 {
      _parent.play();
    }

    frame 17 {
      stop();
    }
  }

  frame 272 {
    this['bomb' + deffencer].gotoAndPlay('bakurai');
    istep = 0;
  }

  frame 273 {
    _level2.tstrace('Frame: bakurailoop');
  }

  frame 274 {
    if (istep < 26) {
      gotoAndPlay('bakurailoop');
      ++istep;
    }
  }

  frame 276 {
    _level2.tstrace('Frame: hougeki_dive_bomb');
    stop();
    if (hou_dam < 16) {
      _level2.bp = 1;
    } else {
      if (hou_dam < 40) {
        _level2.bp = 2;
      } else {
        _level2.bp = 3;
      }
    }
    if (attacker > 6) {
      tellTarget (''dam_num' + deffencer') {
        damage = _level2.hou_dam;
        crit = _level2.crit;
        miss = _level2.miss;
        gotoAndPlay(2);
      }
      if (hou_dam != Math.floor(hou_dam)) {
        tellTarget (''f' + deffencer') {
          bp = _level2.bp;
          gotoAndPlay('block_f');
        }
        _level2.fshield.play();
      } else {
        tellTarget (''f' + deffencer') {
          bp = _level2.bp;
          gotoAndPlay('ex_f');
        }
      }
    } else {
      tellTarget (''dam_num' + deffencer') {
        damage = _level2.hou_dam;
        crit = _level2.crit;
        miss = _level2.miss;
        gotoAndPlay(2);
      }
      if (hou_dam != Math.floor(hou_dam)) {
        tellTarget (''e' + (deffencer - 6)') {
          bp = _level2.bp;
          gotoAndPlay('block_e');
        }
        _level2.eshield.play();
      } else {
        tellTarget (''e' + (deffencer - 6)') {
          bp = _level2.bp;
          gotoAndPlay('ex_e');
        }
      }
    }
  }

  frame 279 {
    if (_level2.gekichinFlg) {
      _level2.gekichinFlg = false;
      gekichin_cut.gotoAndPlay(2);
      stop();
    } else {
      if (_level2.ftaihaFlg) {
        _level2.ftaihaFlg = false;
        taiha_cut.gotoAndPlay(2);
        stop();
      }
    }
  }

  frame 282 {
    ++round;
    if (round <= hougeki_num) {
      gotoAndPlay('hougeki_round');
    } else {
      gotoAndPlay('5_raigeki');
    }
  }

  frame 283 {
    _level2.tstrace('Frame: hougeki_rai');
  }

  frame 284 {
    sh = 0;
    lop = 0;
    shmax = 30;
    zax = 0;
    zay = 0;
    zdx = 1;
    zdy = 1;
    if (attacker <= 6) {
      zax = (eval('f' + attacker))._x + 80;
      zay = (eval('f' + attacker))._y + 20;
      zdx = (eval('e' + (deffencer - 6)))._x + 80;
      zdy = (eval('e' + (deffencer - 6)))._y + 20;
    } else {
      zax = (eval('e' + (attacker - 6)))._x + 80;
      zay = (eval('e' + (attacker - 6)))._y + 20;
      zdx = (eval('f' + deffencer))._x + 80;
      zdy = (eval('f' + deffencer))._y + 20;
    }
    cutin_powup = new Array();
    cutin_slot = new Array();
    cutin_name = _level2.ship_name[attacker];
    cutin_hp = Math.floor((nowhps[attacker] * 1 / maxhps[attacker]) * 100);
    if (attacker <= 6) {
      cutin_slot = fSlot[attacker - 1];
      cutin_lv = ship_lvf[attacker];
      cutin_powup = _level2.fParam[attacker];
      tellTarget (''f' + attacker') {
        gotoAndPlay('raigeki');
      }
      hougeki_cutin.ids = ship_kf[attacker];
      hougeki_cutin.gotoAndPlay('hou');
    } else {
      cutin_slot = eSlot[attacker - 7];
      cutin_lv = ship_lve[attacker - 6];
      cutin_powup = _level2.eParam[attacker - 6];
      tellTarget (''e' + (attacker - 6)') {
        gotoAndPlay('raigeki');
      }
      hougeki_cutin2.ids = ship_ke[attacker - 6];
      hougeki_cutin2.gotoAndPlay('hou');
    }
  }

  frame 286 {
    _level2.tstrace('Frame: shoots5');
  }

  frame 287 {
    ++lop;
    if (lop < 15) {
      gotoAndPlay('shoots5');
    } else {
      if (attacker <= 6) {
        tellTarget (''f' + attacker') {
          gotoAndPlay('raigeki2');
        }
      } else {
        tellTarget (''e' + (attacker - 6)') {
          gotoAndPlay('raigeki3');
        }
      }
      rr = Math.atan2(zdy - zay, zdx - zax) * 180 / Math.PI;
      eval('g' + attacker)._x = zax;
      eval('g' + attacker)._y = zay;
      eval('g' + attacker)._rotation = rr;
    }
  }

  frame 288 {
    _level2.tstrace('Frame: gyorai_loop3');
    ++sh;
    g._x = zax + ((zdx - zax) / shmax) * sh;
    g._y = zay + ((zdy - zay) / shmax) * sh;
  }

  frame 289 {
    if (sh == shmax) {
      if (attacker <= 6) {
        _level2.tmp = hou_dam;
        tellTarget (''dam_num' + deffencer') {
          damage = _level2.tmp;
          crit = _level2.crit;
          miss = _level2.miss;
          gotoAndPlay(2);
        }
        if (_level2.tmp <= 0) {
          tellTarget (''ssp' + deffencer') {
            gotoAndPlay('sp1');
          }
        } else {
          tellTarget (''sp' + deffencer') {
            gotoAndPlay('sp1');
          }
        }
        if (_level2.tmp < 16) {
          bp = 1;
        } else {
          if (_level2.tmp < 40) {
            bp = 2;
          } else {
            bp = 3;
          }
        }
        if (hou_dam != Math.floor(hou_dam)) {
          tellTarget (''e' + (deffencer - 6)') {
            bp = _level2.bp;
            gotoAndPlay('block_e');
          }
          _level2.eshield.play();
        } else {
          tellTarget (''e' + (deffencer - 6)') {
            bp = _level2.bp;
            gotoAndPlay('gyorai_hit');
          }
        }
      } else {
        _level2.tmp = hou_dam;
        tellTarget (''dam_num' + deffencer') {
          damage = _level2.tmp;
          crit = _level2.crit;
          miss = _level2.miss;
          gotoAndPlay(2);
        }
        if (_level2.tmp <= 0) {
          tellTarget (''ssp' + deffencer') {
            gotoAndPlay('sp2');
          }
        } else {
          tellTarget (''sp' + deffencer') {
            gotoAndPlay('sp2');
          }
        }
        if (_level2.tmp < 16) {
          bp = 1;
        } else {
          if (_level2.tmp < 40) {
            bp = 2;
          } else {
            bp = 3;
          }
        }
        if (hou_dam != Math.floor(hou_dam)) {
          tellTarget (''f' + deffencer') {
            bp = _level2.bp;
            gotoAndPlay('block_f');
          }
          _level2.fshield.play();
        } else {
          tellTarget (''f' + deffencer') {
            bp = _level2.bp;
            gotoAndPlay('gyorai_hit');
          }
        }
      }
    }
    if (sh < shmax + 10) {
      gotoAndPlay('gyorai_loop3');
    } else {
      i = 1;
      while (i <= 6) {
        tellTarget (''f' + i') {
          gotoAndStop('default');
        }
        tellTarget (''e' + i') {
          gotoAndStop('default');
        }
        ++i;
      }
      g._y = -300;
    }
  }

  frame 296 {
    if (_level2.gekichinFlg) {
      _level2.gekichinFlg = false;
      gekichin_cut.gotoAndPlay(2);
      stop();
    } else {
      if (_level2.ftaihaFlg) {
        _level2.ftaihaFlg = false;
        taiha_cut.gotoAndPlay(2);
        stop();
      }
    }
  }

  frame 301 {
    ++round;
    if (round <= hougeki_num) {
      gotoAndPlay('hougeki_round');
    } else {
      gotoAndPlay('5_raigeki');
    }
  }

  frame 302 {
    _level2.tstrace('Frame: hougeki_laser');
  }

  movieClip 1413  {
  }

  movieClip 1416  {
  }

  movieClip 1417  {

    frame 1 {
      play();
    }

    frame 20 {
      gotoAndPlay(1);
    }
  }

  movieClip 1420  {
  }

  movieClip 1421  {

    frame 1 {
      play();
    }

    frame 7 {
      gotoAndPlay(1);
    }
  }

  frame 303 {
    cnt = 0;
    totcnt = 50;
    updown = Math.random() > 0.5;
    dlast = 1;
    if (attacker > 6) {
      i = 2;
      while (i <= 6) {
        if (ship_kf[i] > 0) {
          dlast = i;
        }
        ++i;
      }
    } else {
      i = 2;
      while (i <= 6) {
        if (ship_ke[i] > 0) {
          dlast = i;
        }
        ++i;
      }
    }
    if (attacker > 6) {
      tellTarget (''e' + (attacker - 6)') {
        _level2.aposx = _x + ship._x;
        _level2.aposy = _y + 20;
      }
    } else {
      tellTarget (''f' + attacker') {
        _level2.aposx = 160 + _x + ship._x;
        _level2.aposy = _y + 20;
      }
    }
    if (updown) {
      if (attacker > 6) {
        _level2.dstartposx = 185;
        _level2.dstartposy = 98;
        tellTarget (''f' + dlast') {
          _level2.dendposx = 185;
          _level2.dendposy = _y + 20;
        }
      } else {
        _level2.dstartposx = 615;
        _level2.dstartposy = 167;
        tellTarget (''e' + dlast') {
          _level2.dendposx = 615;
          _level2.dendposy = _y + 20;
        }
      }
    } else {
      if (attacker > 6) {
        _level2.dendposx = 185;
        _level2.dendposy = 98;
        tellTarget (''f' + dlast') {
          _level2.dstartposx = 185;
          _level2.dstartposy = _y + 20;
        }
      } else {
        _level2.dendposx = 615;
        _level2.dendposy = 167;
        tellTarget (''e' + dlast') {
          _level2.dstartposx = 615;
          _level2.dstartposy = _y + 20;
        }
      }
    }
    dcurposx = dstartposx;
    dcurposy = dstartposy;
    ylen = dstartposy - aposy;
    xlen = dstartposx - aposx;
    laser._rotation = Math.atan2(ylen, xlen) * 180 / Math.PI;
    laser._xscale = (Math.sqrt(xlen * xlen + ylen * ylen) / 550) * 100;
    laser._x = _level2.aposx;
    laser._y = _level2.aposy;
    if (updown) {
      nextexploc = 0;
    } else {
      nextexploc = dlast;
    }
    sparkparts = new Array();
    spsv = new Array();
    _level2.tstrace('_level2.aposx = ' + _level2.aposx);
    _level2.tstrace('_level2.aposy = ' + _level2.aposy);
    _level2.tstrace('_level2.dstartposx = ' + _level2.dstartposx);
    _level2.tstrace('_level2.dstartposy = ' + _level2.dstartposy);
    _level2.tstrace('_level2.dendposx = ' + _level2.dendposx);
    _level2.tstrace('_level2.dendposy = ' + _level2.dendposy);
    _level2.tstrace('_level2.dlast = ' + _level2.dlast);
    _level2.playSFX('laser');
  }

  frame 304 {
    _level2.tstrace('Frame: laser_loop');
  }

  frame 305 {
    ++cnt;
    if (cnt < totcnt) {
      if (attacker > 6) {
        tellTarget (''e' + (attacker - 6)') {
          _level2.aposx = _x + ship._x;
          _level2.aposy = _y + 20;
        }
      } else {
        tellTarget (''f' + attacker') {
          _level2.aposx = 160 + _x + ship._x;
          _level2.aposy = _y + 20;
        }
      }
      dcurposx += (dendposx - dstartposx) * 1 / totcnt;
      dcurposy += (dendposy - dstartposy) * 1 / totcnt;
      xlen = dcurposx - aposx;
      ylen = dcurposy - aposy;
      laser._rotation = Math.atan2(ylen, xlen) * 180 / Math.PI;
      laser._xscale = (Math.sqrt(xlen * xlen + ylen * ylen) / 530) * 100;
      laser._x = aposx;
      laser._y = aposy;
      if (cnt % 4 == 0) {
        sparkparts[sparkparts.length] = sparks.duplicateMovieClip('sp' + sparkparts.length, this.getNextHighestDepth());
        spsv[sparkparts.length - 1] = Math.random() * 2 + 2;
        sparkparts[sparkparts.length - 1]._x = dcurposx;
        sparkparts[sparkparts.length - 1]._y = dcurposy;
        tmp = Math.random() * 4 + 1;
        sparkparts[sparkparts.length - 1]._xscale = tmp;
        sparkparts[sparkparts.length - 1]._yscale = tmp;
        sparkparts[sparkparts.length - 1]._alpha = 100;
      }
      i = 0;
      while (i < sparkparts.length) {
        sparkparts[i]._xscale += spsv[i];
        sparkparts[i]._yscale += spsv[i];
        sparkparts[i]._rotation = Math.random() * 360;
        if (sparkparts[i]._alpha <= 0) {
          sparkparts[i].removeMovieClip();
        } else {
          sparkparts[i]._alpha -= 0.75 * spsv[i];
        }
        ++i;
      }
      if (updown) {
        if (cnt >= nextexploc * 1 * totcnt / dlast) {
          if (attacker > 6) {
            tellTarget (''bomb' + (nextexploc + 1)') {
              gotoAndPlay('laser_ex_f');
            }
          } else {
            tellTarget (''bomb' + (nextexploc + 7)') {
              gotoAndPlay('laser_ex_e');
            }
          }
          ++nextexploc;
        }
      } else {
        if (cnt >= (dlast - nextexploc) * 1 * totcnt / dlast) {
          if (attacker > 6) {
            tellTarget (''bomb' + nextexploc') {
              gotoAndPlay('laser_ex_f');
            }
          } else {
            tellTarget (''bomb' + (nextexploc + 6)') {
              gotoAndPlay('laser_ex_e');
            }
          }
          --nextexploc;
        }
      }
      gotoAndPlay('laser_loop');
    } else {
      laser._x = 900;
      laser._y = 0;
      laser._rotation = 0;
      i = 0;
      while (i < sparkparts.length) {
        sparkparts[i].removeMovieClip();
        ++i;
      }
    }
  }

  frame 308 {
    stop();
    i = 0;
    while (i < deffencer.length) {
      crit = critmiss[i] == 2;
      miss = critmiss[i] == 0;
      if (hou_dam[i] < 16) {
        _level2.bp = 1;
      } else {
        if (hou_dam[i] < 40) {
          _level2.bp = 2;
        } else {
          _level2.bp = 3;
        }
      }
      if (attacker > 6) {
        tellTarget (''f' + deffencer[i]') {
          bp = _level2.bp;
          gotoAndPlay('ex_f');
        }
      } else {
        tellTarget (''e' + (deffencer[i] - 6)') {
          bp = _level2.bp;
          gotoAndPlay('ex_e');
        }
      }
      tellTarget (''dam_num' + deffencer[i]') {
        damage = _level2.hou_dam[_level2.i];
        crit = _level2.crit;
        miss = _level2.miss;
        gotoAndPlay(2);
      }
      ++i;
    }
  }

  frame 313 {
    if (_level2.gekichinFlg) {
      _level2.gekichinFlg = false;
      gekichin_cut.gotoAndPlay(2);
      stop();
    } else {
      if (_level2.ftaihaFlg) {
        _level2.ftaihaFlg = false;
        taiha_cut.gotoAndPlay(2);
        stop();
      }
    }
  }

  frame 318 {
    ++round;
    if (round <= hougeki_num) {
      gotoAndPlay('hougeki_round');
    } else {
      gotoAndPlay('5_raigeki');
    }
  }

  frame 319 {
    _level2.tstrace('Frame: 5_raigeki');
    i = 1;
    while (i <= 6) {
      tellTarget (''f' + i') {
        gotoAndStop('default');
      }
      tellTarget (''e' + i') {
        gotoAndStop('default');
      }
      ++i;
    }
    if (_level2.hourai_flag[3] == 1) {
      _level2.centerline.flg = 0;
      _level2.centerline.id = 4;
      _level2.centerline.gotoAndPlay(2);
      i = 1;
      while (i <= 6) {
        tellTarget (''f' + i') {
          gotoAndStop('default');
        }
        tellTarget (''e' + i') {
          gotoAndStop('default');
        }
        ++i;
      }
      lop = 0;
      upperbar.nex = 4;
      upperbar.play();
      _level2.tstrace('frai = [' + frai + ']');
      _level2.tstrace('erai = [' + erai + ']');
      _level2.tstrace('fdam = [' + fdam + ']');
      _level2.tstrace('edam = [' + edam + ']');
      _level2.tstrace('fydam = [' + fydam + ']');
      _level2.tstrace('eydam = [' + eydam + ']');
      _level2.tstrace('fcl = [' + fcl + ']');
      _level2.tstrace('ecl = [' + ecl + ']');
      _level2.damageserverdebug += '\rfrai = [' + frai + '], erai = [' + erai + ']';
      _level2.damageserverdebug += '\rfdam = [' + fdam + '], edam = [' + edam + ']';
      _level2.damageserverdebug += '\rfydam = [' + fydam + '], eydam = [' + eydam + ']';
      _level2.damageserverdebug += '\rfcl = [' + fcl + '], ecl = [' + ecl + ']';
    } else {
      _level2.tstrace('_level2.hourai_flag[3] = ' + _level2.hourai_flag[3]);
      gotoAndPlay('ridatsu');
    }
  }

  frame 322 {
    if (_level2.gekichin_cut._currentframe != 1 || _level2.taiha_cut._currentframe != 1) {
      stop();
    }
  }

  frame 327 {
    _level2.tstrace('Frame: raigeki_loop');
  }

  frame 328 {
    shmax = -35;
    if (centerline.flg == 0) {
      gotoAndPlay('raigeki_loop');
    } else {
      sh = 0;
      i = 1;
      while (i <= 6) {
        if (frai[i] >= 0 || erai[i] >= 0) {
          shmax = 60;
        }
        ++i;
      }
      zfx = [0, 0, 0, 0, 0, 0];
      zfy = [0, 0, 0, 0, 0, 0];
      zex = [0, 0, 0, 0, 0, 0];
      zey = [0, 0, 0, 0, 0, 0];
      i = 1;
      while (i <= 6) {
        zfx[i] = (eval('f' + i))._x + 80;
        zfy[i] = (eval('f' + i))._y + 20;
        zex[i] = (eval('e' + i))._x + 80;
        zey[i] = (eval('e' + i))._y + 20;
        ++i;
      }
      i = 1;
      while (i <= 6) {
        eval('sp' + i)._x = (eval('f' + i))._x + 160;
        eval('sp' + i)._y = (eval('f' + i))._y + 40;
        eval('sp' + (i + 6))._x = (eval('e' + i))._x;
        eval('sp' + (i + 6))._y = (eval('e' + i))._y + 40;
        if (frai[i] > 0) {
          tellTarget (''f' + i') {
            gotoAndPlay('raigeki');
          }
          tellTarget ('_level2.sfx') {
            sstr[(curCh + queued) % totCh] = 'battle_gyorai.mp3';
            ++queued;
            gotoAndPlay('play');
          }
        }
        if (erai[i] > 0) {
          tellTarget (''e' + i') {
            gotoAndPlay('raigeki');
          }
          _level2.playSFX('battle_gyorai.mp3');
        }
        ++i;
      }
    }
  }

  frame 329 {
    _level2.tstrace('Frame: shoots');
  }

  frame 330 {
    ++lop;
    if (lop < 15) {
      gotoAndPlay('shoots');
    } else {
      i = 1;
      while (i <= 6) {
        if (frai[i] > 0) {
          _level2.playVoice(ship_kf[i] - 1, [15, 16], [50, 50]);
          break;
        }
        ++i;
      }
      _level2.tstrace('erai : ' + erai);
      i = 1;
      while (i <= 6) {
        if (erai[i] > 0) {
          _level2.playVoiceE_Atk(i, ship_ke[i]);
          break;
        }
        ++i;
      }
      i = 1;
      while (i <= 6) {
        if (frai[i] > 0) {
          tellTarget (''f' + i') {
            gotoAndPlay('raigeki2');
          }
          rr = Math.atan2(zey[frai[i]] - zfy[i], zex[frai[i]] - zfx[i]) * 180 / Math.PI;
          eval('g' + i)._x = zfx[i];
          eval('g' + i)._y = zfy[i];
          eval('g' + i)._rotation = rr;
        }
        if (erai[i] > 0) {
          tellTarget (''e' + i') {
            gotoAndPlay('raigeki3');
          }
          rr = Math.atan2(zfy[erai[i]] - zey[i], zfx[erai[i]] - zex[i]) * 180 / Math.PI;
          eval('g' + (i + 6))._x = zex[i];
          eval('g' + (i + 6))._y = zey[i];
          eval('g' + (i + 6))._rotation = rr;
        }
        ++i;
      }
    }
  }

  frame 331 {
    _level2.tstrace('Frame: gyorai_loop');
    ++sh;
    i = 1;
    while (i <= 6) {
      if (frai[i] > 0) {
        eval('g' + i)._x = zfx[i] + ((zex[frai[i]] - zfx[i]) / shmax) * sh;
        eval('g' + i)._y = zfy[i] + ((zey[frai[i]] - zfy[i]) / shmax) * sh;
      }
      if (erai[i] > 0) {
        eval('g' + (i + 6))._x = zex[i] + ((zfx[erai[i]] - zex[i]) / shmax) * sh;
        eval('g' + (i + 6))._y = zey[i] + ((zfy[erai[i]] - zey[i]) / shmax) * sh;
      }
      ++i;
    }
  }

  frame 332 {
    if (sh == shmax) {
      i = 1;
      while (i <= 12) {
        tellTarget (''dam_num' + i') {
          crit = false;
          norm = false;
          miss = false;
          hirurai = true;
        }
        ++i;
      }
      i = 1;
      while (i <= 6) {
        if (erai[i] > 0) {
          tmp = fdam[erai[i]];
          tellTarget (''dam_num' + erai[i]') {
            damage = _level2.tmp;
            if (_level2.ecl[_level2.i] == 0) {
              miss = true;
            }
            if (_level2.ecl[_level2.i] == 1) {
              norm = true;
            }
            if (_level2.ecl[_level2.i] == 2) {
              crit = true;
            }
            gotoAndPlay(2);
          }
          if (tmp > 0) {
            tellTarget (''sp' + erai[i]') {
              gotoAndPlay('sp1');
            }
          } else {
            tellTarget (''ssp' + erai[i]') {
              gotoAndPlay('sp1');
            }
          }
          if (tmp < 16) {
            _level2.bp = 1;
          } else {
            if (tmp < 40) {
              _level2.bp = 2;
            } else {
              _level2.bp = 3;
            }
          }
          if (fdam[erai[i]] != Math.floor(fdam[erai[i]])) {
            tellTarget (''f' + erai[i]') {
              bp = _level2.bp;
              gotoAndPlay('block_f');
            }
            _level2.fshield.play();
          } else {
            tellTarget (''f' + erai[i]') {
              bp = _level2.bp;
              gotoAndPlay('gyorai_hit');
            }
          }
        }
        if (frai[i] > 0) {
          tmp = edam[frai[i]];
          tellTarget (''dam_num' + (frai[i] + 6)') {
            damage = _level2.tmp;
            if (_level2.fcl[_level2.i] == 0) {
              miss = true;
            }
            if (_level2.fcl[_level2.i] == 1) {
              norm = true;
            }
            if (_level2.fcl[_level2.i] == 2) {
              crit = true;
            }
            gotoAndPlay(2);
          }
          if (tmp > 0) {
            tellTarget (''sp' + (frai[i] + 6)') {
              gotoAndPlay('sp2');
            }
          } else {
            tellTarget (''ssp' + (frai[i] + 6)') {
              gotoAndPlay('sp2');
            }
          }
          if (tmp < 16) {
            _level2.bp = 1;
          } else {
            if (tmp < 40) {
              _level2.bp = 2;
            } else {
              _level2.bp = 3;
            }
          }
          if (edam[frai[i]] != Math.floor(edam[frai[i]])) {
            tellTarget (''e' + frai[i]') {
              bp = _level2.bp;
              gotoAndPlay('block_e');
            }
            _level2.eshield.play();
          } else {
            tellTarget (''e' + frai[i]') {
              bp = _level2.bp;
              gotoAndPlay('gyorai_hit');
            }
          }
        }
        ++i;
      }
    }
    if (sh < shmax + 35) {
      gotoAndPlay('gyorai_loop');
    } else {
      i = 1;
      while (i <= 6) {
        tellTarget (''f' + i') {
          gotoAndStop('default');
        }
        tellTarget (''e' + i') {
          gotoAndStop('default');
        }
        ++i;
      }
      i = 1;
      while (i <= 12) {
        eval('g' + i)._y = -300;
        ++i;
      }
    }
  }

  frame 338 {
    if (_level2.gekichinFlg) {
      _level2.gekichinFlg = false;
      gekichin_cut.gotoAndPlay(2);
      stop();
    } else {
      if (_level2.ftaihaFlg) {
        _level2.ftaihaFlg = false;
        taiha_cut.gotoAndPlay(2);
        stop();
      }
    }
    i = 1;
    while (i <= 12) {
      tellTarget (''dam_num' + i') {
        hirurai = false;
      }
      ++i;
    }
  }

  frame 342 {
    _level2.tstrace('Frame: ridatsu');
    bossfading = false;
    if (_level2.isEvent() && _level2.bossmap && _level1.mapid == 2) {
      _level2.bossdead = false;
      if (_level2.nowhps[7] <= 0) {
        _level2.bossdead = true;
        if (eventbossvoicelengths[_level2.bosstp] > 0) {
          _level2.stop();
          _level2.playVoiceE(7, eventbossids[_level2.bosstp], [10], null);
          var stopID = setInterval(function () {
            _level2.tstrace('setInterval終了：' + stopID);
            _level2.play();
            clearInterval(stopID);
          }, _level2.eventbossvoicelengths[_level2.bosstp]);
        }
      }
    }
  }

  frame 343 {
    if (!_level2.bossmap && !_level2.isEvent() || _level2.yasen_reversal) {
      _level2.playBGM('', true, 0, 1);
    }
  }

  frame 344 {
    _level2.tstrace('Frame: waitforfade');
  }

  frame 345 {
    if ((!_level2.bossmap && !_level2.isEvent() || _level2.yasen_reversal) && _level2.bgm._currentframe < 5) {
      gotoAndPlay('waitforfade');
    }
  }

  frame 346 {
    if (!_level2.bossmap && !_level2.isEvent() || _level2.yasen_reversal) {
      _level2.bgm.gotoAndPlay('stop');
    }
  }

  frame 348 {
    _level2.tstrace('Frame: waitforexplosion');
  }

  frame 349 {
    if (_level2.gaugeExploding) {
      gotoAndPlay('waitforexplosion');
    }
  }

  movieClip 1430  {

    frame 43 {
      gotoAndPlay(15);
    }
  }

  button 1433 {

    on (press) {
      prs = 1;
      play();
    }
  }

  button 1436 {

    on (press) {
      prs = 0;
      play();
    }
  }

  movieClip 1437  {

    frame 1 {
      stop();
    }
  }

  movieClip 1438  {

    frame 1 {
      stop();
    }
  }

  movieClip 1439  {

    frame 1 {
      escape_flg_f = _level2.escape_flg_f;
      escape_flg_e = _level2.escape_flg_e;
      prs = -1;
      _level2.playSFX('frame_close.mp3');
    }

    frame 21 {
      if (_level2.night_flag == 0) {
        gotoAndStop('resultonly');
      }
      if (_level2.yasen_reversal) {
        _level2.gotoAndPlay('show_result');
      }
    }

    frame 32 {
      stop();
    }

    frame 33 {
      if (prs == 0) {
        wave2._visible = false;
      } else {
        wave1._visible = false;
      }
      _level2.playSFX('battle_click.mp3');
    }

    frame 50 {
      if (prs == 0) {
        rd.gotoAndStop(2);
      } else {
        ys.gotoAndStop(2);
      }
    }

    frame 66 {
      _level2.shinro = 0;
      if (prs == 0) {
        _level2.shinro = 1;
        this.bar.id = 6;
      } else {
        this.bar.id = 7;
      }
      this.bar.flg = 0;
      this.bar.gotoAndPlay(2);
    }

    frame 121 {
      _level2.play();
      stop();
    }
  }

  frame 370 {
    _level2.tstrace('Frame: waitforfade2');
    if ((_level2.bossmap || _level2.isEvent()) && !_level2.yasen_reversal) {
      if (bossfading) {
        if (_level2.bgm._currentframe == 5) {
          _level2.bgm.gotoAndPlay('stop');
        }
      }
    }
  }

  frame 371 {
    if (_level2.night_flag == 0) {
      upperbar.stop();
      if ((_level2.bossmap || _level2.isEvent()) && !_level2.yasen_reversal) {
        if (bossfading) {
          if (_level2.bgm._currentframe < 5) {
            gotoAndPlay('waitforfade2');
          } else {
            _level2.bgm.gotoAndPlay('stop');
            gotoAndPlay('show_result');
          }
        } else {
          _level2.playBGM('', true, 0, 1);
          gotoAndPlay('waitforfade2');
          bossfading = true;
        }
      } else {
        _level2.bgm.gotoAndPlay('stop');
        gotoAndPlay('show_result');
      }
    } else {
      stop();
      upperbar.nex = 5;
      upperbar.play();
    }
  }

  frame 375 {
    if ((_level2.bossmap || _level2.isEvent()) && !_level2.yasen_reversal) {
      if (_level2.bgm.ext) {
        _level2.bossbgmpos = _level2.bgm.s2.position;
        _level2.tstrace('_level2.bgm.s2.position = ' + _level2.bgm.s2.position);
      } else {
        _level2.bossbgmpos = _level2.bgm.s.position;
        _level2.tstrace('_level2.bgm.s.position = ' + _level2.bgm.s.position);
      }
    }
    _level2.bgm.gotoAndPlay('stop');
  }

  frame 376 {
    if (_level2.shinro == 0) {
      gotoAndPlay('yasen');
    } else {
      if (_level2.shinro == 1) {
        gotoAndPlay('show_result');
      }
    }
    _level2.tstrace('-----------------------------------------------日中の戦闘終了');
  }

  frame 381 {
    stop();
  }

  frame 382 {
    stop();
    if (_level2.yasen_special || _level2.yasen_reversal) {
      _level2.tstrace('Scene: yasen_special/yasen_reversal');
      chu._visible = false;
      _level2.rader.gotoAndStop(1);
      _level2.rader.rader_e.gotoAndStop(1);
      _level2.rader.rader_f.gotoAndStop(1);
    } else {
      _level2.tstrace('Scene: yasen');
      shutters_sp._visible = false;
    }
  }

  movieClip 1440  {
  }

  instance dam_num1 of movieClip 651  {

    onClipEvent (load) {
      damid = 1;
    }
  }

  instance dam_num2 of movieClip 651  {

    onClipEvent (load) {
      damid = 2;
    }
  }

  instance dam_num3 of movieClip 651  {

    onClipEvent (load) {
      damid = 3;
    }
  }

  instance dam_num4 of movieClip 651  {

    onClipEvent (load) {
      damid = 4;
    }
  }

  instance dam_num5 of movieClip 651  {

    onClipEvent (load) {
      damid = 5;
    }
  }

  instance dam_num6 of movieClip 651  {

    onClipEvent (load) {
      damid = 6;
    }
  }

  instance dam_num7 of movieClip 651  {

    onClipEvent (load) {
      damid = 7;
    }
  }

  instance dam_num8 of movieClip 651  {

    onClipEvent (load) {
      damid = 8;
    }
  }

  instance dam_num9 of movieClip 651  {

    onClipEvent (load) {
      damid = 9;
    }
  }

  instance dam_num10 of movieClip 651  {

    onClipEvent (load) {
      damid = 10;
    }
  }

  instance dam_num11 of movieClip 651  {

    onClipEvent (load) {
      damid = 11;
    }
  }

  instance dam_num12 of movieClip 651  {

    onClipEvent (load) {
      damid = 12;
    }
  }

  movieClip 1441  {
  }

  movieClip 1442  {
  }

  movieClip 1443  {

    frame 1 {
      stop();
    }

    frame 39 {
      _level2.playSFX('frame_open.mp3');
    }

    frame 47 {
    }

    frame 48 {
      _parent.play();
    }

    frame 70 {
      stop();
    }
  }

  movieClip 1445  {

    frame 2 {
      tr_obj = new LoadVars();
      recv1_obj = new LoadVars();
      lop = new Object();
      if ((_level2.bossmap || _level2.isEvent()) && !_level2.yasen_special && !_level2.yasen_reversal) {
        _level2.playBGMAtPos(_level2.lastBGMName, true, _level1.bgmVolume, _level2.bossbgmpos);
      }
      recv1_obj.onLoad = function (success) {
        if (success) {
          recv = _level2.midnight_act.recv1_obj.svdata;
          _level2.tstrace('Data from server: ');
          _level2.tstrace(recv);
          if (recv == undefined) {
            _level2.tstrace('Load error: recv is undefined');
            _level1.err_id = 1001;
            if (_level1.npc_battle) {
              if (_level2.yasen_special) {
                _level1.err_mes = 'Load error: data from server undefined for api_req_battle_midnight/sp_midnight';
              } else {
                if (_level2.yasen_reversal) {
                  _level1.err_mes = 'Load error: data from server undefined for api_req_sortie/night_to_day';
                } else {
                  _level1.err_mes = 'Load error: data from server undefined for api_req_battle_midnight/battle';
                }
              }
            } else {
              _level1.err_mes = 'Load error: data from server undefined for api_req_practice/midnight_battle';
            }
            _level1.err_from = '夜戦開始';
            _level1.gotoAndPlay('sys_err2');
            _level2.gotoAndStop('prebattle');
          } else {
            delete _level2.midnight_act.lop;
            _level2.midnight_act.lop = new Object();
            _level2.midnight_act.lop = JSON.parse(recv);
            if (_level2.midnight_act.lop == undefined) {
              _level2.tstrace('Load error: could not parse recv');
              _level1.err_id = 1002;
              if (_level1.npc_battle) {
                if (_level2.yasen_special) {
                  _level1.err_mes = 'Load error: could not parse data from server for api_req_battle_midnight/sp_midnight';
                } else {
                  if (_level2.yasen_reversal) {
                    _level1.err_mes = 'Load error: could not parse data from server for api_req_sortie/night_to_day';
                  } else {
                    _level1.err_mes = 'Load error: could not parse data from server for api_req_battle_midnight/battle';
                  }
                }
              } else {
                _level1.err_mes = 'Load error: could not parse data from server for api_req_practice/midnight_battle';
              }
              _level1.err_from = '夜戦開始';
              _level1.gotoAndPlay('sys_err2');
              _level2.gotoAndStop('prebattle');
            } else {
              _level2.midnight_act.gotoAndStop('suc');
            }
          }
        } else {
          _level2.tstrace('receive error');
          _level2.err_id = 1000;
          _level2.err_from = '夜戦開始';
          if (_level1.npc_battle) {
            if (_level2.yasen_special) {
              _level1.err_mes = 'Receive error for api_req_battle_midnight/sp_midnight';
            } else {
              if (_level2.yasen_reversal) {
                _level1.err_mes = 'Receive error for api_req_sortie/night_to_day';
              } else {
                _level1.err_mes = 'Receive error for api_req_battle_midnight/battle';
              }
            }
          } else {
            _level1.err_mes = 'Receive error for api_req_practice/midnight_battle';
          }
          _level1.gotoAndPlay('sys_err1');
          _level2.gotoAndStop('prebattle');
        }
      };

      tr_obj.api_token = _level1.userToken;
      tr_obj.api_verno = _level1.FLA_VER;
      if (_level1.npc_battle) {
        if (_level2.yasen_special) {
          tr_obj.api_formation = _level1.cjin;
          tr_obj.sendAndLoad(_level1.BASE_URL + 'api_req_battle_midnight/sp_midnight', recv1_obj, 'POST');
        } else {
          if (_level2.yasen_reversal) {
            tr_obj.api_formation = _level1.cjin;
            tr_obj.sendAndLoad(_level1.BASE_URL + 'api_req_sortie/night_to_day', recv1_obj, 'POST');
          } else {
            tr_obj.sendAndLoad(_level1.BASE_URL + 'api_req_battle_midnight/battle', recv1_obj, 'POST');
          }
        }
      } else {
        tr_obj.api_deck_id = _level1.goDeck;
        tr_obj.api_formation_id = _level1.cjin;
        tr_obj.api_enemy_id = _level1.enshuu_enemy;
        tr_obj.sendAndLoad(_level1.BASE_URL + 'api_req_practice/midnight_battle', recv1_obj, 'POST');
      }
      stop();
    }

    frame 3 {
      if (lop.api_result == 1) {
        if (_level2.yasen_special || _level2.yasen_reversal) {
          _level2.ship_ke = lop.api_data.api_ship_ke;
          if (!_level1.npc_battle) {
            i = 1;
            while (i <= 6) {
              if (_level2.ship_ke[i] > -1) {
                ++_level2.ship_ke[i];
              }
              ++i;
            }
          }
          _level2.tstrace('_level2.ship_ke = [' + _level2.ship_ke + ']');
          _level2.ship_lve = lop.api_data.api_ship_lv;
          _level2.tstrace('_level2.ship_lve = [' + _level2.ship_lve + ']');
          _level2.nowhps = lop.api_data.api_nowhps;
          _level2.maxhps = lop.api_data.api_maxhps;
          _level2.eSlot = lop.api_data.api_eSlot;
          _level2.eKyouka = lop.api_data.api_eKyouka;
          _level2.fParam = lop.api_data.api_fParam;
          _level2.eParam = lop.api_data.api_eParam;
          i = 6;
          while (i > 0) {
            _level2.fParam[i] = _level2.fParam[i - 1];
            _level2.eParam[i] = _level2.eParam[i - 1];
            --i;
          }
          _level2.formation = new Array();
          _level2.formation = lop.api_data.api_formation;
          _level2.tstrace('_level2.formation = [' + _level2.formation + ']');
        }
        delete _level2.at_list;
        _level2.df_list;
        _level2.si_list;
        _level2.damage_hougeki;
        _level2.damage = new Object();
        _level2.nowhps = lop.api_data.api_nowhps;
        if (!_level1.npc_battle) {
          i = 0;
          while (i < _level2.nowhps.length) {
            if (_level2.nowhps[i] == 0) {
              _level2.nowhps[i] = 1;
            }
            ++i;
          }
        }
        _level2.maxhps = lop.api_data.api_maxhps;
        _level2.at_list = lop.api_data.api_hougeki.api_at_list;
        _level2.df_list = lop.api_data.api_hougeki.api_df_list;
        _level2.si_list = lop.api_data.api_hougeki.api_si_list;
        _level2.cl_list = lop.api_data.api_hougeki.api_cl_list;
        _level2.sp_list = lop.api_data.api_hougeki.api_sp_list;
        _level2.d_list = lop.api_data.api_hougeki.api_damage;
        _level2.tstrace('_level2.at_list = [' + _level2.at_list + ']');
        _level2.damageserverdebug += '\r_level2.at_list = [' + _level2.at_list + ']';
        deftrace = '';
        _level2.damageserverdebug += '\r_level2.df_list = [';
        i = 0;
        while (i < _level2.df_list.length) {
          deftrace += '[' + _level2.df_list[i] + ']';
          _level2.damageserverdebug += '[' + _level2.df_list[i] + ']';
          if (i != _level2.df_list.length - 1) {
            deftrace += ', ';
            _level2.damageserverdebug += ', ';
          }
          ++i;
        }
        _level2.tstrace('_level2.df_list = [' + deftrace + ']');
        slottrace = '';
        _level2.damageserverdebug += ']\r_level2.si_list = [';
        i = 0;
        while (i < _level2.si_list.length) {
          slottrace += '[' + _level2.si_list[i] + ']';
          _level2.damageserverdebug += '[' + _level2.si_list[i] + ']';
          if (i != _level2.si_list.length - 1) {
            slottrace += ', ';
            _level2.damageserverdebug += ', ';
          }
          ++i;
        }
        _level2.tstrace('_level2.si_list = [' + slottrace + ']');
        _level2.tstrace('_level2.cl_list = [' + _level2.cl_list + ']');
        crittrace = '';
        _level2.damageserverdebug += ']\r_level2.cl_list = [';
        i = 0;
        while (i < _level2.cl_list.length) {
          crittrace += '[' + _level2.cl_list[i] + ']';
          _level2.damageserverdebug += '[' + _level2.cl_list[i] + ']';
          if (i != _level2.cl_list.length - 1) {
            crittrace += ', ';
            _level2.damageserverdebug += ', ';
          }
          ++i;
        }
        _level2.tstrace('_level2.cl_list = [' + crittrace + ']');
        _level2.tstrace('_level2.sp_list = [' + _level2.sp_list + ']');
        _level2.damageserverdebug += ']\r_level2.sp_list = [' + _level2.sp_list + ']';
        damtrace = '';
        _level2.damageserverdebug += '\r_level2.d_list = [';
        i = 0;
        while (i < _level2.d_list.length) {
          damtrace += '[' + _level2.d_list[i] + ']';
          _level2.damageserverdebug += '[' + _level2.d_list[i] + ']';
          if (i != _level2.d_list.length - 1) {
            damtrace += ', ';
            _level2.damageserverdebug += ', ';
          }
          ++i;
        }
        _level2.tstrace('_level2.d_list = [' + damtrace + ']');
        _level2.damageserverdebug += ']';
        if (_level2.yasen_reversal) {
          _level2.day_flag = lop.api_data.api_day_flag;
          if (_level2.day_flag) {
            _level2.opening_flag = lop.api_data.api_opening_flag;
            if (_level2.opening_flag == 1) {
              _level2.kfrai = lop.api_data.api_opening_atack.api_frai;
              _level2.kerai = lop.api_data.api_opening_atack.api_erai;
              _level2.kfdam = lop.api_data.api_opening_atack.api_fdam;
              _level2.kedam = lop.api_data.api_opening_atack.api_edam;
              _level2.kfydam = lop.api_data.api_opening_atack.api_fydam;
              _level2.keydam = lop.api_data.api_opening_atack.api_eydam;
              _level2.kfcl = lop.api_data.api_opening_atack.api_fcl;
              _level2.kecl = lop.api_data.api_opening_atack.api_ecl;
            }
            _level2.hourai_flag = lop.api_data.api_hourai_flag;
            _level2.day_at_list = new Array();
            _level2.day_at_list[0] = -1;
            _level2.day_df_list = new Array();
            _level2.day_df_list[0] = -1;
            _level2.day_si_list = new Array();
            _level2.day_si_list[0] = -1;
            _level2.day_cl_list = new Array();
            _level2.day_cl_list[0] = -1;
            _level2.damage_hougeki = new Array();
            _level2.damage_hougeki[0] = -1;
            it = 1;
            if (_level2.hourai_flag[0] == 1) {
              for (;;) {
                if (!(lop.api_data.api_hougeki1.api_at_list[it] != -1 && it < 13)) break;
                _level2.day_at_list[_level2.day_at_list.length] = lop.api_data.api_hougeki1.api_at_list[it];
                _level2.day_df_list[_level2.day_df_list.length] = lop.api_data.api_hougeki1.api_df_list[it];
                _level2.day_si_list[_level2.day_si_list.length] = lop.api_data.api_hougeki1.api_si_list[it];
                _level2.day_cl_list[_level2.day_cl_list.length] = lop.api_data.api_hougeki1.api_cl_list[it];
                _level2.damage_hougeki[_level2.damage_hougeki.length] = lop.api_data.api_hougeki1.api_damage[it];
                ++it;
              }
            }
            it = 1;
            if (_level2.hourai_flag[1] == 1) {
              for (;;) {
                if (!(lop.api_data.api_hougeki2.api_at_list[it] != -1 && it < 13)) break;
                _level2.day_at_list[_level2.day_at_list.length] = lop.api_data.api_hougeki2.api_at_list[it];
                _level2.day_df_list[_level2.day_df_list.length] = lop.api_data.api_hougeki2.api_df_list[it];
                _level2.day_si_list[_level2.day_si_list.length] = lop.api_data.api_hougeki2.api_si_list[it];
                _level2.day_cl_list[_level2.day_cl_list.length] = lop.api_data.api_hougeki2.api_cl_list[it];
                _level2.damage_hougeki[_level2.damage_hougeki.length] = lop.api_data.api_hougeki2.api_damage[it];
                ++it;
              }
            }
            it = 1;
            if (_level2.hourai_flag[2] == 1) {
              for (;;) {
                if (!(lop.api_data.api_hougeki3.api_at_list[it] != -1 && it < 13)) break;
                _level2.day_at_list[_level2.day_at_list.length] = lop.api_data.api_hougeki3.api_at_list[it];
                _level2.day_df_list[_level2.day_df_list.length] = lop.api_data.api_hougeki3.api_df_list[it];
                _level2.day_si_list[_level2.day_si_list.length] = lop.api_data.api_hougeki3.api_si_list[it];
                _level2.day_cl_list[_level2.day_cl_list.length] = lop.api_data.api_hougeki3.api_cl_list[it];
                _level2.damage_hougeki[_level2.damage_hougeki.length] = lop.api_data.api_hougeki3.api_damage[it];
                ++it;
              }
            }
            if (_level2.hourai_flag[3] == 1) {
              _level2.frai = lop.api_data.api_raigeki.api_frai;
              _level2.erai = lop.api_data.api_raigeki.api_erai;
              _level2.fdam = lop.api_data.api_raigeki.api_fdam;
              _level2.edam = lop.api_data.api_raigeki.api_edam;
              _level2.fydam = lop.api_data.api_raigeki.api_fydam;
              _level2.eydam = lop.api_data.api_raigeki.api_eydam;
              _level2.fcl = lop.api_data.api_raigeki.api_fcl;
              _level2.ecl = lop.api_data.api_raigeki.api_ecl;
            } else {
              _level2.frai = [-1, -1, -1, -1, -1, -1, -1];
              _level2.erai = [-1, -1, -1, -1, -1, -1, -1];
              _level2.fdam = [-1, -1, -1, -1, -1, -1, -1];
              _level2.edam = [-1, -1, -1, -1, -1, -1, -1];
              _level2.fydam = [-1, -1, -1, -1, -1, -1, -1];
              _level2.eydam = [-1, -1, -1, -1, -1, -1, -1];
              _level2.fcl = [-1, -1, -1, -1, -1, -1, -1];
              _level2.ecl = [-1, -1, -1, -1, -1, -1, -1];
            }
            _level2.searchRes = new Array();
            _level2.searchRes = lop.api_data.api_search;
            _level2.psaku_suc = true;
            if (_level2.searchRes[0] == 3 || _level2.searchRes[0] == 4 || _level2.searchRes[0] == 6) {
              _level2.psaku_suc = false;
            }
            _level2.esaku_suc = true;
            if (_level2.searchRes[1] == 3 || _level2.searchRes[1] == 4 || _level2.searchRes[1] == 6) {
              _level2.esaku_suc = false;
            }
            _level2.psaku = true;
            if (_level2.searchRes[0] == 5 || _level2.searchRes[0] == 6) {
              _level2.psaku = false;
            }
            _level2.esaku = true;
            if (_level2.searchRes[1] == 5 || _level2.searchRes[1] == 6) {
              _level2.esaku = false;
            }
            _level2.psaku_losses = false;
            if (_level2.searchRes[0] == 2 || _level2.searchRes[0] == 3) {
              _level2.psaku_losses = true;
            }
            _level2.esaku_losses = false;
            if (_level2.searchRes[1] == 2 || _level2.searchRes[1] == 3) {
              _level2.esaku_losses = true;
            }
            _level2.tstrace('_level2.psaku_suc = ' + _level2.psaku_suc);
            _level2.tstrace('_level2.esaku_suc = ' + _level2.esaku_suc);
            _level2.tstrace('_level2.psaku = ' + _level2.psaku);
            _level2.tstrace('_level2.esaku = ' + _level2.esaku);
            _level2.tstrace('_level2.psaku_losses = ' + _level2.psaku_losses);
            _level2.tstrace('_level2.esaku_losses = ' + _level2.esaku_losses);
            _level2.support_flag = lop.api_data.api_support_flag;
            if (!_level1.npc_battle) {
              _level2.support_flag = 0;
            }
            _level2.tstrace('_level2.support_flag = ' + _level2.support_flag);
            if (_level2.support_flag == 1) {
              _level2.shien_pcnt = 0;
              _level2.support_deck_id = lop.api_data.api_support_info.api_support_airatack.api_deck_id - 1;
              _level2.support_deck = [-1, -1, -1, -1, -1, -1];
              i = 0;
              while (i < 6) {
                if (_level1.myDeck[_level2.support_deck_id].api_ship[i] != -1) {
                  _level2.support_deck[i] = _level1.FULL_my_ship[_level1.getOldID(_level1.myDeck[_level2.support_deck_id].api_ship[i])].api_ship_id;
                  j = 0;
                  for (;;) {
                    if (!(_level1.SYS_ship_data[j].api_id != _level2.support_deck[i] && j < 1000)) break;
                    ++j;
                  }
                  typ = _level1.SYS_ship_data[j].api_stype;
                  if (typ == 7 || typ == 10 || typ == 11 || typ == 18) {
                    ++_level2.shien_pcnt;
                  }
                }
                ++i;
              }
              _level2.support_taiha = lop.api_data.api_support_info.api_support_airatack.api_undressing_flag;
              _level2.support_lost_ratio = (1 * lop.api_data.api_support_info.api_support_airatack.api_stage1.api_f_lostcount + lop.api_data.api_support_info.api_support_airatack.api_stage2.api_f_lostcount) / (lop.api_data.api_support_info.api_support_airatack.api_stage1.api_f_count + lop.api_data.api_support_info.api_support_airatack.api_stage2.api_f_count);
              _level2.support_erai_flag = lop.api_data.api_support_info.api_support_airatack.api_stage3.api_erai_flag;
              _level2.support_ebak_flag = lop.api_data.api_support_info.api_support_airatack.api_stage3.api_ebak_flag;
              _level2.support_damage = lop.api_data.api_support_info.api_support_airatack.api_stage3.api_edam;
              _level2.support_crit = lop.api_data.api_support_info.api_support_airatack.api_stage3.api_ecl_flag;
              _level2.tstrace('_level2.support_deck_id = ' + _level2.support_deck_id);
              _level2.tstrace('_level2.support_deck = [' + _level2.support_deck + ']');
              _level2.tstrace('_level2.support_taiha = [' + _level2.support_taiha + ']');
              _level2.tstrace('_level2.support_lost_ratio = ' + _level2.support_lost_ratio);
              _level2.tstrace('_level2.support_erai_flag = [' + _level2.support_erai_flag + ']');
              _level2.tstrace('_level2.support_ebak_flag = [' + _level2.support_ebak_flag + ']');
              _level2.tstrace('_level2.support_damage = [' + _level2.support_damage + ']');
              _level2.tstrace('_level2.support_crit = [' + _level2.support_crit + ']');
              _level2.tstrace('_level2.shien_pcnt = ' + _level2.shien_pcnt);
            }
            if (_level2.support_flag == 2 || _level2.support_flag == 3) {
              _level2.support_deck_id = lop.api_data.api_support_info.api_support_hourai.api_deck_id - 1;
              _level2.support_deck = [-1, -1, -1, -1, -1, -1];
              i = 0;
              while (i < 6) {
                if (_level1.myDeck[_level2.support_deck_id].api_ship[i] != -1) {
                  _level2.support_deck[i] = _level1.FULL_my_ship[_level1.getOldID(_level1.myDeck[_level2.support_deck_id].api_ship[i])].api_ship_id;
                }
                ++i;
              }
              _level2.support_taiha = lop.api_data.api_support_info.api_support_hourai.api_undressing_flag;
              _level2.support_damage = lop.api_data.api_support_info.api_support_hourai.api_damage;
              _level2.support_crit = lop.api_data.api_support_info.api_support_hourai.api_cl_list;
              _level2.tstrace('_level2.support_deck_id = ' + _level2.support_deck_id);
              _level2.tstrace('_level2.support_deck = [' + _level2.support_deck + ']');
              _level2.tstrace('_level2.support_taiha = [' + _level2.support_taiha + ']');
              _level2.tstrace('_level2.support_damage = [' + _level2.support_damage + ']');
              _level2.tstrace('_level2.support_crit = [' + _level2.support_crit + ']');
            }
            _level2.plane_from = new Array();
            _level2.plane_from[0] = new Array();
            _level2.plane_from[1] = new Array();
            _level2.plane_from[0] = lop.api_data.api_kouku.api_plane_from[0];
            _level2.tstrace('_level2.plane_from[0] = ' + _level2.plane_from[0]);
            _level2.plane_from[1] = lop.api_data.api_kouku.api_plane_from[1];
            _level2.tstrace('_level2.plane_from[1] = ' + _level2.plane_from[1]);
            _level2.stage_flag = new Array();
            _level2.stage_flag = lop.api_data.api_stage_flag;
            _level2.tstrace('_level2.stage_flag = [' + _level2.stage_flag + ']');
            _level2.stage1 = new Object();
            _level2.stage1 = lop.api_data.api_kouku.api_stage1;
            _level2.seikuu = _level2.stage1.api_disp_seiku;
            _level2.tstrace('_level2.seikuu = ' + _level2.seikuu);
            _level2.stage2 = new Object();
            _level2.stage2 = lop.api_data.api_kouku.api_stage2;
            _level2.stage3 = new Object();
            _level2.stage3 = lop.api_data.api_kouku.api_stage3;
            hid = 1;
            while (_level2.day_at_list[hid] > 0) {
              ++hid;
            }
            _level2.hougeki_num = hid - 1;
          }
        } else {
          _level2.day_flag = false;
        }
        delete tr_obj;
        _level2.play();
      } else {
        _level2.tstrace('load error');
        _level1.err_id = lop.api_result;
        if (_level1.npc_battle) {
          if (_level2.yasen_special) {
            _level1.err_mes = 'Load error: ' + lop.api_result_msg + ' (api_req_battle_midnight/sp_midnight)';
          } else {
            if (_level2.yasen_reversal) {
              _level1.err_mes = 'Load error: ' + lop.api_result_msg + ' (api_req_sortie/night_to_day)';
            } else {
              _level1.err_mes = 'Load error: ' + lop.api_result_msg + ' (api_req_battle_midnight/battle)';
            }
          }
        } else {
          _level1.err_mes = 'Load error: ' + lop.api_result_msg + ' (api_req_practice/midnight_battle)';
        }
        _level1.err_from = '夜戦開始';
        _level1.gotoAndPlay('sys_err2');
        _level2.gotoAndStop('prebattle');
      }
      stop();
    }
  }

  instance of movieClip 65  {

    onClipEvent (load) {
      useHandCursor = false;
    }

    onClipEvent (press) {
    }
  }

  frame 383 {
    if (_level2.yasen_special || _level2.yasen_reversal) {
      _level2.SCENE_BATTLE = 0;
      _level2.SCENE_YASEN = 1;
      _level2.SCENE_RESULT = 2;
      _level2.scene = _level2.SCENE_YASEN;
      _level2.CUTIN_NUM = 4;
      var ldr1 = new MovieClipLoader();
      var lsnr1 = new Object();
      var ldr2 = new MovieClipLoader();
      var lsnr2 = new Object();
      var ldr3 = new MovieClipLoader();
      var lsnr3 = new Object();
      _level2.inithp = new Array();
      i = 0;
      while (i < 12) {
        _level2.inithp[i] = _level2.nowhps[i + 1];
        ++i;
      }
      _level2.perfectrank = true;
      _level2.airhouFlg = false;
      _level2.divehouFlg = false;
      _level2.taihaids = new Array(-1, -1, -1, -1, -1, -1);
      _level2.taihaFlg = false;
      _level2.ftaihaFlg = false;
      _level2.noTaihaFlg = true;
      _level2.gekichinids = new Array(-1, -1, -1, -1, -1, -1);
      _level2.gekichinnum = new Array(-1, -1, -1, -1, -1, -1);
      _level2.gekichinFlg = false;
      _level2.taihastate = new Array(false, false, false, false, false, false);
      _level2.gekichinstate = new Array(false, false, false, false, false, false);
      i = 0;
      while (i < 6) {
        if (_level2.maxhps[i + 1] > 0 && _level1.getCondition(_level2.nowhps[i + 1], _level2.maxhps[i + 1]) > 2) {
          _level2.taihastate[i] = true;
        }
        ++i;
      }
      _level2.damagedebug = '';
      _level2.damageserverdebug = '';
      _level2.bossmap = false;
      if (_level1.cutin.mapInfo.api_event_id == 5) {
        _level2.bossmap = true;
      }
      _level2.gaugeExploding = false;
      mapHPData = null;
      if (_level2.isEvent() && _level2.bossmap) {
        mapHPData = {};
        mapHPData.mapHpMax = _level1.mapHpMax;
        mapHPData.mapHpNow = _level1.mapHpNow;
        mapHPData.mapHpNowFrom = _level1.mapHpNow;
        mapHPData.mapHpDmg = _level1.mapHpDmg;
        mapHPData.isBombed = false;
        mapHPData.isDisplay = false;
        _level2.tstrace('[イベントマップ]:' + mapHPData.mapHpNow + '/' + mapHPData.mapHpMax + '(係数' + mapHPData.mapHpDmg + ')');
        if (mapHPData.mapHpNow > 0) {
          _level2.mapHP_mc.gotoAndStop('disp');
          mapHPData.isDisplay = true;
        } else {
          _level2.mapHP_mc.gotoAndStop('off');
        }
      }
      if ((_level1.mapid == 3 && _level1.questpage == 3 || _level1.mapid == 1 && _level1.questpage == 4) && _level2.bossmap) {
        mapHPData = {};
        mapHPData.mapHpMax = 1 * _level1.required_defeat_count;
        mapHPData.mapHpNow = 1 * (_level1.required_defeat_count - _level1.defeat_count);
        mapHPData.mapHpNowFrom = 1 * (_level1.required_defeat_count - _level1.defeat_count);
        mapHPData.mapHpDmg = 1;
        mapHPData.isBombed = false;
        mapHPData.isDisplay = false;
        _level2.tstrace('[イベントマップ]:' + mapHPData.mapHpNow + '/' + mapHPData.mapHpMax + '(係数' + mapHPData.mapHpDmg + ')');
        if (mapHPData.mapHpNow > 0) {
          _level2.mapHP_mc.gotoAndStop('disp');
          mapHPData.isDisplay = true;
        } else {
          _level2.mapHP_mc.gotoAndStop('off');
        }
      }
      _level2.fighter_f = false;
      _level2.plane_counter_f = false;
      _level2.fighter_e = false;
      _level2.plane_counter_e = false;
      _level2.fplanecount = [0, 0, 0, 0, 0, 0];
      _level2.eplanecount = [0, 0, 0, 0, 0, 0];
      _level2.jin_friend = _level2.formation[0] * 10 - 1;
      _level2.jin_enemy = _level2.formation[1] * 10 - 1;
      fdam_total = [-1, 0, 0, 0, 0, 0, 0];
      edam_total = [-1, 0, 0, 0, 0, 0, 0];
      fydam_total = [-1, 0, 0, 0, 0, 0, 0];
      eydam_total = [-1, 0, 0, 0, 0, 0, 0];
      ship_kf = [-1, -1, -1, -1, -1, -1, -1];
      ship_lvf = [-1, -1, -1, -1, -1, -1, -1];
      fSlot = new Array();
      fKyouka = new Array();
      _level2.ship_name = new Array();
      _level2.tstrace('_level1.goDeck = ' + _level1.goDeck);
      i = 0;
      while (i < 6) {
        fSlot[i] = new Array();
        temp = _level1.getOldID(_level1.myDeck[_level1.goDeck].api_ship[i]);
        if (temp == -1) {
          ship_kf[i + 1] = -1;
        } else {
          ship_kf[i + 1] = _level1.FULL_my_ship[temp].api_ship_id + 1;
          ship_lvf[i + 1] = _level1.FULL_my_ship[temp].api_lv;
          fKyouka[i + 1] = _level1.FULL_my_ship[temp].api_kyouka;
          _level2.ship_name[i + 1] = _level1.FULL_my_ship[temp].api_name;
        }
        j = 0;
        if (ship_ke[i + 1] == -1) {
          _level2.ship_name[i + 7] = '';
        } else {
          if (_level1.npc_battle) {
            for (;;) {
              if (!(_level1.SYS_ship_data[j].api_id != ship_ke[i + 1] && j < 1000)) break;
              ++j;
            }
          } else {
            for (;;) {
              if (!(_level1.SYS_ship_data[j].api_id != ship_ke[i + 1] - 1 && j < 1000)) break;
              ++j;
            }
          }
          _level2.ship_name[i + 7] = _level1.SYS_ship_data[j].api_name;
        }
        j = 0;
        while (j < 4) {
          if (_level1.FULL_my_ship[temp] == undefined || _level1.FULL_my_ship[temp].api_slot == undefined || _level1.FULL_my_ship[temp].api_slot[j] == undefined || _level1.getOldID_i(_level1.FULL_my_ship[temp].api_slot[j]) == -1) {
            fSlot[i][j] = -1;
          } else {
            fSlot[i][j] = _level1.FULL_my_item[_level1.getOldID_i(_level1.FULL_my_ship[temp].api_slot[j])].api_slotitem_id;
          }
          ++j;
        }
        if (ship_kf[i + 1] != -1) {
          ++_level2.jin_friend;
        }
        if (ship_ke[i + 1] != -1) {
          ++_level2.jin_enemy;
        }
        ++i;
      }
      _level2.attackVoicesFlag = new Array(true, true, true, true, true, true);
      _level2.enemyAttackVoiceHolder = [undefined, undefined, undefined, undefined, undefined, undefined];
      _level2.enemyDamageVoiceHolder = [undefined, undefined, undefined, undefined, undefined, undefined];
      _level2.flagShip = ship_kf[1] - 1;
      i = 0;
      while (i < 6) {
        _level2.attackVoicesFlag[i] = Math.random() > 0.5;
        ++i;
      }
      _level2.attackVoicesFlag[0] = true;
      _level2.tstrace('_level2.ship_name = [' + _level2.ship_name + ']');
      _level2.tstrace('_level2.jin_friend = ' + _level2.jin_friend);
      _level2.tstrace('_level2.jin_enemy = ' + _level2.jin_enemy);
      i = 0;
      while (i < 6) {
        if (ship_kf[i + 1] != -1) {
          j = 0;
          while (j < 4) {
            if (fSlot[i][j] != undefined) {
              _level2.tstrace('fSlot[' + i + '][' + j + '] = ' + fSlot[i][j]);
            }
            ++j;
          }
        }
        ++i;
      }
      i = 0;
      while (i < 6) {
        if (ship_ke[i + 1] != -1) {
          j = 0;
          while (j < 4) {
            if (eSlot[i][j] != undefined) {
              _level2.tstrace('eSlot[' + i + '][' + j + '] = ' + eSlot[i][j]);
            }
            ++j;
          }
        }
        ++i;
      }
      i = 0;
      while (i < 6) {
        j = 0;
        while (j < 4) {
          if (_level1.SYS_slot_items[fSlot[i][j] - 1] != undefined) {
            if (_level1.SYS_slot_items[fSlot[i][j] - 1].api_type[2] == 6) {
              _level2.fighter_f = true;
            }
            _level2.tstrace('fSlot[' + i + '][' + j + '] = ' + fSlot[i][j]);
            _level2.tstrace('_level1.SYS_slot_items[fSlot[' + i + '][' + j + ']-1]["api_type"][2] = ' + _level1.SYS_slot_items[fSlot[i][j] - 1].api_type[2]);
          }
          if (_level1.SYS_slot_items[eSlot[i][j] - 1] != undefined) {
            if (_level1.SYS_slot_items[eSlot[i][j] - 1].api_type[2] == 6) {
              _level2.fighter_e = true;
            }
            _level2.tstrace('eSlot[' + i + '][' + j + '] = ' + eSlot[i][j]);
            _level2.tstrace('_level1.SYS_slot_items[eSlot[' + i + '][' + j + ']-1]["api_type"][2] = ' + _level1.SYS_slot_items[eSlot[i][j] - 1].api_type[2]);
          }
          ++j;
        }
        ++i;
      }
      _level2.tstrace('_level2.fighter_f = ' + _level2.fighter_f);
      _level2.tstrace('_level2.fighter_e = ' + _level2.fighter_e);
      b_s_hpf = 0;
      b_s_hpe = 0;
      i = 1;
      while (i <= 6) {
        if (maxhps[i] > -1) {
          b_s_hpf += nowhps[i];
        }
        if (maxhps[i + 6] > -1) {
          b_s_hpe += nowhps[i + 6];
        }
        ++i;
      }
      _level2.ftotalplanecount = 0;
      _level2.ftotalplanes = new Array();
      _level2.fplanecount = new Array(6);
      _level2.fplanes = new Array(6);
      i = 0;
      while (i < 6) {
        cnt = 0;
        _level2.fplanecount[i] = 0;
        _level2.fplanes[i] = new Array(-1, -1, -1, -1);
        if (ship_kf[i + 1] > 0) {
          j = 0;
          while (j < 4) {
            if (_level2.fSlot[i][j] > 0) {
              if (_level1.SYS_slot_items[_level2.fSlot[i][j] - 1] != undefined) {
                if (_level1.SYS_slot_items[_level2.fSlot[i][j] - 1].api_type[0] == 3 || _level1.SYS_slot_items[_level2.fSlot[i][j] - 1].api_type[2] == 11) {
                  _level2.fplanes[i][cnt] = _level1.SYS_slot_items[_level2.fSlot[i][j] - 1].api_id;
                  ++cnt;
                  ++_level2.fplanecount[i];
                  ++_level2.ftotalplanecount;
                  _level2.ftotalplanes.push('planef' + (i + 1) + '.plane.p' + _level2.fplanecount[i]);
                }
                _level2.tstrace('_level2.fSlot[' + i + '][' + j + '] = ' + _level2.fSlot[i][j]);
                _level2.tstrace('_level1.SYS_slot_items[_level2.fSlot[' + i + '][' + j + ']-1]["api_type"][0] = ' + _level1.SYS_slot_items[_level2.fSlot[i][j] - 1].api_type[0]);
                _level2.tstrace('_level1.SYS_slot_items[_level2.fSlot[' + i + '][' + j + ']-1]["api_type"][2] = ' + _level1.SYS_slot_items[_level2.fSlot[i][j] - 1].api_type[2]);
              }
            }
            ++j;
          }
        }
        _level2.tstrace('_level2.fplanecount[' + i + '] = ' + _level2.fplanecount[i]);
        _level2.tstrace('_level2.fplanes[' + i + '] = [' + _level2.fplanes[i] + ']');
        ++i;
      }
      _level2.tstrace('_level2.ftotalplanes = [' + _level2.ftotalplanes + ']');
      _level2.etotalplanecount = 0;
      _level2.etotalplanes = new Array();
      _level2.eplanecount = new Array(6);
      _level2.eplanes = new Array(6);
      _level2.epltyp = new Array(6);
      _level2.shien_epcnt = 0;
      i = 0;
      while (i < 6) {
        cnt = 0;
        _level2.eplanecount[i] = 0;
        _level2.eplanes[i] = new Array(-1, -1, -1, -1);
        _level2.epltyp[i] = new Array(-1, -1, -1, -1);
        if (ship_ke[i + 1] > 0) {
          j = 0;
          while (j < 4) {
            if (_level2.eSlot[i][j] > 0) {
              k = 0;
              for (;;) {
                if (!(_level1.SYS_slot_items[k].api_id != _level2.eSlot[i][j] && k < 1000)) break;
                ++k;
              }
              if (_level1.SYS_slot_items[k] != undefined) {
                if (_level1.npc_battle) {
                  if (_level1.SYS_slot_items[k].api_type[0] == 3 || _level1.SYS_slot_items[k].api_type[2] == 10) {
                    _level2.eplanes[i][cnt] = _level1.SYS_slot_items[k].api_id;
                    if (_level2.eplanes[i][cnt] == 518 || _level2.eplanes[i][cnt] == 521 || _level2.eplanes[i][cnt] == 525 || _level2.eplanes[i][cnt] == 526) {
                      _level2.epltyp[i][cnt] = 4;
                    } else {
                      if (_level2.eplanes[i][cnt] == 517 || _level2.eplanes[i][cnt] == 520 || _level2.eplanes[i][cnt] == 524) {
                        _level2.epltyp[i][cnt] = 3;
                      } else {
                        _level2.epltyp[i][cnt] = 2;
                      }
                    }
                    ++cnt;
                    if (_level2.eplanecount[i] == 0) {
                      ++_level2.shien_epcnt;
                    }
                    ++_level2.eplanecount[i];
                    ++_level2.etotalplanecount;
                    _level2.etotalplanes.push('planee' + (i + 1) + '.plane.p' + _level2.eplanecount[i]);
                  }
                } else {
                  if (_level1.SYS_slot_items[k].api_type[0] == 3 || _level1.SYS_slot_items[k].api_type[2] == 11) {
                    _level2.eplanes[i][cnt] = _level1.SYS_slot_items[k].api_id;
                    _level2.epltyp[i][cnt] = 1;
                    ++cnt;
                    ++_level2.eplanecount[i];
                    ++_level2.etotalplanecount;
                    _level2.etotalplanes.push('planee' + (i + 1) + '.plane.p' + _level2.eplanecount[i]);
                  }
                }
                _level2.tstrace('_level1.SYS_slot_items[' + k + ']["api_type"][0] = ' + _level1.SYS_slot_items[k].api_type[0]);
                _level2.tstrace('_level1.SYS_slot_items[' + k + ']["api_type"][2] = ' + _level1.SYS_slot_items[k].api_type[2]);
              }
            }
            ++j;
          }
        }
        _level2.tstrace('_level2.eplanecount[' + i + '] = ' + _level2.eplanecount[i]);
        _level2.tstrace('_level2.shien_epcnt = ' + _level2.shien_epcnt);
        _level2.tstrace('_level2.eplanes[' + i + '] = [' + _level2.eplanes[i] + ']');
        _level2.tstrace('_level2.epltyp[' + i + '] = [' + _level2.epltyp[i] + ']');
        ++i;
      }
      _level2.tstrace('_level2.etotalplanes = [' + _level2.etotalplanes + ']');
      _level2.ftaikuu = new Array(true, false, false, false, false, false);
      _level2.etaikuu = new Array(true, false, false, false, false, false);
      i = 1;
      while (i < 6) {
        if (ship_kf[i + 1] > 0) {
          j = 0;
          while (j < 4) {
            if (_level2.fSlot[i][j] > 0) {
              if (_level1.SYS_slot_items[_level2.fSlot[i][j] - 1] != undefined) {
                if (_level1.SYS_slot_items[_level2.fSlot[i][j] - 1].api_type[2] == 21) {
                  _level2.ftaikuu[i] = true;
                }
              }
            }
            ++j;
          }
        }
        _level2.tstrace('_level2.ftaikuu[' + i + '] = ' + _level2.ftaikuu[i]);
        if (ship_ke[i + 1] > 0) {
          j = 0;
          while (j < 4) {
            if (_level2.eSlot[i][j] > 0) {
              k = 0;
              for (;;) {
                if (!(_level1.SYS_slot_items[k].api_id != _level2.eSlot[i][j] && k < 1000)) break;
                ++k;
              }
              if (_level1.SYS_slot_items[k] != undefined) {
                if (_level1.SYS_slot_items[k].api_type[2] == 21) {
                  _level2.etaikuu[i] = true;
                }
              }
            }
            ++j;
          }
        }
        ++i;
      }
      _level2.supertaikuu = new Array(6);
      i = 0;
      while (i < 6) {
        _level2.supertaikuu[i] = false;
        if (ship_ke[i + 1] > 0) {
          j = 0;
          while (j < 4) {
            if (_level2.eSlot[i][j] > 0) {
              if (_level1.SYS_slot_items[k] != undefined) {
                if (_level2.fSlot[i][j] == 48) {
                  _level2.supertaikuu[i] = true;
                }
                if (_level2.fSlot[i][j] == 9) {
                  _level2.supertaikuu[i] = true;
                }
                if (_level2.fSlot[i][j] == 35) {
                  _level2.supertaikuu[i] = true;
                }
                if (_level2.fSlot[i][j] == 3) {
                  _level2.supertaikuu[i] = true;
                }
                if (_level2.fSlot[i][j] == 10) {
                  _level2.supertaikuu[i] = true;
                }
              }
            }
            ++j;
          }
        }
        _level2.tstrace('_level2.supertaikuu[' + i + '] = ' + _level2.supertaikuu[i]);
        ++i;
      }
    }
    _level2.tshipnum = null;
    if (_level2.isEvent() && _level2.bossmap && _level2.mapHPData.isDisplay) {
      _level2.mapHP_mc.gotoAndStop('disp');
    }
    if (mapHPData != null && (_level2.isEvent() || _level1.questpage == 3 && _level1.mapid == 3 || _level1.questpage == 4 && _level1.mapid == 1 || _level1.questpage == 4 && _level1.mapid == 2) && _level2.bossmap && mapHPData.isDisplay) {
      if (mapHPData.mapHpNow > 0) {
        _level2.mapHP_mc.gotoAndStop('disp');
      } else {
        if (mapHPData.mapHpNowFrom > 0) {
          if (mapHPData.isBombed) {
            _level2.mapHP_mc.gotoAndStop('off');
          } else {
            _level2.mapHP_mc.gotoAndStop('zero2');
          }
        } else {
          _level2.mapHP_mc.gotoAndStop('off');
        }
      }
    } else {
      _level2.mapHP_mc.gotoAndStop('off');
    }
  }

  frame 384 {
    _level2.scene = _level2.SCENE_YASEN;
    yat = at_list.length;
    th = 0;
    disp = 'atk = [';
    atk = new Array();
    i = 0;
    while (i < at_list.length) {
      atk[i] = at_list[i];
      disp += at_list[i] + ',';
      ++i;
    }
    disp += ']\rdef = [[';
    def = new Array();
    i = 0;
    while (i < df_list.length) {
      def[i] = new Array();
      def[i] = df_list[i];
      disp += df_list[i];
      disp += '],[';
      ++i;
    }
    disp += ']]\rwea = [[';
    wea = new Array();
    i = 0;
    while (i < si_list.length) {
      wea[i] = new Array();
      wea[i] = si_list[i];
      disp += si_list[i];
      disp += '],[';
      ++i;
    }
    disp += ']]\rdam = [[';
    dam = new Array();
    i = 0;
    while (i < damage.length) {
      dam[i] = new Array();
      dam[i] = [4, 4, 4];
      disp += damage_hougeki[i];
      disp += '],[';
      ++i;
    }
    disp += ']]';
    i = 1;
    while (i <= 6) {
      edam_total[def[i]] += dam[i];
      fdam_total[def[i + 6]] += dam[i + 6];
      fydam_total[i] = dam[i];
      eydam_total[i] = dam[i + 6];
      ++i;
    }
    if (!_level2.yasen_special && !_level2.yasen_reversal) {
      _level2.rader.gotoAndStop(11);
      _level2.rader.wave.gotoAndPlay('wloop');
      _level2.rader.wave2.gotoAndPlay('wloop');
      _level2.rader.rader_f.gotoAndStop('end');
      _level2.rader.rader_e.gotoAndStop('end');
      _level2.rader.rader_f.rd.gotoAndStop(_level2.jin_friend);
      _level2.rader.rader_e.rd.gotoAndStop(_level2.jin_enemy);
    }
    _level2.banldr1 = new MovieClipLoader();
    _level2.banlsnr1 = new Object();
    _level2.banid1 = ship_kf[1] - 1;
    _level2.banldr1.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + _level2.banid1 + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.banid1)].api_version, f1.ship.girl);
    _level2.banldr1.addListener(_level2.banlsnr1);
    _level2.banlsnr1.onLoadInit = function () {
      _level2.tstrace('Loading character ' + _level2.banid1 + ' banner artwork');
      if (_level2.taihastate[0]) {
        _level2.f1.ship.girl.gotoAndStop(3);
        _level2.f1.ship.girl._x = 0;
        _level2.f1.ship.girl._y = 0;
      } else {
        _level2.f1.ship.girl.gotoAndStop(2);
        _level2.f1.ship.girl._x = 0;
        _level2.f1.ship.girl._y = 0;
      }
      _level2.banldr1.removeListener(_level2.banlsnr1);
    };

    _level2.banlsnr1.onLoadError = function () {
      _level2.tstrace('Failed to load character ' + _level2.banid1 + ' banner artwork');
      _level2.f1.ship.attachMovie('nodatabanner', 'girl', 1);
      _level2.f1.ship.girl._x = 0;
      _level2.f1.ship.girl._y = 0;
      _level2.banldr1.removeListener(_level2.banlsnr1);
    };

    if (ship_kf[2] != -1) {
      _level2.banldr2 = new MovieClipLoader();
      _level2.banlsnr2 = new Object();
      _level2.banid2 = ship_kf[2] - 1;
      _level2.banldr2.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + _level2.banid2 + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.banid2)].api_version, f2.ship.girl);
      _level2.banldr2.addListener(_level2.banlsnr2);
      _level2.banlsnr2.onLoadInit = function () {
        _level2.tstrace('Loading character ' + _level2.banid2 + ' banner artwork');
        if (_level2.taihastate[1]) {
          _level2.f2.ship.girl.gotoAndStop(3);
          _level2.f2.ship.girl._x = 0;
          _level2.f2.ship.girl._y = 0;
        } else {
          _level2.f2.ship.girl.gotoAndStop(2);
          _level2.f2.ship.girl._x = 0;
          _level2.f2.ship.girl._y = 0;
        }
        _level2.banldr2.removeListener(_level2.banlsnr2);
      };

      _level2.banlsnr2.onLoadError = function () {
        _level2.tstrace('Failed to load character ' + _level2.banid2 + ' banner artwork');
        _level2.f2.ship.attachMovie('nodatabanner', 'girl', 1);
        _level2.f2.ship.girl._x = 0;
        _level2.f2.ship.girl._y = 0;
        _level2.banldr2.removeListener(_level2.banlsnr2);
      };

    }
    if (ship_kf[3] != -1) {
      _level2.banldr3 = new MovieClipLoader();
      _level2.banlsnr3 = new Object();
      _level2.banid3 = ship_kf[3] - 1;
      _level2.banldr3.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + _level2.banid3 + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.banid3)].api_version, f3.ship.girl);
      _level2.banldr3.addListener(_level2.banlsnr3);
      _level2.banlsnr3.onLoadInit = function () {
        _level2.tstrace('Loading character ' + _level2.banid3 + ' banner artwork');
        if (_level2.taihastate[2]) {
          _level2.f3.ship.girl.gotoAndStop(3);
          _level2.f3.ship.girl._x = 0;
          _level2.f3.ship.girl._y = 0;
        } else {
          _level2.f3.ship.girl.gotoAndStop(2);
          _level2.f3.ship.girl._x = 0;
          _level2.f3.ship.girl._y = 0;
        }
        _level2.banldr3.removeListener(_level2.banlsnr3);
      };

      _level2.banlsnr3.onLoadError = function () {
        _level2.tstrace('Failed to load character ' + _level2.banid3 + ' banner artwork');
        _level2.f3.ship.attachMovie('nodatabanner', 'girl', 1);
        _level2.f3.ship.girl._x = 0;
        _level2.f3.ship.girl._y = 0;
        _level2.banldr3.removeListener(_level2.banlsnr3);
      };

    }
    if (ship_kf[4] != -1) {
      _level2.banldr4 = new MovieClipLoader();
      _level2.banlsnr4 = new Object();
      _level2.banid4 = ship_kf[4] - 1;
      _level2.banldr4.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + _level2.banid4 + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.banid4)].api_version, f4.ship.girl);
      _level2.banldr4.addListener(_level2.banlsnr4);
      _level2.banlsnr4.onLoadInit = function () {
        _level2.tstrace('Loading character ' + _level2.banid4 + ' banner artwork');
        if (_level2.taihastate[3]) {
          _level2.f4.ship.girl.gotoAndStop(3);
          _level2.f4.ship.girl._x = 0;
          _level2.f4.ship.girl._y = 0;
        } else {
          _level2.f4.ship.girl.gotoAndStop(2);
          _level2.f4.ship.girl._x = 0;
          _level2.f4.ship.girl._y = 0;
        }
        _level2.banldr4.removeListener(_level2.banlsnr4);
      };

      _level2.banlsnr4.onLoadError = function () {
        _level2.tstrace('Failed to load character ' + _level2.banid4 + ' banner artwork');
        _level2.f4.ship.attachMovie('nodatabanner', 'girl', 1);
        _level2.f4.ship.girl._x = 0;
        _level2.f4.ship.girl._y = 0;
        _level2.banldr4.removeListener(_level2.banlsnr4);
      };

    }
    if (ship_kf[5] != -1) {
      _level2.banldr5 = new MovieClipLoader();
      _level2.banlsnr5 = new Object();
      _level2.banid5 = ship_kf[5] - 1;
      _level2.banldr5.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + _level2.banid5 + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.banid5)].api_version, f5.ship.girl);
      _level2.banldr5.addListener(_level2.banlsnr5);
      _level2.banlsnr5.onLoadInit = function () {
        _level2.tstrace('Loading character ' + _level2.banid5 + ' banner artwork');
        if (_level2.taihastate[4]) {
          _level2.f5.ship.girl.gotoAndStop(3);
          _level2.f5.ship.girl._x = 0;
          _level2.f5.ship.girl._y = 0;
        } else {
          _level2.f5.ship.girl.gotoAndStop(2);
          _level2.f5.ship.girl._x = 0;
          _level2.f5.ship.girl._y = 0;
        }
        _level2.banldr5.removeListener(_level2.banlsnr5);
      };

      _level2.banlsnr5.onLoadError = function () {
        _level2.tstrace('Failed to load character ' + _level2.banid5 + ' banner artwork');
        _level2.f5.ship.attachMovie('nodatabanner', 'girl', 1);
        _level2.f5.ship.girl._x = 0;
        _level2.f5.ship.girl._y = 0;
        _level2.banldr5.removeListener(_level2.banlsnr5);
      };

    }
    if (ship_kf[6] != -1) {
      _level2.banldr6 = new MovieClipLoader();
      _level2.banlsnr6 = new Object();
      _level2.banid6 = ship_kf[6] - 1;
      _level2.banldr6.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + _level2.banid6 + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.banid6)].api_version, f6.ship.girl);
      _level2.banldr6.addListener(_level2.banlsnr6);
      _level2.banlsnr6.onLoadInit = function () {
        _level2.tstrace('Loading character ' + _level2.banid6 + ' banner artwork');
        if (_level2.taihastate[5]) {
          _level2.f6.ship.girl.gotoAndStop(3);
          _level2.f6.ship.girl._x = 0;
          _level2.f6.ship.girl._y = 0;
        } else {
          _level2.f6.ship.girl.gotoAndStop(2);
          _level2.f6.ship.girl._x = 0;
          _level2.f6.ship.girl._y = 0;
        }
        _level2.banldr6.removeListener(_level2.banlsnr6);
      };

      _level2.banlsnr6.onLoadError = function () {
        _level2.tstrace('Failed to load character ' + _level2.banid6 + ' banner artwork');
        _level2.f6.ship.attachMovie('nodatabanner', 'girl', 1);
        _level2.f6.ship.girl._x = 0;
        _level2.f6.ship.girl._y = 0;
        _level2.banldr6.removeListener(_level2.banlsnr6);
      };

    }
    _level2.banldr7 = new MovieClipLoader();
    _level2.banlsnr7 = new Object();
    _level2.banid7 = ship_ke[1];
    if (!_level1.npc_battle) {
      --_level2.banid7;
    }
    _level2.banldr7.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + _level2.banid7 + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.banid7)].api_version, e1.ship.girl);
    _level2.banldr7.addListener(_level2.banlsnr7);
    _level2.banlsnr7.onLoadInit = function () {
      _level2.tstrace('Loading character ' + _level2.banid7 + ' banner artwork');
      _level2.e1.ship.girl.gotoAndStop(2);
      _level2.e1.ship.girl._x = 0;
      _level2.e1.ship.girl._y = 0;
      _level2.banldr7.removeListener(_level2.banlsnr7);
    };

    _level2.banlsnr7.onLoadError = function () {
      _level2.tstrace('Failed to load character ' + _level2.banid7 + ' banner artwork');
      _level2.e1.ship.attachMovie('nodatabanner', 'girl', 1);
      _level2.e1.ship.girl._x = 0;
      _level2.e1.ship.girl._y = 0;
      _level2.banldr7.removeListener(_level2.banlsnr7);
    };

    if (ship_ke[2] != -1) {
      _level2.banldr8 = new MovieClipLoader();
      _level2.banlsnr8 = new Object();
      _level2.banid8 = ship_ke[2];
      if (!_level1.npc_battle) {
        --_level2.banid8;
      }
      _level2.banldr8.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + _level2.banid8 + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.banid8)].api_version, e2.ship.girl);
      _level2.banldr8.addListener(_level2.banlsnr8);
      _level2.banlsnr8.onLoadInit = function () {
        _level2.tstrace('Loading character ' + _level2.banid8 + ' banner artwork');
        _level2.e2.ship.girl.gotoAndStop(2);
        _level2.e2.ship.girl._x = 0;
        _level2.e2.ship.girl._y = 0;
        _level2.banldr8.removeListener(_level2.banlsnr8);
      };

      _level2.banlsnr8.onLoadError = function () {
        _level2.tstrace('Failed to load character ' + _level2.banid8 + ' banner artwork');
        _level2.e2.ship.attachMovie('nodatabanner', 'girl', 1);
        _level2.e2.ship.girl._x = 0;
        _level2.e2.ship.girl._y = 0;
        _level2.banldr8.removeListener(_level2.banlsnr8);
      };

    }
    if (ship_ke[3] != -1) {
      _level2.banldr9 = new MovieClipLoader();
      _level2.banlsnr9 = new Object();
      _level2.banid9 = ship_ke[3];
      if (!_level1.npc_battle) {
        --_level2.banid9;
      }
      _level2.banldr9.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + _level2.banid9 + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.banid9)].api_version, e3.ship.girl);
      _level2.banldr9.addListener(_level2.banlsnr9);
      _level2.banlsnr9.onLoadInit = function () {
        _level2.tstrace('Loading character ' + _level2.banid9 + ' banner artwork');
        _level2.e3.ship.girl.gotoAndStop(2);
        _level2.e3.ship.girl._x = 0;
        _level2.e3.ship.girl._y = 0;
        _level2.banldr9.removeListener(_level2.banlsnr9);
      };

      _level2.banlsnr9.onLoadError = function () {
        _level2.tstrace('Failed to load character ' + _level2.banid9 + ' banner artwork');
        _level2.e3.ship.attachMovie('nodatabanner', 'girl', 1);
        _level2.e3.ship.girl._x = 0;
        _level2.e3.ship.girl._y = 0;
        _level2.banldr9.removeListener(_level2.banlsnr9);
      };

    }
    if (ship_ke[4] != -1) {
      _level2.banldr10 = new MovieClipLoader();
      _level2.banlsnr10 = new Object();
      _level2.banid10 = ship_ke[4];
      if (!_level1.npc_battle) {
        --_level2.banid10;
      }
      _level2.banldr10.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + _level2.banid10 + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.banid10)].api_version, e4.ship.girl);
      _level2.banldr10.addListener(_level2.banlsnr10);
      _level2.banlsnr10.onLoadInit = function () {
        _level2.tstrace('Loading character ' + _level2.banid10 + ' banner artwork');
        _level2.e4.ship.girl.gotoAndStop(2);
        _level2.e4.ship.girl._x = 0;
        _level2.e4.ship.girl._y = 0;
        _level2.banldr10.removeListener(_level2.banlsnr10);
      };

      _level2.banlsnr10.onLoadError = function () {
        _level2.tstrace('Failed to load character ' + _level2.banid10 + ' banner artwork');
        _level2.e4.ship.attachMovie('nodatabanner', 'girl', 1);
        _level2.e4.ship.girl._x = 0;
        _level2.e4.ship.girl._y = 0;
        _level2.banldr10.removeListener(_level2.banlsnr10);
      };

    }
    if (ship_ke[5] != -1) {
      _level2.banldr11 = new MovieClipLoader();
      _level2.banlsnr11 = new Object();
      _level2.banid11 = ship_ke[5];
      if (!_level1.npc_battle) {
        --_level2.banid11;
      }
      _level2.banldr11.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + _level2.banid11 + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.banid11)].api_version, e5.ship.girl);
      _level2.banldr11.addListener(_level2.banlsnr11);
      _level2.banlsnr11.onLoadInit = function () {
        _level2.tstrace('Loading character ' + _level2.banid11 + ' banner artwork');
        _level2.e5.ship.girl.gotoAndStop(2);
        _level2.e5.ship.girl._x = 0;
        _level2.e5.ship.girl._y = 0;
        _level2.banldr11.removeListener(_level2.banlsnr11);
      };

      _level2.banlsnr11.onLoadError = function () {
        _level2.tstrace('Failed to load character ' + _level2.banid11 + ' banner artwork');
        _level2.e5.ship.attachMovie('nodatabanner', 'girl', 1);
        _level2.e5.ship.girl._x = 0;
        _level2.e5.ship.girl._y = 0;
        _level2.banldr11.removeListener(_level2.banlsnr11);
      };

    }
    if (ship_ke[6] != -1) {
      _level2.banldr12 = new MovieClipLoader();
      _level2.banlsnr12 = new Object();
      _level2.banid12 = ship_ke[6];
      if (!_level1.npc_battle) {
        --_level2.banid12;
      }
      _level2.banldr12.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + _level2.banid12 + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.banid12)].api_version, e6.ship.girl);
      _level2.banldr12.addListener(_level2.banlsnr12);
      _level2.banlsnr12.onLoadInit = function () {
        _level2.tstrace('Loading character ' + _level2.banid12 + ' banner artwork');
        _level2.e6.ship.girl.gotoAndStop(2);
        _level2.e6.ship.girl._x = 0;
        _level2.e6.ship.girl._y = 0;
        _level2.banldr12.removeListener(_level2.banlsnr12);
      };

      _level2.banlsnr12.onLoadError = function () {
        _level2.tstrace('Failed to load character ' + _level2.banid12 + ' banner artwork');
        _level2.e6.ship.attachMovie('nodatabanner', 'girl', 1);
        _level2.e6.ship.girl._x = 0;
        _level2.e6.ship.girl._y = 0;
        _level2.banldr12.removeListener(_level2.banlsnr12);
      };

    }
  }

  frame 393 {
    i = 1;
    while (i <= 6) {
      tellTarget (''f' + i') {
        jin = 0;
        shipid = _level2.i;
        if (!_level2.yasen_special && !_level2.yasen_reversal) {
          ship._visible = true;
          gotoAndStop('default');
        }
      }
      if (ship_kf[i] == -1) {
        _level2['f' + i]._visible = false;
      } else {
        tellTarget (''f' + i + '.ship'') {
          sid = _level2.ship_kf[_level2.i] + 10000;
          contr.gotoAndPlay(4);
          maxhps = _level2.maxhps[_level2.i];
          nowhps = _level2.nowhps[_level2.i];
        }
      }
      if (ship_ke[i] == -1) {
        _level2['e' + i]._visible = false;
      } else {
        tellTarget (''e' + i') {
          jin = 1;
          shipid = _level2.i + 6;
          if (!_level2.yasen_special && !_level2.yasen_reversal) {
            ship._visible = true;
            gotoAndStop('default');
          }
        }
      }
      tellTarget (''e' + i + '.ship'') {
        sid = _level2.ship_ke[_level2.i] + 10000;
        contr.gotoAndPlay(4);
        maxhps = _level2.maxhps[_level2.i + 6];
        nowhps = _level2.nowhps[_level2.i + 6];
      }
      j = 0;
      for (;;) {
        if (!(ship_kf[i] > 0 && _level1.SYS_ship_data[j].api_id != ship_kf[i] - 1 && j < 1000)) break;
        ++j;
      }
      typ = _level1.SYS_ship_data[j].api_stype;
      _level2.tstrace('j = ' + j);
      _level2.tstrace('typ = ' + typ);
      if (typ == 13 || typ == 14) {
        tellTarget (''f' + i + '.ship.submarine'') {
          gotoAndStop('floats');
        }
      }
      _level2.tstrace('ship_ke[' + i + '] = ' + ship_ke[i]);
      j = 0;
      if (_level1.npc_battle) {
        for (;;) {
          if (!(ship_ke[i] > 0 && _level1.SYS_ship_data[j].api_id != ship_ke[i] && j < 1000)) break;
          ++j;
        }
      } else {
        for (;;) {
          if (!(ship_ke[i] > 0 && _level1.SYS_ship_data[j].api_id != ship_ke[i] - 1 && j < 1000)) break;
          ++j;
        }
      }
      typ = _level1.SYS_ship_data[j].api_stype;
      _level2.tstrace('j = ' + j);
      _level2.tstrace('typ = ' + typ);
      if (typ == 13 || typ == 14) {
        tellTarget (''e' + i + '.ship.submarine'') {
          gotoAndStop('floats');
        }
      }
      eval('bubble' + i)._x = (eval('f' + i))._x;
      eval('bubble' + i)._y = (eval('f' + i))._y;
      eval('bubble' + (i + 6))._x = (eval('e' + i))._x;
      eval('bubble' + (i + 6))._y = (eval('e' + i))._y;
      ++i;
    }
    if (_level2.yasen_special || _level2.yasen_reversal) {
      shutters_sp.play();
      _level2.rader.gotoAndStop(1);
      _level2.rader.rader_e.gotoAndStop(1);
      _level2.rader.rader_f.gotoAndStop(1);
    } else {
      chu.play();
    }
    stop();
  }

  frame 395 {
    if (_level2.yasen_reversal && _level2.isEvent() && _level2.bossmap) {
      if (_level2.ship_ke[1] == eventbossids[0]) {
        stop();
        boss_insert = true;
        boss.tp = 0;
        _level2.bosstp = 0;
      } else {
        if (_level2.ship_ke[1] == eventbossids[1]) {
          stop();
          boss_insert = true;
          boss.tp = 1;
          _level2.bosstp = 1;
        }
      }
    } else {
      boss.stop();
    }
  }

  frame 397 {
    _level2.playVoice(_level2.flagShip, 18);
    if (!_level2.isEvent() && (!_level2.bossmap || _level2.yasen_reversal || _level2.yasen_special)) {
      _level2.playBGM('2_battle2_11.mp3', true, _level1.bgmVolume);
    }
  }

  movieClip 1464  {

    frame 1 {
      stop();
    }
  }

  movieClip 1465  {

    frame 1 {
      bi = 0;
      var param = new flash.filters.BlurFilter();
      aspd = 1;
    }

    frame 3 {
      ch2.gotoAndStop(2);
    }

    frame 5 {
      ch3.gotoAndStop(3);
    }

    frame 7 {
      _level2.playSFX('battle_don2.mp3');
      ch4.gotoAndStop(4);
    }

    frame 9 {
      _level2.playSFX('battle_don2.mp3');
      ch5.gotoAndStop(5);
    }

    frame 11 {
      _level2.playSFX('battle_don2.mp3');
      ch6.gotoAndStop(6);
    }

    frame 13 {
      _level2.playSFX('battle_don2.mp3');
      ch7.gotoAndStop(7);
    }

    frame 15 {
      _level2.playSFX('battle_don2.mp3');
      ch8.gotoAndStop(8);
    }

    frame 17 {
      _level2.playSFX('battle_don2.mp3');
      ch9.gotoAndStop(9);
    }

    frame 19 {
      _level2.playSFX('battle_don2.mp3');
    }

    frame 21 {
      _level2.playSFX('battle_don2.mp3');
    }

    frame 23 {
      _level2.playSFX('battle_don2.mp3');
    }

    frame 37 {
      _level2.playSFX('battle_night.mp3');
    }

    frame 38 {
      i = 1;
      while (i <= 9) {
        eval('ch' + i)._alpha = (eval('ch' + i))._alpha - aspd * 3;
        eval('ch' + i)._xscale = (eval('ch' + i))._xscale + aspd * 3;
        eval('ch' + i)._yscale = (eval('ch' + i))._yscale + aspd * 3;
        ++i;
      }
      ch1._x -= 11;
      ch1._y -= 3.5;
      ch2._x -= 5.5;
      ch2._y -= 3.5;
      ch3._y -= 3.5;
      ch4._x += 5.5;
      ch4._y -= 3.5;
      ch5._x += 11;
      ch5._y -= 3.5;
      ch6._x -= 8.25;
      ch6._y += 3.5;
      ch7._x -= 2.75;
      ch7._y += 3.5;
      ch8._x += 2.75;
      ch8._y += 3.5;
      ch9._x += 8.25;
      ch9._y += 3.5;
      _level2.maps._alpha += aspd * 3;
      bi += aspd;
    }

    frame 39 {
      if (bi == 20 && (_level2.yasen_special || _level2.yasen_reversal)) {
        _level2.rader.gotoAndStop(2);
        _level2.rader.wave2.gotoAndPlay('wloop');
        _level2.rader.wave.gotoAndPlay('wloop');
        _level2.rader.rader_e.play();
        _level2.rader.rader_f.play();
      }
      if (bi < 40) {
        gotoAndPlay('bl_loop');
      } else {
        stop();
        _level2.maps._alpha = 100;
        _level2.play();
        _level2.upperbar.nex = 10;
        _level2.upperbar.play();
      }
    }
  }

  frame 398 {
    stop();
  }

  frame 400 {
    j = 0;
    for (;;) {
      if (!(ship_kf[i] > 0 && _level1.SYS_ship_data[j].api_id != ship_kf[i] - 1 && j < 1000)) break;
      ++j;
    }
    typ = _level1.SYS_ship_data[j - 1].api_stype;
    _level2.tstrace('j = ' + j);
    _level2.tstrace('typ = ' + typ);
    if (typ == 13 || typ == 14) {
      tellTarget (''f' + i + '.ship.submarine'') {
        play();
      }
      tellTarget (''bubble' + i') {
        play();
      }
    }
    j = 0;
    if (_level1.npc_battle) {
      for (;;) {
        if (!(ship_ke[i] > 0 && _level1.SYS_ship_data[j].api_id != ship_ke[i] && j < 1000)) break;
        ++j;
      }
    } else {
      for (;;) {
        if (!(ship_ke[i] > 0 && _level1.SYS_ship_data[j].api_id != ship_ke[i] - 1 && j < 1000)) break;
        ++j;
      }
    }
    typ = _level1.SYS_ship_data[j].api_stype;
    _level2.tstrace('j = ' + j);
    _level2.tstrace('typ = ' + typ);
    if (typ == 13 || typ == 14) {
      tellTarget (''e' + i + '.ship.submarine'') {
        play();
      }
      tellTarget (''bubble' + (i + 6)') {
        play();
      }
    }
  }

  frame 401 {
    if (_level2.yasen_special || _level2.yasen_reversal) {
      i = 1;
    }
  }

  frame 402 {
    _level2.tstrace('Frame: yasen_comein ' + i);
    if (_level2.yasen_special || _level2.yasen_reversal) {
      tellTarget (''f' + i') {
        gotoAndPlay('comein');
      }
      tellTarget (''e' + i') {
        gotoAndStop('comein');
      }
      ++i;
    }
  }

  frame 405 {
    if (_level2.yasen_special || _level2.yasen_reversal) {
      if (i <= 6) {
        gotoAndPlay('yasen_comein');
      } else {
        _level2.sokuhanFlag = false;
        _level2.rader.rader_f.gotoAndPlay('disp');
        _level2.rader.rader_e.gotoAndPlay(21);
        _level2.rader.wave.gotoAndPlay('wloop');
        _level2.rader.wave2.gotoAndPlay('wloop');
        _level2.rader.rader_f.rd.gotoAndStop(_level2.jin_friend);
        _level2.rader.rader_e.rd.gotoAndStop(_level2.jin_enemy);
      }
    }
  }

  frame 411 {
    dispout.text = 'at_list = [' + at_list + ']' + '\n' + 'df_list = [' + df_list + ']' + '\n' + 'sp_list = [' + sp_list + ']' + '\n' + 'd_list = [';
    i = 0;
    while (i < d_list.length) {
      dispout.text += '[' + d_list[i] + ']';
      ++i;
    }
    dispout.text += ']';
    dispout._visible = false;
  }

  frame 411 {
    _level2.tstrace('Frame: yasen_loop');
  }

  frame 416 {
    if (_level2.gekichin_cut._currentframe != 1 || _level2.taiha_cut._currentframe != 1) {
      stop();
    }
  }

  frame 422 {
    chouFlag = false;
    chouFlag2 = false;
    raiflag = false;
    i = 1;
    while (i <= 6) {
      tellTarget (''f' + i') {
        gotoAndStop('default');
      }
      tellTarget (''e' + i') {
        gotoAndStop('default');
      }
      ++i;
    }
    ++th;
    _level2.tstrace('夜戦ループ開始');
    if (th >= yat) {
      gotoAndPlay('yasen_finish');
    } else {
      wepID = _level2.wea[th];
      if (_level2.sp_list[th] == 0) {
        j = 0;
        if (_level2.at_list[th] <= 6) {
          for (;;) {
            if (!(_level1.SYS_ship_data[j].api_id != ship_kf[_level2.at_list[th]] - 1 && j < 1000)) break;
            ++j;
          }
        } else {
          if (_level1.npc_battle) {
            for (;;) {
              if (!(_level1.SYS_ship_data[j].api_id != ship_ke[_level2.at_list[th] - 6] && j < 1000)) break;
              ++j;
            }
          } else {
            for (;;) {
              if (!(_level1.SYS_ship_data[j].api_id != ship_ke[_level2.at_list[th] - 6] - 1 && j < 1000)) break;
              ++j;
            }
          }
        }
        typ = _level1.SYS_ship_data[j].api_stype;
        _level2.tstrace('typ = ' + typ);
        if (_level1.SYS_slot_items[si_list[th][0] - 1].api_type[0] == 1) {
          if (typ == 13 || typ == 14) {
            gotoAndPlay('yasen_rai');
          } else {
            gotoAndPlay('yasen_hou');
          }
        } else {
          if (_level1.SYS_slot_items[si_list[th][0] - 1].api_type[0] == 2) {
            gotoAndPlay('yasen_rai');
          } else {
            if (typ == 13 || typ == 14) {
              gotoAndPlay('yasen_rai');
            } else {
              if (typ == 7 || typ == 11 || typ == 18) {
                gotoAndStop('yasen_aerial');
              }
            }
          }
        }
      } else {
        if (_level2.sp_list[th] == 1) {
          gotoAndPlay('yasen_ren');
        } else {
          if (_level2.sp_list[th] >= 2) {
            gotoAndPlay('superAttack');
          }
        }
      }
    }
  }

  frame 424 {
    _level2.tstrace('Frame: yasen_hou');
    i = 1;
    while (i <= 6) {
      tellTarget (''f' + i') {
        gotoAndStop('default');
      }
      tellTarget (''e' + i') {
        gotoAndStop('default');
      }
      ++i;
    }
  }

  frame 425 {
    attacker = _level2.at_list[th];
    deffencer = _level2.df_list[th][0];
    atkWeapon = si_list[th][0];
    crit = _level2.cl_list[th][0] == 2;
    miss = _level2.cl_list[th][0] == 0;
    hou_dam = _level2.d_list[th][0];
    debugTxt.text = '通常砲撃 ' + attacker + ' > ' + deffencer + ' (' + hou_dam + ')';
    cutin_powup = new Array();
    cutin_slot = new Array();
    cutin_name = _level2.ship_name[attacker];
    cutin_hp = Math.floor((nowhps[attacker] * 1 / maxhps[attacker]) * 100);
    if (attacker > 6) {
      cutin_slot = eSlot[attacker - 7];
      cutin_lv = ship_lve[attacker - 6];
      cutin_powup = _level2.eParam[attacker - 6];
      j = 0;
      if (_level1.npc_battle) {
        for (;;) {
          if (!(_level1.SYS_ship_data[j].api_id != ship_ke[attacker - 6] && j < 1000)) break;
          ++j;
        }
      } else {
        for (;;) {
          if (!(_level1.SYS_ship_data[j].api_id != ship_ke[attacker - 6] - 1 && j < 1000)) break;
          ++j;
        }
      }
      typ = _level1.SYS_ship_data[j].api_stype;
      k = 0;
      for (;;) {
        if (!(_level1.SYS_ship_data[k].api_id != ship_kf[deffencer] - 1 && k < 1000)) break;
        ++k;
      }
      typ_target = _level1.SYS_ship_data[k].api_stype;
      _level2.tstrace('j=' + j + ' typ=' + typ + ' k=' + k + ' typ_target=' + typ_target);
      if (typ_target == 13 || typ_target == 14) {
        if (typ == 6 || typ == 10 || typ == 14 || typ == 16 || typ == 17) {
          gotoAndStop('yasen_aerial');
        } else {
          gotoAndPlay('yasen_bakurai');
        }
      } else {
        tellTarget (''e' + (attacker - 6)') {
          gotoAndPlay('attack_e');
        }
        if (hou_dam == Math.floor(hou_dam)) {
          tellTarget (''f' + deffencer') {
            gotoAndPlay('attack_f');
          }
        } else {}
      }
      hougeki_cutin2.attacker_id = attacker - 6;
      hougeki_cutin2.ids = ship_ke[attacker - 6];
      hougeki_cutin2.gotoAndPlay('hou');
    } else {
      cutin_slot = fSlot[attacker - 1];
      cutin_lv = ship_lvf[attacker];
      cutin_powup = _level2.fParam[attacker];
      j = 0;
      for (;;) {
        if (!(_level1.SYS_ship_data[j].api_id != ship_kf[attacker] - 1 && j < 1000)) break;
        ++j;
      }
      typ = _level1.SYS_ship_data[j].api_stype;
      k = 0;
      if (_level1.npc_battle) {
        for (;;) {
          if (!(_level1.SYS_ship_data[k].api_id != ship_ke[deffencer - 6] && k < 1000)) break;
          ++k;
        }
      } else {
        for (;;) {
          if (!(_level1.SYS_ship_data[k].api_id != ship_ke[deffencer - 6] - 1 && k < 1000)) break;
          ++k;
        }
      }
      typ_target = _level1.SYS_ship_data[k].api_stype;
      if (typ_target == 13 || typ_target == 14) {
        if (typ == 6 || typ == 10 || typ == 14 || typ == 16 || typ == 17) {
          gotoAndStop('yasen_aerial');
        } else {
          gotoAndPlay('yasen_bakurai');
        }
      } else {
        tellTarget (''f' + attacker') {
          gotoAndPlay('attack_f');
        }
        if (hou_dam == Math.floor(hou_dam)) {
          tellTarget (''e' + (deffencer - 6)') {
            gotoAndPlay('attack_e');
          }
        } else {}
      }
      hougeki_cutin.ids = ship_kf[attacker];
      hougeki_cutin.gotoAndPlay('hou');
    }
    stop();
  }

  frame 426 {
    if (hou_dam < 16) {
      bp = 1;
    } else {
      if (hou_dam < 40) {
        bp = 2;
      } else {
        bp = 3;
      }
    }
    if (attacker > 6) {
      tellTarget (''dam_num' + deffencer') {
        damage = _level2.hou_dam;
        crit = _level2.crit;
        miss = _level2.miss;
        gotoAndPlay(2);
      }
      if (hou_dam != Math.floor(hou_dam)) {
        tellTarget (''f' + deffencer') {
          bp = _level2.bp;
          gotoAndPlay('block_f');
        }
        _level2.fshield.play();
      } else {
        tellTarget (''f' + deffencer') {
          bp = _level2.bp;
          gotoAndPlay('ex_f');
        }
      }
    } else {
      tellTarget (''dam_num' + deffencer') {
        damage = _level2.hou_dam;
        crit = _level2.crit;
        miss = _level2.miss;
        gotoAndPlay(2);
      }
      if (hou_dam != Math.floor(hou_dam)) {
        tellTarget (''e' + (deffencer - 6)') {
          bp = _level2.bp;
          gotoAndPlay('block_e');
        }
        _level2.eshield.play();
      } else {
        tellTarget (''e' + (deffencer - 6)') {
          bp = _level2.bp;
          gotoAndPlay('ex_e');
        }
      }
    }
  }

  frame 435 {
    if (_level2.gekichinFlg) {
      _level2.gekichinFlg = false;
      gekichin_cut.gotoAndPlay(2);
      stop();
    } else {
      if (_level2.ftaihaFlg) {
        _level2.ftaihaFlg = false;
        taiha_cut.gotoAndPlay(2);
        stop();
      }
    }
  }

  frame 440 {
    gotoAndPlay('yasen_loop');
  }

  frame 441 {
    _level2.tstrace('Frame: yasen_bakurai');
    attacker = _level2.at_list[th];
    deffencer = _level2.df_list[th][0];
    atkWeapon = si_list[th][0];
    crit = _level2.cl_list[th][0] == 2;
    miss = _level2.cl_list[th][0] == 0;
    hou_dam = _level2.d_list[th][0];
    if (attacker <= 6) {
      this['f' + attacker].gotoAndPlay('attack_f2');
      if (hou_dam == Math.floor(hou_dam)) {
        this['e' + (deffencer - 6)].gotoAndPlay('attack_e');
      } else {}
    } else {
      this['e' + (attacker - 6)].gotoAndPlay('attack_e2');
      if (hou_dam == Math.floor(hou_dam)) {
        this['f' + deffencer].gotoAndPlay('attack_f');
      } else {}
    }
    stop();
  }

  frame 442 {
    _level2.tstrace('Frame: hougeki_dive2');
    stop();
    if (attacker <= 6) {
      b_start._y = this['f' + attacker]._y + 110;
      b_start_enemy._visible = false;
    } else {
      b_start_enemy._y = this['e' + (attacker - 6)]._y + 110;
      b_start._visible = false;
    }
  }

  frame 443 {
    stop();
    if (attacker <= 6) {
      b_end._y = this['e' + (deffencer - 6)]._y + 40;
      b_end_enemy._visible = false;
    } else {
      b_end_enemy._y = this['f' + deffencer]._y + 40;
      b_end._visible = false;
    }
  }

  frame 444 {
    this['bomb' + deffencer].gotoAndPlay('bakurai');
    istep = 0;
  }

  frame 445 {
    _level2.tstrace('Frame: bakurailoop2');
  }

  frame 446 {
    if (istep < 26) {
      gotoAndPlay('bakurailoop2');
      ++istep;
    }
  }

  frame 448 {
    _level2.tstrace('Frame: hougeki_dive_bomb2');
    stop();
    if (hou_dam < 16) {
      _level2.bp = 1;
    } else {
      if (hou_dam < 40) {
        _level2.bp = 2;
      } else {
        _level2.bp = 3;
      }
    }
    if (attacker > 6) {
      tellTarget (''dam_num' + deffencer') {
        damage = _level2.hou_dam;
        crit = _level2.crit;
        miss = _level2.miss;
        gotoAndPlay(2);
      }
      if (hou_dam != Math.floor(hou_dam)) {
        tellTarget (''f' + deffencer') {
          bp = _level2.bp;
          gotoAndPlay('block_f');
        }
        _level2.fshield.play();
      } else {
        tellTarget (''f' + deffencer') {
          bp = _level2.bp;
          gotoAndPlay('ex_f');
        }
      }
    } else {
      tellTarget (''dam_num' + deffencer') {
        damage = _level2.hou_dam;
        crit = _level2.crit;
        miss = _level2.miss;
        gotoAndPlay(2);
      }
      if (hou_dam != Math.floor(hou_dam)) {
        tellTarget (''e' + (deffencer - 6)') {
          bp = _level2.bp;
          gotoAndPlay('block_e');
        }
        _level2.eshield.play();
      } else {
        tellTarget (''e' + (deffencer - 6)') {
          bp = _level2.bp;
          gotoAndPlay('ex_e');
        }
      }
    }
  }

  frame 451 {
    if (_level2.gekichinFlg) {
      _level2.gekichinFlg = false;
      gekichin_cut.gotoAndPlay(2);
      stop();
    } else {
      if (_level2.ftaihaFlg) {
        _level2.ftaihaFlg = false;
        taiha_cut.gotoAndPlay(2);
        stop();
      }
    }
  }

  frame 454 {
    gotoAndPlay('yasen_loop');
  }

  frame 455 {
    _level2.tstrace('Frame: yasen_aerial');
    attacker = _level2.at_list[th];
    deffencer = _level2.df_list[th][0];
    atkWeapon = si_list[th][0];
    crit = _level2.cl_list[th][0] == 2;
    miss = _level2.cl_list[th][0] == 0;
    hou_dam = _level2.d_list[th][0];
    if (attacker > 6) {
      tellTarget (''e' + (attacker - 6)') {
        _level2.planee._x = _x + 80;
        _level2.planee._y = _y + 40;
        _level2.planee.starty = _y + 40;
      }
      tellTarget (''f' + deffencer') {
        _level2.planee.endy = _y;
      }
      _level2.planee.play();
      _level2.planef._visible = false;
      _level2.planee.pid = attacker;
      if (_level2.eplanecount[attacker - 7] < 3) {
        _level2.planef.plane.p3._visible = false;
      }
      if (_level2.eplanecount[attacker - 7] < 2) {
        _level2.planef.plane.p2._visible = false;
      }
      hougeki_cutin2.attacker_id = attacker - 6;
      hougeki_cutin2.ids = ship_ke[attacker - 6];
      hougeki_cutin2.gotoAndPlay('hou');
    } else {
      tellTarget (''f' + attacker') {
        _level2.planef._x = _x + 160;
        _level2.planef._y = _y + 40;
        _level2.planef.starty = _y + 40;
      }
      tellTarget (''e' + (deffencer - 6)') {
        _level2.planef.endy = _y;
      }
      _level2.planef.play();
      _level2.planee._visible = false;
      _level2.planef.pid = attacker;
      if (_level2.fplanecount[attacker - 1] < 3) {
        _level2.planef.plane.p3._visible = false;
      }
      if (_level2.fplanecount[attacker - 1] < 2) {
        _level2.planef.plane.p2._visible = false;
      }
      hougeki_cutin.ids = ship_kf[attacker];
      hougeki_cutin.gotoAndPlay('hou');
    }
    _level2.playSFX('battle_plane1.mp3');
  }

  instance planef of movieClip 1400  {
  }

  instance planee of movieClip 1401  {
  }

  frame 456 {
    stop();
  }

  frame 459 {
    _level2.tstrace('Frame: yasen_aerial_bomb');
    stop();
    if (hou_dam < 16) {
      _level2.bp = 1;
    } else {
      if (hou_dam < 40) {
        _level2.bp = 2;
      } else {
        _level2.bp = 3;
      }
    }
    if (attacker > 6) {
      tellTarget (''dam_num' + deffencer') {
        damage = _level2.hou_dam;
        crit = _level2.crit;
        miss = _level2.miss;
        gotoAndPlay(2);
      }
      if (hou_dam != Math.floor(hou_dam)) {
        tellTarget (''f' + deffencer') {
          bp = _level2.bp;
          gotoAndPlay('block_f');
        }
        _level2.fshield.play();
      } else {
        tellTarget (''f' + deffencer') {
          bp = _level2.bp;
          gotoAndPlay('ex_f');
        }
      }
    } else {
      tellTarget (''dam_num' + deffencer') {
        damage = _level2.hou_dam;
        crit = _level2.crit;
        miss = _level2.miss;
        gotoAndPlay(2);
      }
      if (hou_dam != Math.floor(hou_dam)) {
        tellTarget (''e' + (deffencer - 6)') {
          bp = _level2.bp;
          gotoAndPlay('block_e');
        }
        _level2.eshield.play();
      } else {
        tellTarget (''e' + (deffencer - 6)') {
          bp = _level2.bp;
          gotoAndPlay('ex_e');
        }
      }
    }
  }

  frame 462 {
    if (_level2.gekichinFlg) {
      _level2.gekichinFlg = false;
      gekichin_cut.gotoAndPlay(2);
      stop();
    } else {
      if (_level2.ftaihaFlg) {
        _level2.ftaihaFlg = false;
        taiha_cut.gotoAndPlay(2);
        stop();
      }
    }
  }

  frame 466 {
    gotoAndPlay('yasen_loop');
  }

  frame 467 {
    _level2.tstrace('Frame: yasen_rai');
  }

  frame 468 {
    sh = 0;
    lop = 0;
    shmax = 30;
    attacker = _level2.at_list[th];
    deffencer = _level2.df_list[th][0];
    atkWeapon = si_list[th][0];
    crit = _level2.cl_list[th][0] == 2;
    miss = _level2.cl_list[th][0] == 0;
    rai_dam = _level2.d_list[th][0];
    zax = 0;
    zay = 0;
    zdx = 1;
    zdy = 1;
    if (attacker <= 6) {
      zax = (eval('f' + attacker))._x + 80;
      zay = (eval('f' + attacker))._y + 20;
      zdx = (eval('e' + (deffencer - 6)))._x + 80;
      zdy = (eval('e' + (deffencer - 6)))._y + 20;
    } else {
      zax = (eval('e' + (attacker - 6)))._x + 80;
      zay = (eval('e' + (attacker - 6)))._y + 20;
      zdx = (eval('f' + deffencer))._x + 80;
      zdy = (eval('f' + deffencer))._y + 20;
    }
    cutin_powup = new Array();
    cutin_slot = new Array();
    cutin_name = _level2.ship_name[attacker];
    cutin_hp = Math.floor((nowhps[attacker] * 1 / maxhps[attacker]) * 100);
    if (attacker <= 6) {
      cutin_slot = fSlot[attacker - 1];
      cutin_lv = ship_lvf[attacker];
      cutin_powup = _level2.fParam[attacker];
      tellTarget (''f' + attacker') {
        gotoAndPlay('raigeki');
      }
      hougeki_cutin.ids = ship_kf[attacker];
      hougeki_cutin.gotoAndPlay('hou');
    } else {
      cutin_slot = eSlot[attacker - 7];
      cutin_lv = ship_lve[attacker - 6];
      cutin_powup = _level2.eParam[attacker - 6];
      tellTarget (''e' + (attacker - 6)') {
        gotoAndPlay('raigeki');
      }
      hougeki_cutin2.attacker_id = attacker - 6;
      hougeki_cutin2.ids = ship_ke[attacker - 6];
      hougeki_cutin2.gotoAndPlay('hou');
    }
  }

  frame 470 {
    _level2.tstrace('Frame: shoots2');
  }

  frame 471 {
    ++lop;
    if (lop < 15) {
      gotoAndPlay('shoots2');
    } else {
      if (attacker <= 6) {
        tellTarget (''f' + attacker') {
          gotoAndPlay('raigeki2');
        }
      } else {
        tellTarget (''e' + (attacker - 6)') {
          gotoAndPlay('raigeki3');
        }
      }
      rr = Math.atan2(zdy - zay, zdx - zax) * 180 / Math.PI;
      eval('g' + attacker)._x = zax;
      eval('g' + attacker)._y = zay;
      eval('g' + attacker)._rotation = rr;
    }
  }

  frame 472 {
    _level2.tstrace('Frame: gyorai_loop2');
    ++sh;
    eval('g' + attacker)._x = zax + ((zdx - zax) / shmax) * sh;
    eval('g' + attacker)._y = zay + ((zdy - zay) / shmax) * sh;
  }

  frame 473 {
    if (sh == shmax) {
      if (attacker <= 6) {
        _level2.tmp = rai_dam;
        tellTarget (''dam_num' + deffencer') {
          damage = _level2.tmp;
          crit = _level2.crit;
          miss = _level2.miss;
          gotoAndPlay(2);
        }
        if (_level2.tmp <= 0) {
          tellTarget (''ssp' + deffencer') {
            gotoAndPlay('sp1');
          }
        } else {
          tellTarget (''sp' + deffencer') {
            gotoAndPlay('sp1');
          }
        }
        if (_level2.tmp < 16) {
          bp = 1;
        } else {
          if (_level2.tmp < 40) {
            bp = 2;
          } else {
            bp = 3;
          }
        }
        if (rai_dam != Math.floor(rai_dam)) {
          tellTarget (''e' + (deffencer - 6)') {
            bp = _level2.bp;
            gotoAndPlay('block_e');
          }
          _level2.eshield.play();
        } else {
          tellTarget (''e' + (deffencer - 6)') {
            bp = _level2.bp;
            gotoAndPlay('gyorai_hit');
          }
        }
      } else {
        _level2.tmp = rai_dam;
        tellTarget (''dam_num' + deffencer') {
          damage = _level2.tmp;
          crit = _level2.crit;
          miss = _level2.miss;
          gotoAndPlay(2);
        }
        if (_level2.tmp <= 0) {
          tellTarget (''ssp' + deffencer') {
            gotoAndPlay('sp2');
          }
        } else {
          tellTarget (''sp' + deffencer') {
            gotoAndPlay('sp2');
          }
        }
        if (_level2.tmp < 16) {
          bp = 1;
        } else {
          if (_level2.tmp < 40) {
            bp = 2;
          } else {
            bp = 3;
          }
        }
        if (rai_dam != Math.floor(rai_dam)) {
          tellTarget (''f' + deffencer') {
            bp = _level2.bp;
            gotoAndPlay('block_f');
          }
          _level2.fshield.play();
        } else {
          tellTarget (''f' + deffencer') {
            bp = _level2.bp;
            gotoAndPlay('gyorai_hit');
          }
        }
      }
    }
    if (sh < shmax + 10) {
      gotoAndPlay('gyorai_loop2');
    } else {
      i = 1;
      while (i <= 6) {
        tellTarget (''f' + i') {
          gotoAndStop('default');
        }
        tellTarget (''e' + i') {
          gotoAndStop('default');
        }
        ++i;
      }
      i = 1;
      while (i <= 12) {
        eval('g' + i)._y = -300;
        ++i;
      }
    }
  }

  frame 480 {
    if (_level2.gekichinFlg) {
      _level2.gekichinFlg = false;
      gekichin_cut.gotoAndPlay(2);
      stop();
    } else {
      if (_level2.ftaihaFlg) {
        _level2.ftaihaFlg = false;
        taiha_cut.gotoAndPlay(2);
        stop();
      }
    }
  }

  frame 485 {
    gotoAndPlay('yasen_loop');
  }

  frame 486 {
    _level2.tstrace('Frame: superAttack');
    wep1 = si_list[th][0];
    wep2 = si_list[th][1];
    if (_level2.sp_list[th] >= 4) {
      wep3 = si_list[th][2];
    }
    wepList = new Array();
    wepList = [wep1, wep2];
    if (_level2.sp_list[th] >= 4) {
      wepList[2] = wep3;
    }
    attacker = _level2.at_list[th];
    deffencer = _level2.df_list[th][0];
    atkWeapon = si_list[th][0];
    dam = _level2.d_list[th][0];
    _level2.tstrace('wepList = ' + wepList);
    _level2.tstrace('sp_list[th] = ' + sp_list[th]);
    if (sp_list[th] == 2) {
      _level2.tstrace('主雷 -> ' + wep1 + '|' + wep2);
      tgt = 'sr';
      gotoAndStop('super_rai');
    } else {
      if (sp_list[th] == 3) {
        _level2.tstrace('雷雷 -> ' + wep1 + '|' + wep2);
        tgt = 'rr';
        gotoAndStop('super_rai');
      } else {
        if (sp_list[th] == 4) {
          _level2.tstrace('主主副 -> ' + wep1 + '|' + wep2 + '|' + wep3);
          tgt = 'ssf';
          gotoAndStop('super_hou');
        } else {
          _level2.tstrace('主主主 -> ' + wep1 + '|' + wep2 + '|' + wep3);
          tgt = 'sss';
          gotoAndStop('super_hou');
        }
      }
    }
    cutin_powup = new Array();
    cutin_slot = new Array();
    cutin_name = _level2.ship_name[attacker];
    cutin_hp = Math.floor((nowhps[attacker] * 1 / maxhps[attacker]) * 100);
    if (attacker <= 6) {
      cutin_slot = fSlot[attacker - 1];
      cutin_lv = ship_lvf[attacker];
      cutin_powup = _level2.fParam[attacker];
      _level2.shipid = ship_kf[attacker];
      _level2.attacker = attacker;
      hougeki_cutin.gotoAndPlay(tgt);
    } else {
      cutin_slot = eSlot[attacker - 7];
      cutin_lv = ship_lve[attacker - 6];
      cutin_powup = _level2.eParam[attacker - 6];
      hougeki_cutin2.attacker_id = attacker - 6;
      _level2.shipid = ship_ke[attacker - 6];
      _level2.attacker = attacker;
      hougeki_cutin2.gotoAndPlay(tgt);
    }
    stop();
    i = 1;
    while (i <= 6) {
      tellTarget (''f' + i') {
        gotoAndStop('default');
      }
      tellTarget (''e' + i') {
        gotoAndStop('default');
      }
      ++i;
    }
  }

  frame 490 {
    _level2.tstrace('Frame: super_hou');
  }

  movieClip 1467  {
  }

  movieClip 1468  {

    frame 13 {
      gotoAndPlay(1);
    }

    frame 26 {
      gotoAndPlay(1);
    }
  }

  frame 491 {
    attacker = _level2.at_list[th];
    deffencer = _level2.df_list[th][0];
    crit = _level2.cl_list[th][0] == 2;
    miss = _level2.cl_list[th][0] == 0;
    hou_dam = _level2.d_list[th][0];
    if (attacker > 6) {
      tellTarget (''e' + (attacker - 6)') {
        gotoAndPlay('attack_e');
      }
      if (hou_dam == Math.floor(hou_dam)) {
        tellTarget (''f' + deffencer') {
          gotoAndPlay('attack_f');
        }
      } else {}
    } else {
      tellTarget (''f' + attacker') {
        gotoAndPlay('attack_f');
      }
      if (hou_dam == Math.floor(hou_dam)) {
        tellTarget (''e' + (deffencer - 6)') {
          gotoAndPlay('attack_e');
        }
      } else {}
    }
  }

  frame 492 {
    bp = 3;
    if (attacker > 6) {
      if (hou_dam != Math.floor(hou_dam)) {
        tellTarget (''f' + deffencer') {
          bp = _level2.bp;
          gotoAndPlay('block_f');
        }
        _level2.fshield.play();
      } else {
        tellTarget (''f' + deffencer') {
          bp = _level2.bp;
          gotoAndPlay('ex_f');
        }
      }
    } else {
      if (hou_dam != Math.floor(hou_dam)) {
        tellTarget (''e' + (deffencer - 6)') {
          bp = _level2.bp;
          gotoAndPlay('block_e');
        }
        _level2.eshield.play();
      } else {
        tellTarget (''e' + (deffencer - 6)') {
          bp = _level2.bp;
          gotoAndPlay('ex_e');
        }
      }
    }
    tellTarget (''dam_num' + deffencer') {
      damage = _level2.hou_dam;
      crit = _level2.crit;
      miss = _level2.miss;
      gotoAndPlay(2);
    }
  }

  frame 496 {
  }

  frame 506 {
    if (_level2.gekichinFlg) {
      _level2.gekichinFlg = false;
      gekichin_cut.gotoAndPlay(2);
      stop();
    } else {
      if (_level2.ftaihaFlg) {
        _level2.ftaihaFlg = false;
        taiha_cut.gotoAndPlay(2);
        stop();
      }
    }
  }

  frame 511 {
    gotoAndPlay('yasen_loop');
  }

  frame 512 {
    _level2.tstrace('Frame: super_hou2');
  }

  frame 513 {
    attacker = _level2.at_list[th];
    deffencer = _level2.df_list[th][0];
    crit = _level2.cl_list[th][0] == 2;
    miss = _level2.cl_list[th][0] == 0;
    hou_dam = _level2.d_list[th][0];
    if (attacker > 6) {
      tellTarget (''e' + (attacker - 6)') {
        gotoAndPlay('attack_e');
      }
      if (hou_dam == Math.floor(hou_dam)) {
        tellTarget (''f' + deffencer') {
          gotoAndPlay('attack_f');
        }
      } else {}
    } else {
      tellTarget (''f' + attacker') {
        gotoAndPlay('attack_f');
      }
      if (hou_dam == Math.floor(hou_dam)) {
        tellTarget (''e' + (deffencer - 6)') {
          gotoAndPlay('attack_e');
        }
      } else {}
    }
  }

  frame 514 {
    bp = 3;
    if (attacker > 6) {
      if (hou_dam != Math.floor(hou_dam)) {
        tellTarget (''f' + deffencer') {
          bp = _level2.bp;
          gotoAndPlay('block_f');
        }
        _level2.fshield.play();
      } else {
        tellTarget (''f' + deffencer') {
          bp = _level2.bp;
          gotoAndPlay('ex_f');
        }
      }
    } else {
      if (hou_dam != Math.floor(hou_dam)) {
        tellTarget (''e' + (deffencer - 6)') {
          bp = _level2.bp;
          gotoAndPlay('block_e');
        }
        _level2.eshield.play();
      } else {
        tellTarget (''e' + (deffencer - 6)') {
          bp = _level2.bp;
          gotoAndPlay('ex_e');
        }
      }
    }
  }

  frame 521 {
    if (attacker > 6) {
      if (hou_dam != Math.floor(hou_dam)) {
        tellTarget (''f' + deffencer') {
          bp = _level2.bp;
          gotoAndPlay('block_f');
        }
        _level2.fshield.play();
      } else {
        tellTarget (''f' + deffencer') {
          bp = _level2.bp;
          gotoAndPlay('gyorai_hit');
        }
      }
      _level2['sp' + deffencer].gotoAndPlay('sp2');
      _level2['ssp' + deffencer].gotoAndPlay('sp2');
    } else {
      if (hou_dam != Math.floor(hou_dam)) {
        tellTarget (''e' + (deffencer - 6)') {
          bp = _level2.bp;
          gotoAndPlay('block_e');
        }
        _level2.eshield.play();
      } else {
        tellTarget (''e' + (deffencer - 6)') {
          bp = _level2.bp;
          gotoAndPlay('gyorai_hit');
        }
      }
      _level2['sp' + deffencer].gotoAndPlay('sp1');
      _level2['ssp' + deffencer].gotoAndPlay('sp1');
    }
  }

  frame 528 {
    if (attacker > 6) {
      if (hou_dam != Math.floor(hou_dam)) {
        tellTarget (''f' + deffencer') {
          bp = _level2.bp;
          gotoAndPlay('block_f');
        }
        _level2.fshield.play();
      } else {
        tellTarget (''f' + deffencer') {
          bp = _level2.bp;
          gotoAndPlay('ex_f');
        }
      }
    } else {
      if (hou_dam != Math.floor(hou_dam)) {
        tellTarget (''e' + (deffencer - 6)') {
          bp = _level2.bp;
          gotoAndPlay('block_e');
        }
        _level2.eshield.play();
      } else {
        tellTarget (''e' + (deffencer - 6)') {
          bp = _level2.bp;
          gotoAndPlay('ex_e');
        }
      }
    }
    stop();
  }

  frame 535 {
    if (attacker > 6) {
      if (hou_dam != Math.floor(hou_dam)) {
        tellTarget (''f' + deffencer') {
          bp = _level2.bp;
          gotoAndPlay('block_f');
        }
        _level2.fshield.play();
      } else {
        tellTarget (''f' + deffencer') {
          bp = _level2.bp;
          gotoAndPlay('ex_f');
        }
      }
      _level2['sp' + deffencer].gotoAndPlay('sp2');
      _level2['ssp' + deffencer].gotoAndPlay('sp2');
    } else {
      if (hou_dam != Math.floor(hou_dam)) {
        tellTarget (''e' + (deffencer - 6)') {
          bp = _level2.bp;
          gotoAndPlay('block_e');
        }
        _level2.eshield.play();
      } else {
        tellTarget (''e' + (deffencer - 6)') {
          bp = _level2.bp;
          gotoAndPlay('gyorai_hit');
        }
      }
      _level2['sp' + deffencer].gotoAndPlay('sp1');
      _level2['ssp' + deffencer].gotoAndPlay('sp1');
    }
    tellTarget (''dam_num' + deffencer') {
      damage = _level2.hou_dam;
      gotoAndPlay(2);
    }
  }

  frame 546 {
    if (_level2.gekichinFlg) {
      _level2.gekichinFlg = false;
      gekichin_cut.gotoAndPlay(2);
      stop();
    } else {
      if (_level2.ftaihaFlg) {
        _level2.ftaihaFlg = false;
        taiha_cut.gotoAndPlay(2);
        stop();
      }
    }
  }

  frame 551 {
    gotoAndPlay('yasen_loop');
  }

  frame 552 {
    _level2.tstrace('Frame: super_rai');
  }

  frame 553 {
    sh = 0;
    lop = 0;
    shmax = 30;
    attacker = _level2.at_list[th];
    deffencer = _level2.df_list[th][0];
    crit = Math.max(_level2.cl_list[th][0], _level2.cl_list[th][1]) == 2;
    miss = Math.max(_level2.cl_list[th][0], _level2.cl_list[th][1]) == 0;
    rai_dam = _level2.d_list[th][0] + _level2.d_list[th][1];
    zax = 0;
    zay = 0;
    zdx = 1;
    zdy = 1;
    if (attacker <= 6) {
      zax = (eval('f' + attacker))._x + 80;
      zay = (eval('f' + attacker))._y + 20;
      zdx = (eval('e' + (deffencer - 6)))._x + 80;
      zdy = (eval('e' + (deffencer - 6)))._y + 20;
    } else {
      zax = (eval('e' + (attacker - 6)))._x + 80;
      zay = (eval('e' + (attacker - 6)))._y + 20;
      zdx = (eval('f' + deffencer))._x + 80;
      zdy = (eval('f' + deffencer))._y + 20;
    }
    if (attacker <= 6) {
      tellTarget (''f' + attacker') {
        gotoAndPlay('raigeki');
      }
    } else {
      tellTarget (''e' + (attacker - 6)') {
        gotoAndPlay('raigeki');
      }
    }
  }

  frame 555 {
    _level2.tstrace('Frame: shoots3');
  }

  frame 556 {
    ++lop;
    if (lop < 15) {
      gotoAndPlay('shoots3');
    } else {
      if (attacker <= 6) {
        tellTarget (''f' + attacker') {
          gotoAndPlay('raigeki2');
        }
      } else {
        tellTarget (''e' + (attacker - 6)') {
          gotoAndPlay('raigeki3');
        }
      }
      rr = Math.atan2(zdy - zay, zdx - zax) * 180 / Math.PI;
      g1._x = zax;
      g1._y = zay;
      g1._rotation = rr;
    }
  }

  frame 557 {
    _level2.tstrace('Frame: gyorai_loop4');
    ++sh;
    g1._x = zax + ((zdx - zax) / shmax) * sh;
    g1._y = zay + ((zdy - zay) / shmax) * sh;
  }

  frame 558 {
    if (sh == shmax) {
      if (attacker <= 6) {
        _level2.tmp = rai_dam;
        tellTarget (''dam_num' + deffencer') {
          damage = _level2.tmp;
          crit = _level2.crit;
          miss = _level2.miss;
          gotoAndPlay(2);
        }
        if (_level2.tmp <= 0) {
          if (rai_dam != Math.floor(rai_dam)) {
            tellTarget (''e' + (deffencer - 6)') {
              gotoAndPlay('block_e');
            }
            _level2.eshield.play();
          } else {
            tellTarget (''e' + (deffencer - 6)') {
              gotoAndPlay('gyorai_hit');
            }
          }
          tellTarget (''ssp' + deffencer') {
            gotoAndPlay('sp1');
          }
        } else {
          if (_level2.tmp < 16) {
            bp = 1;
          } else {
            if (_level2.tmp < 40) {
              bp = 2;
            } else {
              bp = 3;
            }
          }
          if (rai_dam != Math.floor(rai_dam)) {
            tellTarget (''e' + (deffencer - 6)') {
              bp = _level2.bp;
              gotoAndPlay('block_e');
            }
            _level2.eshield.play();
          } else {
            tellTarget (''e' + (deffencer - 6)') {
              bp = _level2.bp;
              gotoAndPlay('gyorai_hit');
            }
          }
          tellTarget (''sp' + deffencer') {
            gotoAndPlay('sp1');
          }
        }
      } else {
        _level2.tmp = rai_dam;
        tellTarget (''dam_num' + deffencer') {
          damage = _level2.tmp;
          crit = _level2.crit;
          miss = _level2.miss;
          gotoAndPlay(2);
        }
        if (_level2.tmp <= 0) {
          if (rai_dam != Math.floor(rai_dam)) {
            tellTarget (''f' + deffencer') {
              gotoAndPlay('block_f');
            }
            _level2.fshield.play();
          } else {
            tellTarget (''f' + deffencer') {
              gotoAndPlay('gyorai_hit');
            }
          }
          tellTarget (''ssp' + deffencer') {
            gotoAndPlay('sp2');
          }
        } else {
          if (_level2.tmp < 16) {
            bp = 1;
          } else {
            if (_level2.tmp < 40) {
              bp = 2;
            } else {
              bp = 3;
            }
          }
          if (rai_dam != Math.floor(rai_dam)) {
            tellTarget (''f' + deffencer') {
              bp = _level2.bp;
              gotoAndPlay('block_f');
            }
            _level2.fshield.play();
          } else {
            tellTarget (''f' + deffencer') {
              bp = _level2.bp;
              gotoAndPlay('gyorai_hit');
            }
          }
          tellTarget (''sp' + deffencer') {
            gotoAndPlay('sp2');
          }
        }
      }
    } else {
      if (sh == shmax + 2) {
        tellTarget (''bomb' + deffencer') {
          gotoAndPlay('ex_s');
        }
      } else {
        if (sh == shmax + 12) {
          tellTarget (''bomb' + deffencer') {
            gotoAndPlay('ex_s');
          }
        }
      }
    }
    if (sh < shmax + 15) {
      gotoAndPlay('gyorai_loop4');
    } else {
      i = 1;
      while (i <= 6) {
        tellTarget (''f' + i') {
          gotoAndStop('default');
        }
        tellTarget (''e' + i') {
          gotoAndStop('default');
        }
        ++i;
      }
      i = 1;
      while (i <= 12) {
        eval('g' + i)._y = -300;
        ++i;
      }
    }
  }

  frame 564 {
    if (_level2.gekichinFlg) {
      _level2.gekichinFlg = false;
      gekichin_cut.gotoAndPlay(2);
      stop();
    } else {
      if (_level2.ftaihaFlg) {
        _level2.ftaihaFlg = false;
        taiha_cut.gotoAndPlay(2);
        stop();
      }
    }
  }

  frame 569 {
    gotoAndPlay('yasen_loop');
  }

  frame 570 {
    _level2.tstrace('Frame: yasen_ren');
    i = 1;
    while (i <= 6) {
      tellTarget (''f' + i') {
        gotoAndStop('default');
      }
      tellTarget (''e' + i') {
        gotoAndStop('default');
      }
      ++i;
    }
    attacker = _level2.at_list[th];
    deffencer = _level2.df_list[th][0];
    atkWeapon = si_list[th][0];
    cutin_powup = new Array();
    cutin_slot = new Array();
    cutin_name = _level2.ship_name[attacker];
    cutin_hp = Math.floor((nowhps[attacker] * 1 / maxhps[attacker]) * 100);
    if (attacker > 6) {
      cutin_slot = eSlot[attacker - 7];
      cutin_lv = ship_lve[attacker - 6];
      cutin_powup = _level2.eParam[attacker - 6];
      hougeki_cutin2.attacker_id = attacker - 6;
      hougeki_cutin2.ids = ship_ke[attacker - 6];
    } else {
      cutin_slot = fSlot[attacker - 1];
      cutin_lv = ship_lvf[attacker];
      cutin_powup = _level2.fParam[attacker];
      hougeki_cutin.ids = ship_kf[attacker];
    }
  }

  frame 573 {
    _level2.tstrace('Frame: ren_pre');
    wep1 = si_list[th][0];
    wep2 = si_list[th][1];
    wepList = new Array();
    wepList = [wep1, wep2];
    cutin_powup = new Array();
    cutin_slot = new Array();
    cutin_name = _level2.ship_name[attacker];
    cutin_hp = Math.floor((nowhps[attacker] * 1 / maxhps[attacker]) * 100);
    j = 0;
    for (;;) {
      if (!(_level1.SYS_slot_items[j].api_id != si_list[th][0] && j < 1000)) break;
      ++j;
    }
    _level2.tstrace('j = ' + j);
    _level2.tstrace('_level1.SYS_slot_items[' + j + ']["api_type"][0] = ' + _level1.SYS_slot_items[j].api_type[0]);
    if (_level1.SYS_slot_items[j].api_type[0] == 1) {
      gotoAndStop('renzokuhou');
      if (_level2.at_list[th] > 6) {
        cutin_slot = eSlot[attacker - 7];
        cutin_lv = ship_lve[attacker - 6];
        cutin_powup = _level2.eParam[attacker - 6];
        hougeki_cutin2.attacker_id = attacker - 6;
        hougeki_cutin2.ids = ship_ke[attacker - 6];
        hougeki_cutin2.gotoAndPlay('ren');
      } else {
        cutin_slot = fSlot[attacker - 1];
        cutin_lv = ship_lvf[attacker];
        cutin_powup = _level2.fParam[attacker];
        hougeki_cutin.ids = ship_kf[attacker];
        hougeki_cutin.gotoAndPlay('ren');
      }
    } else {
      gotoAndStop('renzokurai');
      if (_level2.at_list[th] > 6) {
        cutin_slot = eSlot[attacker - 7];
        cutin_lv = ship_lve[attacker - 6];
        cutin_powup = _level2.eParam[attacker - 6];
        hougeki_cutin2.attacker_id = attacker - 6;
        hougeki_cutin2.ids = ship_ke[attacker - 6];
        hougeki_cutin2.gotoAndPlay('ren');
      } else {
        cutin_slot = fSlot[attacker - 1];
        cutin_lv = ship_lvf[attacker];
        cutin_powup = _level2.fParam[attacker];
        hougeki_cutin.ids = ship_kf[attacker];
        hougeki_cutin.gotoAndPlay('ren');
      }
    }
  }

  frame 575 {
    stop();
    ren_round = 1;
    _level2.tstrace('Frame: renzokuhou');
  }

  frame 576 {
    attacker = _level2.at_list[th];
    deffencer = _level2.df_list[th][ren_round - 1];
    hou_dam = _level2.d_list[th][ren_round - 1];
    crit = _level2.cl_list[th][ren_round - 1] == 2;
    miss = _level2.cl_list[th][ren_round - 1] == 0;
    if (attacker > 6) {
      if (hou_dam == Math.floor(hou_dam)) {
        tellTarget (''e' + (attacker - 6)') {
          gotoAndPlay('attack_e');
        }
      } else {}
    } else {
      if (hou_dam == Math.floor(hou_dam)) {
        tellTarget (''f' + attacker') {
          gotoAndPlay('attack_f');
        }
      } else {}
    }
    wepID = wea[th][ren_round - 1];
  }

  frame 577 {
    bp = 3;
    if (attacker > 6) {
      if (hou_dam != Math.floor(hou_dam)) {
        tellTarget (''f' + deffencer') {
          bp = _level2.bp;
          gotoAndPlay('block_f');
        }
        _level2.fshield.play();
      } else {
        tellTarget (''f' + deffencer') {
          bp = _level2.bp;
          gotoAndPlay('ex_f');
        }
      }
    } else {
      if (hou_dam != Math.floor(hou_dam)) {
        tellTarget (''e' + (deffencer - 6)') {
          bp = _level2.bp;
          gotoAndPlay('block_e');
        }
        _level2.eshield.play();
      } else {
        tellTarget (''e' + (deffencer - 6)') {
          bp = _level2.bp;
          gotoAndPlay('ex_e');
        }
      }
    }
    tellTarget (''dam_num' + deffencer') {
      damage = _level2.hou_dam;
      crit = _level2.crit;
      miss = _level2.miss;
      gotoAndPlay(2);
    }
  }

  frame 592 {
    if (ren_round == 1) {
      if (attacker > 6) {
        tellTarget (''f' + deffencer') {
          gotoAndStop('default');
        }
      } else {
        tellTarget (''e' + (deffencer - 6)') {
          gotoAndStop('default');
        }
      }
    }
  }

  frame 605 {
    if (ren_round == 1) {
      gotoAndPlay('renzokuhou_round');
      ren_round = 2;
    }
  }

  frame 608 {
    if (_level2.gekichinFlg) {
      _level2.gekichinFlg = false;
      gekichin_cut.gotoAndPlay(2);
      stop();
    } else {
      if (_level2.ftaihaFlg) {
        _level2.ftaihaFlg = false;
        taiha_cut.gotoAndPlay(2);
        _level2.tshipnum = deffencer;
        stop();
      }
    }
  }

  frame 613 {
    gotoAndPlay('yasen_loop');
  }

  frame 614 {
    _level2.tstrace('Frame: renzokurai');
    wepID = wea[th][atnum - 1];
    sh = 0;
    lop = 0;
    shmax = 50;
    attacker = _level2.at_list[th];
    deffencer = _level2.df_list[th][0];
    deffencer2 = _level2.df_list[th][1];
    crit = _level2.cl_list[th][0] == 2;
    miss = _level2.cl_list[th][0] == 0;
    crit2 = _level2.cl_list[th][1] == 2;
    miss2 = _level2.cl_list[th][1] == 0;
    rai_dam = _level2.d_list[th][0];
    rai_dam2 = _level2.d_list[th][1];
    zax = 0;
    zay = 0;
    zdx = 1;
    zdy = 1;
    zdx2 = 1;
    zdy2 = 1;
    if (attacker <= 6) {
      zax = (eval('f' + attacker))._x + 80;
      zay = (eval('f' + attacker))._y + 20;
      zdx = (eval('e' + (deffencer - 6)))._x + 80;
      zdy = (eval('e' + (deffencer - 6)))._y + 20;
      zdx2 = (eval('e' + (deffencer2 - 6)))._x + 80;
      zdy2 = (eval('e' + (deffencer2 - 6)))._y + 20;
    } else {
      zax = (eval('e' + (attacker - 6)))._x + 80;
      zay = (eval('e' + (attacker - 6)))._y + 20;
      zdx = (eval('f' + deffencer))._x + 80;
      zdy = (eval('f' + deffencer))._y + 20;
      zdx2 = (eval('f' + deffencer2))._x + 80;
      zdy2 = (eval('f' + deffencer2))._y + 20;
    }
    i = 1;
    while (i <= 6) {
      tellTarget (''f' + i') {
        gotoAndStop('default');
      }
      tellTarget (''e' + i') {
        gotoAndStop('default');
      }
      ++i;
    }
    if (attacker <= 6) {
      tellTarget (''f' + attacker') {
        gotoAndPlay('raigeki');
      }
    } else {
      tellTarget (''e' + (attacker - 6)') {
        gotoAndPlay('raigeki');
      }
    }
  }

  frame 617 {
    _level2.tstrace('Frame: shoots4');
  }

  frame 618 {
    ++lop;
    if (lop < 15) {
      gotoAndPlay('shoots3');
    } else {
      if (attacker <= 6) {
        tellTarget (''f' + attacker') {
          gotoAndPlay('raigeki2');
        }
      } else {
        tellTarget (''e' + (attacker - 6)') {
          gotoAndPlay('raigeki3');
        }
      }
      rr = Math.atan2(zdy - zay, zdx - zax) * 180 / Math.PI;
      g1._x = zax;
      g1._y = zay;
      g1._rotation = rr;
    }
  }

  frame 619 {
    _level2.tstrace('Frame: gyorai_loop5');
    ++sh;
    g1._x = zax + ((zdx - zax) / shmax) * sh;
    g1._y = zay + ((zdy - zay) / shmax) * sh;
    if (sh >= 20) {
      g2._x = zax + ((zdx2 - zax) / (shmax - 20)) * (sh - 20);
      g2._y = zay + ((zdy2 - zay) / (shmax - 20)) * (sh - 20);
    }
  }

  frame 620 {
    if (sh == 20) {
      if (attacker <= 6) {
        tellTarget (''f' + attacker') {
          gotoAndPlay('raigeki2');
        }
      } else {
        tellTarget (''e' + (attacker - 6)') {
          gotoAndPlay('raigeki3');
        }
      }
      rr = Math.atan2(zdy2 - zay, zdx2 - zax) * 180 / Math.PI;
      g2._x = zax;
      g2._y = zay;
      g2._rotation = rr;
    }
    if (sh == shmax) {
      if (attacker <= 6) {
        _level2.tmp = rai_dam;
        tellTarget (''dam_num' + deffencer') {
          damage = _level2.tmp;
          crit = _level2.crit;
          miss = _level2.miss;
          gotoAndPlay(2);
        }
        if (_level2.tmp <= 0) {
          if (rai_dam != Math.floor(rai_dam)) {
            tellTarget (''e' + (deffencer - 6)') {
              gotoAndPlay('block_e');
            }
            _level2.eshield.play();
          } else {
            tellTarget (''e' + (deffencer - 6)') {
              gotoAndPlay('gyorai_hit');
            }
          }
          tellTarget (''ssp' + deffencer') {
            gotoAndPlay('sp1');
          }
        } else {
          if (_level2.tmp < 16) {
            bp = 1;
          } else {
            if (_level2.tmp < 40) {
              bp = 2;
            } else {
              bp = 3;
            }
          }
          if (rai_dam != Math.floor(rai_dam)) {
            tellTarget (''e' + (deffencer - 6)') {
              bp = _level2.bp;
              gotoAndPlay('block_e');
            }
            _level2.eshield.play();
          } else {
            tellTarget (''e' + (deffencer - 6)') {
              bp = _level2.bp;
              gotoAndPlay('gyorai_hit');
            }
          }
          tellTarget (''sp' + deffencer') {
            gotoAndPlay('sp1');
          }
        }
        _level2.tmp2 = rai_dam2;
        tellTarget (''dam_num' + deffencer2') {
          damage = _level2.tmp2;
          crit = _level2.crit2;
          miss = _level2.miss2;
          gotoAndPlay(2);
        }
        if (_level2.tmp2 <= 0) {
          if (rai_dam2 != Math.floor(rai_dam2)) {
            tellTarget (''e' + (deffencer2 - 6)') {
              gotoAndPlay('block_e');
            }
            _level2.eshield.play();
          } else {
            tellTarget (''e' + (deffencer2 - 6)') {
              gotoAndPlay('gyorai_hit');
            }
          }
          tellTarget (''ssp' + deffencer2') {
            gotoAndPlay('sp1');
          }
        } else {
          if (_level2.tmp2 < 16) {
            bp = 1;
          } else {
            if (_level2.tmp2 < 40) {
              bp = 2;
            } else {
              bp = 3;
            }
          }
          if (rai_dam2 != Math.floor(rai_dam2)) {
            tellTarget (''e' + (deffencer2 - 6)') {
              bp = _level2.bp;
              gotoAndPlay('block_e');
            }
            _level2.eshield.play();
          } else {
            tellTarget (''e' + (deffencer2 - 6)') {
              bp = _level2.bp;
              gotoAndPlay('gyorai_hit');
            }
          }
          tellTarget (''sp' + deffencer2') {
            gotoAndPlay('sp1');
          }
        }
      } else {
        _level2.tmp = rai_dam;
        tellTarget (''dam_num' + deffencer') {
          damage = _level2.tmp;
          crit = _level2.crit;
          miss = _level2.miss;
          gotoAndPlay(2);
        }
        if (_level2.tmp <= 0) {
          if (rai_dam != Math.floor(rai_dam)) {
            tellTarget (''f' + deffencer') {
              gotoAndPlay('block_f');
            }
            _level2.fshield.play();
          } else {
            tellTarget (''f' + deffencer') {
              gotoAndPlay('gyorai_hit');
            }
          }
          tellTarget (''ssp' + deffencer') {
            gotoAndPlay('sp2');
          }
        } else {
          if (_level2.tmp < 16) {
            bp = 1;
          } else {
            if (_level2.tmp < 40) {
              bp = 2;
            } else {
              bp = 3;
            }
          }
          if (rai_dam != Math.floor(rai_dam)) {
            tellTarget (''f' + deffencer') {
              bp = _level2.bp;
              gotoAndPlay('block_f');
            }
            _level2.fshield.play();
          } else {
            tellTarget (''f' + deffencer') {
              bp = _level2.bp;
              gotoAndPlay('gyorai_hit');
            }
          }
          tellTarget (''sp' + deffencer') {
            gotoAndPlay('sp2');
          }
        }
        _level2.tmp2 = rai_dam2;
        tellTarget (''dam_num' + deffencer2') {
          damage = _level2.tmp2;
          crit = _level2.crit2;
          miss = _level2.miss2;
          gotoAndPlay(2);
        }
        if (_level2.tmp2 <= 0) {
          if (rai_dam2 != Math.floor(rai_dam2)) {
            tellTarget (''f' + deffencer2') {
              gotoAndPlay('block_f');
            }
            _level2.fshield.play();
          } else {
            tellTarget (''f' + deffencer2') {
              gotoAndPlay('gyorai_hit');
            }
          }
          tellTarget (''ssp' + deffencer2') {
            gotoAndPlay('sp2');
          }
        } else {
          if (_level2.tmp2 < 16) {
            bp = 1;
          } else {
            if (_level2.tmp2 < 40) {
              bp = 2;
            } else {
              bp = 3;
            }
          }
          if (rai_dam2 != Math.floor(rai_dam2)) {
            tellTarget (''f' + deffencer2') {
              bp = _level2.bp;
              gotoAndPlay('block_f');
            }
            _level2.fshield.play();
          } else {
            tellTarget (''f' + deffencer2') {
              bp = _level2.bp;
              gotoAndPlay('gyorai_hit');
            }
          }
          tellTarget (''sp' + deffencer2') {
            gotoAndPlay('sp2');
          }
        }
      }
    }
    if (sh < shmax + 35) {
      gotoAndPlay('gyorai_loop5');
    } else {
      i = 1;
      while (i <= 6) {
        tellTarget (''f' + i') {
          gotoAndStop('default');
        }
        tellTarget (''e' + i') {
          gotoAndStop('default');
        }
        ++i;
      }
      i = 1;
      while (i <= 12) {
        eval('g' + i)._y = -300;
        ++i;
      }
    }
  }

  frame 628 {
    if (_level2.gekichinFlg) {
      _level2.gekichinFlg = false;
      gekichin_cut.gotoAndPlay(2);
      stop();
    } else {
      if (_level2.ftaihaFlg) {
        _level2.ftaihaFlg = false;
        taiha_cut.gotoAndPlay(2);
        _level2.tshipnum = deffencer;
        stop();
      }
    }
  }

  frame 633 {
    gotoAndPlay('yasen_loop');
  }

  frame 634 {
    _level2.tstrace('Frame: ren_end');
  }

  frame 642 {
    gotoAndPlay('yasen_loop');
  }

  frame 664 {
    _level2.tstrace('Frame: yasen_finish');
    if (!_level2.isEvent() || !_level2.yasen_reversal) {
      _level2.playBGM('', true, 0, 1);
    }
    if (_level2.isEvent() && _level2.bossmap && _level1.mapid == 2) {
      if (!_level2.bossdead && _level2.nowhps[7] <= 0) {
        if (eventbossvoicelengths[_level2.bosstp] > 0) {
          _level2.stop();
          _level2.playVoiceE(7, eventbossids[_level2.bosstp], [10], null);
          var stopID = setInterval(function () {
            _level2.tstrace('setInterval終了：' + stopID);
            _level2.play();
            clearInterval(stopID);
          }, _level2.eventbossvoicelengths[_level2.bosstp]);
        }
      }
    }
  }

  frame 669 {
    _level2.tstrace('Frame: waitforexplosionyasen');
  }

  frame 670 {
    if (_level2.gaugeExploding) {
      gotoAndPlay('waitforexplosionyasen');
    }
  }

  frame 675 {
    _level2.playSFX('frame_close.mp3');
  }

  frame 695 {
    if (_level2.day_flag) {
      if (_level2.bossmap || _level2.isEvent()) {
        if (_level2.bgm.ext) {
          _level2.bossbgmpos = _level2.bgm.s2.position;
          _level2.tstrace('_level2.bgm.s2.position = ' + _level2.bgm.s2.position);
        } else {
          _level2.bossbgmpos = _level2.bgm.s.position;
          _level2.tstrace('_level2.bgm.s.position = ' + _level2.bgm.s.position);
        }
      }
    }
    _level2.bgm.gotoAndPlay('stop');
  }

  frame 697 {
    if (_level2.day_flag) {
      _level2.at_list = _level2.day_at_list;
      _level2.df_list = _level2.day_df_list;
      _level2.si_list = _level2.day_si_list;
      _level2.cl_list = _level2.day_cl_list;
      gotoAndPlay('yasen_reversal_entry');
    } else {
      gotoAndPlay('show_result');
    }
    _level2.tstrace('--------------------------------夜戦終了');
  }

  frame 698 {
    stop();
    _level2.tstrace('Scene: result');
    _level2.tstrace('Frame: show_result');
  }

  movieClip 1469  {

    frame 2 {
      tr_obj = new LoadVars();
      recv1_obj = new LoadVars();
      lop = new Object();
      recv1_obj.onLoad = function (success) {
        if (success) {
          recv = _level2.result_act.recv1_obj.svdata;
          if (recv == undefined) {
            _level2.tstrace('Load error: recv is undefined');
            _level1.err_id = 1001;
            if (_level1.npc_battle) {
              _level1.err_mes = 'Load error: data from server undefined for api_req_sortie/battleresult';
            } else {
              _level1.err_mes = 'Load error: data from server undefined for api_req_practice/battle_result';
            }
            _level1.err_from = '戦闘結果';
            _level1.gotoAndPlay('sys_err2');
            _level2.gotoAndStop('prebattle');
          } else {
            delete _level2.result_act.lop;
            _level2.result_act.lop = new Object();
            _level2.result_act.lop = JSON.parse(recv);
            if (_level2.result_act.lop == undefined) {
              _level2.tstrace('Load error: could not parse recv');
              _level1.err_id = 1002;
              if (_level1.npc_battle) {
                _level1.err_mes = 'Load error: could not parse data from server for api_req_sortie/battleresult';
              } else {
                _level1.err_mes = 'Load error: could not parse data from server for api_req_practice/battle_result';
              }
              _level1.err_from = '戦闘結果';
              _level1.gotoAndPlay('sys_err2');
              _level2.gotoAndStop('prebattle');
            } else {
              _level2.result_act.gotoAndStop('suc');
            }
          }
        } else {
          _level1.err_id = 1000;
          _level1.err_from = '戦闘結果';
          if (_level1.npc_battle) {
            _level1.err_mes = 'Receive error for api_req_sortie/battleresult';
          } else {
            _level1.err_mes = 'Receive error for api_req_practice/battle_result';
          }
          _level1.gotoAndPlay('sys_err1');
          _level2.gotoAndStop('prebattle');
        }
      };

      tr_obj.api_token = _level1.userToken;
      tr_obj.api_verno = _level1.FLA_VER;
      if (_level1.npc_battle) {
        tr_obj.sendAndLoad(_level1.BASE_URL + 'api_req_sortie/battleresult', recv1_obj, 'POST');
      } else {
        tr_obj.sendAndLoad(_level1.BASE_URL + 'api_req_practice/battle_result', recv1_obj, 'POST');
      }
      stop();
    }

    frame 3 {
      if (lop.api_result == 1) {
        if (_level1.npc_battle) {
          _level2.get_ship_exp = new Array();
          _level2.get_exp_desc = new Array();
          _level2.win_rank_desc = new Array();
          _level2.enemy_info = new Object();
          _level2.get_flag = new Array();
          _level2.get_material = new Array();
          _level2.get_exp_lvup = new Array();
          _level2.get_exp_lvup[1] = new Array();
          _level2.get_exp_lvup[2] = new Array();
          _level2.get_exp_lvup[3] = new Array();
          _level2.get_exp_lvup[4] = new Array();
          _level2.get_exp_lvup[5] = new Array();
          _level2.get_exp_lvup[6] = new Array();
          _level2.member_lv = lop.api_data.api_member_lv;
          _level2.get_exp_lvup = lop.api_data.api_get_exp_lvup;
          _level2.exptrace = '[';
          i = 0;
          while (i < _level2.get_exp_lvup.length - 1) {
            _level2.exptrace += '[' + _level2.get_exp_lvup[i] + '], ';
            ++i;
          }
          _level2.exptrace += '[' + _level2.get_exp_lvup[i + 1] + ']]';
          _level2.tstrace('_level2.get_exp_lvup = ' + _level2.exptrace);
          _level2.win_rank = lop.api_data.api_win_rank;
          _level2.tstrace('_level2.win_rank = ' + _level2.win_rank);
          _level2.win_rank_desc = lop.api_data.api_win_rank_desc;
          _level2.get_base_exp = lop.api_data.api_get_base_exp;
          _level2.get_ship_exp = lop.api_data.api_get_ship_exp;
          _level2.tstrace('_level2.get_ship_exp = [' + _level2.get_ship_exp + ']');
          _level2.get_exp_desc = lop.api_data.api_get_exp_desc;
          _level2.dests = lop.api_data.api_dests;
          _level2.destsf = lop.api_data.api_destsf;
          _level2.quest_name = lop.api_data.api_quest_name;
          _level2.quest_lv = lop.api_data.api_quest_level;
          _level2.enemy_info = lop.api_data.api_enemy_info;
          _level2.get_material = lop.api_data.api_get_material;
          _level2.get_flag = lop.api_data.api_get_flag;
          _level2.get_base_exp = lop.api_data.api_get_base_exp;
          _level2.mvp = lop.api_data.api_mvp;
          _level2.tstrace('_level2.mvp = ' + _level2.mvp);
          if (_level2.get_flag[0] == 1) {
            _level2.useitem_id = lop.api_data.api_get_useitem.api_useitem_id;
            _level2.useitem_name = lop.api_data.api_get_useitem.api_useitem_name;
          }
          if (_level2.get_flag[1] == 1) {
            _level2.get_ship_id = lop.api_data.api_get_ship.api_ship_id;
            _level2.get_ship_name = lop.api_data.api_get_ship.api_ship_name;
            _level2.get_ship_type = lop.api_data.api_get_ship.api_ship_type;
            _level2.get_ship_getmes = lop.api_data.api_get_ship.api_ship_getmes;
            _level2.tstrace('_level2.get_ship_id = ' + _level2.get_ship_id);
            _level2.tstrace('_level2.get_ship_name = ' + _level2.get_ship_name);
            _level2.tstrace('_level2.get_ship_type = ' + _level2.get_ship_type);
            _level2.tstrace('_level2.get_ship_getmes = ' + _level2.get_ship_getmes);
          }
          if (_level2.get_flag[2] == 1) {
            _level2.get_slotitem_id = lop.api_data.api_get_slotitem.api_slotitem_id;
            _level2.get_slotitem_name = lop.api_data.api_get_slotitem.api_slotitem_name;
          }
          _level2.first_clear = lop.api_data.api_first_clear;
          _level2.get_eventflag = lop.api_data.api_get_eventflag;
          switch (_level2.get_eventflag) {
            case 1:
              _level2.get_eventbonus_material_id = lop.api_data.api_get_eventmaterial.api_material_id;
              _level2.get_eventbonus_material_value = lop.api_data.api_get_eventmaterial.api_value;
              break;
            case 2:
              _level2.get_eventbonus_slotitem_id = lop.api_data.api_get_eventslotitem.api_slotitem_id;
              _level2.get_eventbonus_slotitem_name = lop.api_data.api_get_eventslotitem.api_slotitem_name;
              break;
            case 3:
              _level2.get_eventbonus_ship_id = lop.api_data.api_get_eventship.api_ship_id;
              _level2.get_eventbonus_ship_name = lop.api_data.api_get_eventship.api_ship_name;
              _level2.get_eventbonus_ship_getmes = lop.api_data.api_get_eventship.api_ship_getmes;
              break;
            case 99:
              _level2.get_eventbonus_slotitem_id = [47, 29, 42, 43];
              break;
            default:
              _level2.get_eventflag = 0;
          }
        } else {
          _level2.get_ship_exp = new Array();
          _level2.get_exp_desc = new Array();
          _level2.get_exp_lvup = lop.api_data.api_get_exp_lvup;
          _level2.exptrace = '[';
          i = 0;
          while (i < _level2.get_exp_lvup.length - 1) {
            _level2.exptrace += '[' + _level2.get_exp_lvup[i] + '], ';
            ++i;
          }
          _level2.exptrace += '[' + _level2.get_exp_lvup[i + 1] + ']]';
          _level2.tstrace('_level2.get_exp_lvup = ' + _level2.exptrace);
          _level2.win_rank_desc = new Array();
          _level2.enemy_info = new Object();
          _level2.get_flag = new Array();
          _level2.get_material = new Array();
          _level2.first_clear = 0;
          _level2.member_lv = lop.api_data.api_member_lv;
          _level2.win_rank = lop.api_data.api_win_rank;
          _level2.tstrace('_level2.win_rank = ' + _level2.win_rank);
          _level2.win_rank_desc = lop.api_data.api_win_rank_desc;
          _level2.get_base_exp = lop.api_data.api_get_base_exp;
          _level2.get_ship_exp = lop.api_data.api_get_ship_exp;
          _level2.tstrace('_level2.get_ship_exp = ' + _level2.get_ship_exp);
          _level2.dests = lop.api_data.api_dests;
          _level2.destsf = lop.api_data.api_destsf;
          _level2.enemy_info = lop.api_data.api_enemy_info;
          _level2.get_base_exp = lop.api_data.api_get_base_exp;
          _level2.mvp = lop.api_data.api_mvp;
          _level2.tstrace('_level2.mvp = ' + _level2.mvp);
        }
        _level2.play();
      } else {
        _level2.tstrace('load error');
        _level1.err_id = lop.api_result;
        if (_level1.npc_battle) {
          _level1.err_mes = 'Load error: ' + lop.api_result_msg + ' (api_req_sortie/battleresult)';
        } else {
          _level1.err_mes = 'Load error: ' + lop.api_result_msg + ' (api_req_practice/battle_result)';
        }
        _level1.err_from = '戦闘結果';
        _level1.gotoAndPlay('sys_err2');
        _level2.gotoAndStop('prebattle');
      }
      stop();
    }
  }

  movieClip 1471  {

    frame 1 {
      gotoAndStop(2);
    }

    frame 2 {
      stop();
    }

    frame 3 {
      bgmVolume = _level1.bgmVolume;
      if (tov > bgmVolume) {
        fug = 1;
      } else {
        fug = -1;
      }
      par = (tov - bgmVolume) / sp;
      bgmVol = bgmVolume;
    }

    frame 4 {
      bgmVol += par;
    }

    frame 5 {
      if (fug > 0 && bgmVol > tov) {
        bgmVol = tov;
        _level1.bgm_obj.setVolume(bgmVol);
        _level1.bgmVolume = bgmVol;
        gotoAndPlay(1);
      } else {
        if (fug < 0 && bgmVol < tov) {
          bgmVol = tov;
          _level1.bgm_obj.setVolume(bgmVol);
          _level1.bgmVolume = bgmVol;
          gotoAndPlay(1);
        } else {
          _level1.bgm_obj.setVolume(bgmVol);
          gotoAndPlay(4);
        }
      }
    }
  }

  instance of movieClip 65  {

    onClipEvent (load) {
      useHandCursor = false;
    }

    onClipEvent (press) {
    }
  }

  frame 699 {
    _level2.scene = _level2.SCENE_RESULT;
    stop();
    sokuhanFlag = false;
    fhp = 0;
    ehp = 0;
    fnhp = 0;
    enhp = 0;
    needexp = [-1, 0, 0, 0, 0, 0, 0];
    needexp2 = [-1, 0, 0, 0, 0, 0, 0];
    i = 1;
    while (i <= 6) {
      fhp += maxhps[i];
      ehp += maxhps[i + 6];
      fnhp += nowhps[i] > 0 ? nowhps[i] : 0;
      enhp += nowhps[i + 6] > 0 ? nowhps[i + 6] : 0;
      needexp[i] = 200 + random(1000);
      needexp2[i] = needexp[i] + 200 + random(1000);
      ++i;
    }
    userinfo_f = [_level1.userInfo.api_nickname, _level1.member_lv, _level1.userInfo.api_rank, _level1.myDeck[_level1.goDeck].api_name];
    userinfo_e = ['', _level2.enemy_info.api_level, _level2.enemy_info.api_rank, _level2.enemy_info.api_deck_name];
    ship_f = [null, 'undefined', 'undefined', 'undefined', 'undefined', 'undefined', 'undefined'];
    ship_e = [null, _level2.ship_name[7], _level2.ship_name[8], _level2.ship_name[9], _level2.ship_name[10], _level2.ship_name[11], _level2.ship_name[12]];
    ship_lv_f = [null];
    i = 1;
    while (i <= 6) {
      tempid = _level1.getOldID(_level1.myDeck[_level1.goDeck].api_ship[i - 1]);
      ship_f[i] = _level1.FULL_my_ship[tempid].api_name;
      var temp = _level1.FULL_my_ship[tempid];
      ship_lv_f[i] = temp.api_lv;
      ++i;
    }
    ship_lv_e = ship_lve;
    if (get_flag[1] == 1) {
      getship = [get_ship_id + 1, get_ship_type, get_ship_name, get_ship_getmes];
    } else {
      if (get_flag[2] == 1) {
        getship = [slotitem_id, '', '', slotitem_name + 'を入手しました。'];
      }
    }
    starnum = 15;
    b_e_hpf = 0;
    b_e_hpe = 0;
    dobon = [false, false, false, false, false, false, false, false, false, false, false, false, false];
    i = 1;
    while (i <= 6) {
      if (maxhps[i] > -1 && nowhps[i] > 0) {
        b_e_hpf += nowhps[i];
      } else {
        dobon[i] = true;
      }
      if (maxhps[i + 6] > -1 && nowhps[i + 6] > 0) {
        b_e_hpe += nowhps[i + 6];
        _level2.perfectrank = false;
      } else {
        dobon[i + 6] = true;
      }
      ++i;
    }
    _level2.edam_par = ((b_s_hpf - b_e_hpf) / b_s_hpf) * 100;
    _level2.fdam_par = ((b_s_hpe - b_e_hpe) / b_s_hpe) * 100;
    if (_level2.win_rank == 'E' && _level2.fdam_par > _level2.edam_par) {
      tempd = _level2.fdam_par;
      _level2.fdam_par = _level2.edam_par;
      _level2.edam_par = tempd;
    }
  }

  movieClip 1474  {

    frame 15 {
      _level2.play();
    }
  }

  movieClip 1477  {

    frame 1 {
      if (_level2.dispf.next1 != undefined && _level2.dispf.next1.c_exp == NaN) {
        _level2.tstrace('NaN detected in _level2.dispf.next1.c_exp at frame ' + _level2._currentFrame);
      }
      if (_level2.dispf.next2 != undefined && _level2.dispf.next2.c_exp == NaN) {
        _level2.tstrace('NaN detected in _level2.dispf.next2.c_exp at frame ' + _level2._currentFrame);
      }
      if (_level2.dispf.next3 != undefined && _level2.dispf.next3.c_exp == NaN) {
        _level2.tstrace('NaN detected in _level2.dispf.next3.c_exp at frame ' + _level2._currentFrame);
      }
      if (_level2.dispf.next4 != undefined && _level2.dispf.next4.c_exp == NaN) {
        _level2.tstrace('NaN detected in _level2.dispf.next4.c_exp at frame ' + _level2._currentFrame);
      }
      if (_level2.dispf.next5 != undefined && _level2.dispf.next5.c_exp == NaN) {
        _level2.tstrace('NaN detected in _level2.dispf.next5.c_exp at frame ' + _level2._currentFrame);
      }
      if (_level2.dispf.next6 != undefined && _level2.dispf.next6.c_exp == NaN) {
        _level2.tstrace('NaN detected in _level2.dispf.next6.c_exp at frame ' + _level2._currentFrame);
      }
    }

    frame 2 {
      if (_level2.dispf.next1 != undefined && _level2.dispf.next1.c_exp == NaN) {
        _level2.tstrace('NaN detected in _level2.dispf.next1.c_exp at frame ' + _level2._currentFrame);
      }
      if (_level2.dispf.next2 != undefined && _level2.dispf.next2.c_exp == NaN) {
        _level2.tstrace('NaN detected in _level2.dispf.next2.c_exp at frame ' + _level2._currentFrame);
      }
      if (_level2.dispf.next3 != undefined && _level2.dispf.next3.c_exp == NaN) {
        _level2.tstrace('NaN detected in _level2.dispf.next3.c_exp at frame ' + _level2._currentFrame);
      }
      if (_level2.dispf.next4 != undefined && _level2.dispf.next4.c_exp == NaN) {
        _level2.tstrace('NaN detected in _level2.dispf.next4.c_exp at frame ' + _level2._currentFrame);
      }
      if (_level2.dispf.next5 != undefined && _level2.dispf.next5.c_exp == NaN) {
        _level2.tstrace('NaN detected in _level2.dispf.next5.c_exp at frame ' + _level2._currentFrame);
      }
      if (_level2.dispf.next6 != undefined && _level2.dispf.next6.c_exp == NaN) {
        _level2.tstrace('NaN detected in _level2.dispf.next6.c_exp at frame ' + _level2._currentFrame);
      }
      gotoAndPlay(1);
    }
  }

  frame 700 {
    stop();
    upperbar.nex = 6;
    upperbar.play();
  }

  movieClip 1481  {
  }

  movieClip 1482  {

    frame 10 {
      stop();
      _level2.play();
    }
  }

  frame 701 {
    if (_level1.npc_battle) {
      if (quest_name == undefined) {
        backset.quest_name = '';
      } else {
        backset.quest_name = '「' + quest_name + '」';
      }
    } else {
      backset.quest_name = '演習';
    }
    backset.disp_lv.gotoAndStop(quest_lv);
    dispf.c_name = userinfo_f[0];
    _level2.rankNumber = _global.UserData.getRank();
    dispf.c_lv = _level1.userInfo.api_level + '[' + _global.methods.getRankName(_level2.rankNumber) + ']';
    dispf.c_fleet = userinfo_f[3];
    dispe.c_name = userinfo_e[0];
    dispe.c_lv = userinfo_e[1] + '[' + userinfo_e[2] + ']';
    dispe.c_fleet = userinfo_e[3];
    i = 1;
    while (i <= 6) {
      tellTarget (''dispf.s' + i') {
        sid = _level1.getOldID(_level1.myDeck[_level1.goDeck].api_ship[_level2.i - 1]);
      }
      if (ship_ke[i] == -1) {
        _level2.dispe['s' + i].flg = false;
        _level2.dispe['info' + i]._visible = false;
      } else {
        _level2.dispe['s' + i].flg = true;
        tellTarget (''dispe.s' + _level2.i') {
          sid = _level2.ship_ke[_level2.i] + 10000;
        }
        tellTarget (''dispe.info' + i') {
          c_ship = _level2.ship_e[_level2.i];
          c_lv = _level2.ship_lv_e[_level2.i];
          _level2.tstrace('_level2.ship_name[' + (_level2.i + 6) + '] = ' + _level2.ship_name[_level2.i + 6]);
          _level2.tstrace('_level2.ship_lv_e[' + _level2.i + '] = ' + _level2.ship_lv_e[_level2.i]);
        }
      }
      if (ship_kf[i] == -1) {
        _level2.dispf['s' + i].flg = false;
        _level2.dispf['info' + i]._visible = false;
      } else {
        _level2.dispf['s' + i].flg = true;
        tellTarget (''dispf.info' + _level2.i') {
          c_ship = _level2.ship_f[_level2.i];
          c_lv = _level2.ship_lv_f[_level2.i];
        }
      }
      ++i;
    }
    tellTarget ('dispf') {
      ene = false;
      dam = _level2.fdam_par;
    }
    tellTarget ('dispe') {
      ene = true;
      dam = _level2.edam_par;
    }
  }

  movieClip 1485  {
  }

  movieClip 1490  {
  }

  movieClip 1498  {

    frame 35 {
      stop();
      _parent.gotoAndStop(1);
    }
  }

  movieClip 1499  {

    frame 1 {
      stop();
    }

    frame 2 {
      _level2.playSFX('judgment_levelUp.mp3');
      stop();
      lvlup.play();
    }
  }

  movieClip 1508  {

    frame 1 {
      stop();
    }
  }

  movieClip 1511  {
  }

  movieClip 1512  {

    frame 1 {
      var i = 1;
      while (i <= 6) {
        tellTarget (''s' + i + '.now_con'') {
          gotoAndStop(1);
        }
        eval('s' + i)._visible = false;
        eval('next' + i)._visible = false;
        ++i;
      }
      flg = 0;
      chk = 0;
      _level2.banldr1 = new MovieClipLoader();
      _level2.banlsnr1 = new Object();
      _level2.banid1 = _level2.ship_kf[1] - 1;
      _level2.banldr1.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + _level2.banid1 + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.banid1)].api_version, s1.girl);
      _level2.banldr1.addListener(_level2.banlsnr1);
      _level2.banlsnr1.onLoadInit = function () {
        _level2.tstrace('Loading character ' + _level2.banid1 + ' banner artwork');
        if (_level2.taihastate[0]) {
          _level2.dispf.s1.girl.gotoAndStop(3);
          _level2.dispf.s1.girl._x = 0;
          _level2.dispf.s1.girl._y = 0;
        } else {
          _level2.dispf.s1.girl.gotoAndStop(2);
          _level2.dispf.s1.girl._x = 0;
          _level2.dispf.s1.girl._y = 0;
        }
        _level2.banldr1.removeListener(_level2.banlsnr1);
      };

      _level2.banlsnr1.onLoadError = function () {
        _level2.tstrace('Failed to load character ' + _level2.banid1 + ' banner artwork');
        _level2.dispf.s1.attachMovie('nodatabanner', 'girl', 1);
        _level2.dispf.s1.girl._x = 0;
        _level2.dispf.s1.girl._y = 0;
        _level2.banldr1.removeListener(_level2.banlsnr1);
      };

      if (_level2.ship_kf[2] != -1) {
        _level2.banldr2 = new MovieClipLoader();
        _level2.banlsnr2 = new Object();
        _level2.banid2 = _level2.ship_kf[2] - 1;
        _level2.banldr2.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + _level2.banid2 + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.banid2)].api_version, s2.girl);
        _level2.banldr2.addListener(_level2.banlsnr2);
        _level2.banlsnr2.onLoadInit = function () {
          _level2.tstrace('Loading character ' + _level2.banid2 + ' banner artwork');
          if (_level2.taihastate[1]) {
            _level2.dispf.s2.girl.gotoAndStop(3);
            _level2.dispf.s2.girl._x = 0;
            _level2.dispf.s2.girl._y = 0;
          } else {
            _level2.dispf.s2.girl.gotoAndStop(2);
            _level2.dispf.s2.girl._x = 0;
            _level2.dispf.s2.girl._y = 0;
          }
          _level2.banldr2.removeListener(_level2.banlsnr2);
        };

        _level2.banlsnr2.onLoadError = function () {
          _level2.tstrace('Failed to load character ' + _level2.banid2 + ' banner artwork');
          _level2.dispf.s2.attachMovie('nodatabanner', 'girl', 1);
          _level2.dispf.s2.girl._x = 0;
          _level2.dispf.s2.girl._y = 0;
          _level2.banldr2.removeListener(_level2.banlsnr2);
        };

      }
      if (_level2.ship_kf[3] != -1) {
        _level2.banldr3 = new MovieClipLoader();
        _level2.banlsnr3 = new Object();
        _level2.banid3 = _level2.ship_kf[3] - 1;
        _level2.banldr3.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + _level2.banid3 + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.banid3)].api_version, s3.girl);
        _level2.banldr3.addListener(_level2.banlsnr3);
        _level2.banlsnr3.onLoadInit = function () {
          _level2.tstrace('Loading character ' + _level2.banid3 + ' banner artwork');
          if (_level2.taihastate[2]) {
            _level2.dispf.s3.girl.gotoAndStop(3);
            _level2.dispf.s3.girl._x = 0;
            _level2.dispf.s3.girl._y = 0;
          } else {
            _level2.dispf.s3.girl.gotoAndStop(2);
            _level2.dispf.s3.girl._x = 0;
            _level2.dispf.s3.girl._y = 0;
          }
          _level2.banldr3.removeListener(_level2.banlsnr3);
        };

        _level2.banlsnr3.onLoadError = function () {
          _level2.tstrace('Failed to load character ' + _level2.banid3 + ' banner artwork');
          _level2.dispf.s3.attachMovie('nodatabanner', 'girl', 1);
          _level2.dispf.s3.girl._x = 0;
          _level2.dispf.s3.girl._y = 0;
          _level2.banldr3.removeListener(_level2.banlsnr3);
        };

      }
      if (_level2.ship_kf[4] != -1) {
        _level2.banldr4 = new MovieClipLoader();
        _level2.banlsnr4 = new Object();
        _level2.banid4 = _level2.ship_kf[4] - 1;
        _level2.banldr4.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + _level2.banid4 + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.banid4)].api_version, s4.girl);
        _level2.banldr4.addListener(_level2.banlsnr4);
        _level2.banlsnr4.onLoadInit = function () {
          _level2.tstrace('Loading character ' + _level2.banid4 + ' banner artwork');
          if (_level2.taihastate[3]) {
            _level2.dispf.s4.girl.gotoAndStop(3);
            _level2.dispf.s4.girl._x = 0;
            _level2.dispf.s4.girl._y = 0;
          } else {
            _level2.dispf.s4.girl.gotoAndStop(2);
            _level2.dispf.s4.girl._x = 0;
            _level2.dispf.s4.girl._y = 0;
          }
          _level2.banldr4.removeListener(_level2.banlsnr4);
        };

        _level2.banlsnr4.onLoadError = function () {
          _level2.tstrace('Failed to load character ' + _level2.banid4 + ' banner artwork');
          _level2.dispf.s4.attachMovie('nodatabanner', 'girl', 1);
          _level2.dispf.s4.girl._x = 0;
          _level2.dispf.s4.girl._y = 0;
          _level2.banldr4.removeListener(_level2.banlsnr4);
        };

      }
      if (_level2.ship_kf[5] != -1) {
        _level2.banldr5 = new MovieClipLoader();
        _level2.banlsnr5 = new Object();
        _level2.banid5 = _level2.ship_kf[5] - 1;
        _level2.banldr5.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + _level2.banid5 + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.banid5)].api_version, s5.girl);
        _level2.banldr5.addListener(_level2.banlsnr5);
        _level2.banlsnr5.onLoadInit = function () {
          _level2.tstrace('Loading character ' + _level2.banid5 + ' banner artwork');
          if (_level2.taihastate[4]) {
            _level2.dispf.s5.girl.gotoAndStop(3);
            _level2.dispf.s5.girl._x = 0;
            _level2.dispf.s5.girl._y = 0;
          } else {
            _level2.dispf.s5.girl.gotoAndStop(2);
            _level2.dispf.s5.girl._x = 0;
            _level2.dispf.s5.girl._y = 0;
          }
          _level2.banldr5.removeListener(_level2.banlsnr5);
        };

        _level2.banlsnr5.onLoadError = function () {
          _level2.tstrace('Failed to load character ' + _level2.banid5 + ' banner artwork');
          _level2.dispf.s5.attachMovie('nodatabanner', 'girl', 1);
          _level2.dispf.s5.girl._x = 0;
          _level2.dispf.s5.girl._y = 0;
          _level2.banldr5.removeListener(_level2.banlsnr5);
        };

      }
      if (_level2.ship_kf[6] != -1) {
        _level2.banldr6 = new MovieClipLoader();
        _level2.banlsnr6 = new Object();
        _level2.banid6 = _level2.ship_kf[6] - 1;
        _level2.banldr6.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + _level2.banid6 + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.banid6)].api_version, s6.girl);
        _level2.banldr6.addListener(_level2.banlsnr6);
        _level2.banlsnr6.onLoadInit = function () {
          _level2.tstrace('Loading character ' + _level2.banid6 + ' banner artwork');
          if (_level2.taihastate[5]) {
            _level2.dispf.s6.girl.gotoAndStop(3);
            _level2.dispf.s6.girl._x = 0;
            _level2.dispf.s6.girl._y = 0;
          } else {
            _level2.dispf.s6.girl.gotoAndStop(2);
            _level2.dispf.s6.girl._x = 0;
            _level2.dispf.s6.girl._y = 0;
          }
          _level2.banldr6.removeListener(_level2.banlsnr6);
        };

        _level2.banlsnr6.onLoadError = function () {
          _level2.tstrace('Failed to load character ' + _level2.banid6 + ' banner artwork');
          _level2.dispf.s6.attachMovie('nodatabanner', 'girl', 1);
          _level2.dispf.s6.girl._x = 0;
          _level2.dispf.s6.girl._y = 0;
          _level2.banldr6.removeListener(_level2.banlsnr6);
        };

      }
    }

    frame 6 {
      if (s1.flg) {
        s1._visible = true;
        if (s1.sid < 10000) {
          ch = _level1.getCondition(_level2.nowhps[1], _level2.maxhps[1]);
          s1.now_con.gotoAndStop(ch + 3);
          if (ch > 2) {
            s1.girl.gotoAndStop(3);
          }
          _level2.tstrace('_level2.nowhps[1] = ' + _level2.nowhps[1]);
          if (_level2.gekichinstate[0] == true) {
            filter = _level1.setMyFilter(0);
            s1.girl.filters = [filter];
            s1.now_con.gotoAndStop(8);
          } else {
            filter = _level1.setMyFilter(1);
            s1.girl.filters = [filter];
          }
        }
      }
    }

    frame 8 {
      if (s2.flg) {
        s2._visible = true;
        if (s2.sid < 10000) {
          ch = _level1.getCondition(_level2.nowhps[2], _level2.maxhps[2]);
          s2.now_con.gotoAndStop(ch + 3);
          if (ch > 2) {
            s2.girl.gotoAndStop(3);
          }
          _level2.tstrace('_level2.nowhps[2] = ' + _level2.nowhps[2]);
          if (_level2.gekichinstate[1] == true) {
            filter = _level1.setMyFilter(0);
            s2.girl.filters = [filter];
            s2.now_con.gotoAndStop(8);
          } else {
            filter = _level1.setMyFilter(1);
            s2.girl.filters = [filter];
          }
        }
      }
    }

    frame 10 {
      if (s3.flg) {
        s3._visible = true;
        if (s3.sid < 10000) {
          ch = _level1.getCondition(_level2.nowhps[3], _level2.maxhps[3]);
          s3.now_con.gotoAndStop(ch + 3);
          if (ch > 2) {
            s3.girl.gotoAndStop(3);
          }
          _level2.tstrace('_level2.nowhps[3] = ' + _level2.nowhps[3]);
          if (_level2.gekichinstate[2] == true) {
            filter = _level1.setMyFilter(0);
            s3.girl.filters = [filter];
            s3.now_con.gotoAndStop(8);
          } else {
            filter = _level1.setMyFilter(1);
            s3.girl.filters = [filter];
          }
        }
      }
    }

    frame 12 {
      if (s4.flg) {
        s4._visible = true;
        if (s4.sid < 10000) {
          ch = _level1.getCondition(_level2.nowhps[4], _level2.maxhps[4]);
          s4.now_con.gotoAndStop(ch + 3);
          if (ch > 2) {
            s4.girl.gotoAndStop(3);
          }
          _level2.tstrace('_level2.nowhps[4] = ' + _level2.nowhps[4]);
          if (_level2.gekichinstate[3] == true) {
            filter = _level1.setMyFilter(0);
            s4.girl.filters = [filter];
            s4.now_con.gotoAndStop(8);
          } else {
            filter = _level1.setMyFilter(1);
            s4.girl.filters = [filter];
          }
        }
      }
    }

    frame 14 {
      if (s5.flg) {
        s5._visible = true;
        if (s5.sid < 10000) {
          ch = _level1.getCondition(_level2.nowhps[5], _level2.maxhps[5]);
          s5.now_con.gotoAndStop(ch + 3);
          if (ch > 2) {
            s5.girl.gotoAndStop(3);
          }
          _level2.tstrace('_level2.nowhps[5] = ' + _level2.nowhps[5]);
          if (_level2.gekichinstate[4] == true) {
            filter = _level1.setMyFilter(0);
            s5.girl.filters = [filter];
            s5.now_con.gotoAndStop(8);
          } else {
            filter = _level1.setMyFilter(1);
            s5.girl.filters = [filter];
          }
        }
      }
    }

    frame 16 {
      if (s6.flg) {
        s6._visible = true;
        if (s6.sid < 10000) {
          ch = _level1.getCondition(_level2.nowhps[6], _level2.maxhps[6]);
          s6.now_con.gotoAndStop(ch + 3);
          if (ch > 2) {
            s6.girl.gotoAndStop(3);
          }
          _level2.tstrace('_level2.nowhps[6] = ' + _level2.nowhps[6]);
          if (_level2.gekichinstate[5] == true) {
            filter = _level1.setMyFilter(0);
            s6.girl.filters = [filter];
            s6.now_con.gotoAndStop(8);
          } else {
            filter = _level1.setMyFilter(1);
            s6.girl.filters = [filter];
          }
        }
      }
    }

    frame 24 {
      ful = bar.bar._width;
      if (!ene) {
        bar.bar.gotoAndStop(2);
      }
    }

    frame 26 {
      chk = ((bar.bar._x + ful) / ful) * 100;
      if (chk < dam) {
        bar.bar._x += 7;
        gotoAndPlay('bar_loop');
      } else {
        stop();
        flg = 1;
      }
      if (bar.bar._x > 0) {
        bar.bar._x = 0;
      }
    }
  }

  movieClip 1528  {

    frame 1 {
      stop();
    }
  }

  movieClip 1531  {

    frame 1 {
      var i = 1;
      while (i <= 6) {
        tellTarget (''s' + i + '.now_con'') {
          gotoAndStop(1);
        }
        eval('s' + i)._visible = false;
        eval('next' + i)._visible = false;
        eval('enemy_name' + i)._visible = false;
        eval('estr' + i)._visible = false;
        ++i;
      }
      enemy_name1.text = _level2.ship_name[7];
      enemy_name2.text = _level2.ship_name[8];
      enemy_name3.text = _level2.ship_name[9];
      enemy_name4.text = _level2.ship_name[10];
      enemy_name5.text = _level2.ship_name[11];
      enemy_name6.text = _level2.ship_name[12];
      if (_level1.npc_battle) {
        estr1.gotoAndStop(_level2.ship_ke[1]);
        estr2.gotoAndStop(_level2.ship_ke[2]);
        estr3.gotoAndStop(_level2.ship_ke[3]);
        estr4.gotoAndStop(_level2.ship_ke[4]);
        estr5.gotoAndStop(_level2.ship_ke[5]);
        estr6.gotoAndStop(_level2.ship_ke[6]);
      }
      flg = 0;
      chk = 0;
      _level2.banldr7 = new MovieClipLoader();
      _level2.banlsnr7 = new Object();
      _level2.banid7 = _level2.ship_ke[1];
      if (!_level1.npc_battle) {
        --_level2.banid7;
      }
      _level2.banldr7.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + _level2.banid7 + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.banid7)].api_version, s1.girl);
      _level2.banldr7.addListener(_level2.banlsnr7);
      _level2.banlsnr7.onLoadInit = function () {
        _level2.tstrace('Loading character ' + _level2.banid7 + ' banner artwork');
        _level2.dispe.s1.girl.gotoAndStop(2);
        _level2.dispe.s1.girl._x = 0;
        _level2.dispe.s1.girl._y = 0;
        _level2.banldr7.removeListener(_level2.banlsnr7);
      };

      _level2.banlsnr7.onLoadError = function () {
        _level2.tstrace('Failed to load character ' + _level2.banid7 + ' banner artwork');
        _level2.dispe.s1.attachMovie('nodatabanner', 'girl', 1);
        _level2.dispe.s1.girl._x = 0;
        _level2.dispe.s1.girl._y = 0;
        _level2.banldr7.removeListener(_level2.banlsnr7);
      };

      if (_level2.ship_ke[2] != -1) {
        _level2.banldr8 = new MovieClipLoader();
        _level2.banlsnr8 = new Object();
        _level2.banid8 = _level2.ship_ke[2];
        if (!_level1.npc_battle) {
          --_level2.banid8;
        }
        _level2.banldr8.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + _level2.banid8 + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.banid8)].api_version, s2.girl);
        _level2.banldr8.addListener(_level2.banlsnr8);
        _level2.banlsnr8.onLoadInit = function () {
          _level2.tstrace('Loading character ' + _level2.banid8 + ' banner artwork');
          _level2.dispe.s2.girl.gotoAndStop(2);
          _level2.dispe.s2.girl._x = 0;
          _level2.dispe.s2.girl._y = 0;
          _level2.banldr8.removeListener(_level2.banlsnr8);
        };

        _level2.banlsnr8.onLoadError = function () {
          _level2.tstrace('Failed to load character ' + _level2.banid8 + ' banner artwork');
          _level2.dispe.s2.attachMovie('nodatabanner', 'girl', 1);
          _level2.dispe.s2.girl._x = 0;
          _level2.dispe.s2.girl._y = 0;
          _level2.banldr8.removeListener(_level2.banlsnr8);
        };

      }
      if (_level2.ship_ke[3] != -1) {
        _level2.banldr9 = new MovieClipLoader();
        _level2.banlsnr9 = new Object();
        _level2.banid9 = _level2.ship_ke[3];
        if (!_level1.npc_battle) {
          --_level2.banid9;
        }
        _level2.banldr9.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + _level2.banid9 + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.banid9)].api_version, s3.girl);
        _level2.banldr9.addListener(_level2.banlsnr9);
        _level2.banlsnr9.onLoadInit = function () {
          _level2.tstrace('Loading character ' + _level2.banid9 + ' banner artwork');
          _level2.dispe.s3.girl.gotoAndStop(2);
          _level2.dispe.s3.girl._x = 0;
          _level2.dispe.s3.girl._y = 0;
          _level2.banldr9.removeListener(_level2.banlsnr9);
        };

        _level2.banlsnr9.onLoadError = function () {
          _level2.tstrace('Failed to load character ' + _level2.banid9 + ' banner artwork');
          _level2.dispe.s3.attachMovie('nodatabanner', 'girl', 1);
          _level2.dispe.s3.girl._x = 0;
          _level2.dispe.s3.girl._y = 0;
          _level2.banldr9.removeListener(_level2.banlsnr9);
        };

      }
      if (_level2.ship_ke[4] != -1) {
        _level2.banldr10 = new MovieClipLoader();
        _level2.banlsnr10 = new Object();
        _level2.banid10 = _level2.ship_ke[4];
        if (!_level1.npc_battle) {
          --_level2.banid10;
        }
        _level2.banldr10.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + _level2.banid10 + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.banid10)].api_version, s4.girl);
        _level2.banldr10.addListener(_level2.banlsnr10);
        _level2.banlsnr10.onLoadInit = function () {
          _level2.tstrace('Loading character ' + _level2.banid10 + ' banner artwork');
          _level2.dispe.s4.girl.gotoAndStop(2);
          _level2.dispe.s4.girl._x = 0;
          _level2.dispe.s4.girl._y = 0;
          _level2.banldr10.removeListener(_level2.banlsnr10);
        };

        _level2.banlsnr10.onLoadError = function () {
          _level2.tstrace('Failed to load character ' + _level2.banid10 + ' banner artwork');
          _level2.dispe.s4.attachMovie('nodatabanner', 'girl', 1);
          _level2.dispe.s4.girl._x = 0;
          _level2.dispe.s4.girl._y = 0;
          _level2.banldr10.removeListener(_level2.banlsnr10);
        };

      }
      if (_level2.ship_ke[5] != -1) {
        _level2.banldr11 = new MovieClipLoader();
        _level2.banlsnr11 = new Object();
        _level2.banid11 = _level2.ship_ke[5];
        if (!_level1.npc_battle) {
          --_level2.banid11;
        }
        _level2.banldr11.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + _level2.banid11 + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.banid11)].api_version, s5.girl);
        _level2.banldr11.addListener(_level2.banlsnr11);
        _level2.banlsnr11.onLoadInit = function () {
          _level2.tstrace('Loading character ' + _level2.banid11 + ' banner artwork');
          _level2.dispe.s5.girl.gotoAndStop(2);
          _level2.dispe.s5.girl._x = 0;
          _level2.dispe.s5.girl._y = 0;
          _level2.banldr11.removeListener(_level2.banlsnr11);
        };

        _level2.banlsnr11.onLoadError = function () {
          _level2.tstrace('Failed to load character ' + _level2.banid11 + ' banner artwork');
          _level2.dispe.s5.attachMovie('nodatabanner', 'girl', 1);
          _level2.dispe.s5.girl._x = 0;
          _level2.dispe.s5.girl._y = 0;
          _level2.banldr11.removeListener(_level2.banlsnr11);
        };

      }
      if (_level2.ship_ke[6] != -1) {
        _level2.banldr12 = new MovieClipLoader();
        _level2.banlsnr12 = new Object();
        _level2.banid12 = _level2.ship_ke[6];
        if (!_level1.npc_battle) {
          --_level2.banid12;
        }
        _level2.banldr12.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + _level2.banid12 + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.banid12)].api_version, s6.girl);
        _level2.banldr12.addListener(_level2.banlsnr12);
        _level2.banlsnr12.onLoadInit = function () {
          _level2.tstrace('Loading character ' + _level2.banid12 + ' banner artwork');
          _level2.dispe.s6.girl.gotoAndStop(2);
          _level2.dispe.s6.girl._x = 0;
          _level2.dispe.s6.girl._y = 0;
          _level2.banldr12.removeListener(_level2.banlsnr12);
        };

        _level2.banlsnr12.onLoadError = function () {
          _level2.tstrace('Failed to load character ' + _level2.banid12 + ' banner artwork');
          _level2.dispe.s6.attachMovie('nodatabanner', 'girl', 1);
          _level2.dispe.s6.girl._x = 0;
          _level2.dispe.s6.girl._y = 0;
          _level2.banldr12.removeListener(_level2.banlsnr12);
        };

      }
    }

    frame 6 {
      deckname.text = _level2.enemy_info.api_deck_name;
    }

    frame 8 {
      if (s1.flg) {
        s1._visible = true;
        enemy_name1._visible = true;
        estr1._visible = true;
        ch = _level1.getCondition(_level2.nowhps[7], _level2.maxhps[7]);
        s1.now_con.gotoAndStop(ch + 3 + _level2.airbaseOffset(_level2.ship_ke[1]));
        if (ch > 2) {
          _level2.tstrace('_level2.ship_ke[1] = ' + _level2.ship_ke[1]);
          s1.girl.gotoAndStop(3);
        }
        _level2.tstrace('_level2.nowhps[7] = ' + _level2.nowhps[7]);
        if (_level2.nowhps[7] <= 0) {
          filter = _level1.setMyFilter(0);
          s1.girl.filters = [filter];
          if (_level1.npc_battle) {
            s1.now_con.gotoAndStop(8 + _level2.airbaseOffset(_level2.ship_ke[1]));
          } else {
            s1.now_con.gotoAndStop(7 + _level2.airbaseOffset(_level2.ship_ke[1]));
          }
        } else {
          filter = _level1.setMyFilter(1);
          s1.girl.filters = [filter];
        }
      }
    }

    frame 10 {
      if (s1.flg) {
        if (ch > 2) {
          s1.girl.gotoAndStop(3);
        }
      }
      if (s2.flg) {
        s2._visible = true;
        enemy_name2._visible = true;
        estr2._visible = true;
        ch = _level1.getCondition(_level2.nowhps[8], _level2.maxhps[8]);
        s2.now_con.gotoAndStop(ch + 3 + _level2.airbaseOffset(_level2.ship_ke[2]));
        if (ch > 2) {
          _level2.tstrace('_level2.ship_ke[2] = ' + _level2.ship_ke[2]);
          s2.girl.gotoAndStop(3);
        }
        _level2.tstrace('_level2.nowhps[8] = ' + _level2.nowhps[8]);
        if (_level2.nowhps[8] <= 0) {
          filter = _level1.setMyFilter(0);
          s2.girl.filters = [filter];
          if (_level1.npc_battle) {
            s2.now_con.gotoAndStop(8 + _level2.airbaseOffset(_level2.ship_ke[2]));
          } else {
            s2.now_con.gotoAndStop(7 + _level2.airbaseOffset(_level2.ship_ke[2]));
          }
        } else {
          filter = _level1.setMyFilter(1);
          s2.girl.filters = [filter];
        }
      }
    }

    frame 12 {
      if (s2.flg) {
        if (ch > 2) {
          s2.girl.gotoAndStop(3);
        }
      }
      if (s3.flg) {
        s3._visible = true;
        enemy_name3._visible = true;
        estr3._visible = true;
        ch = _level1.getCondition(_level2.nowhps[9], _level2.maxhps[9]);
        s3.now_con.gotoAndStop(ch + 3 + _level2.airbaseOffset(_level2.ship_ke[3]));
        if (ch > 2) {
          _level2.tstrace('_level2.ship_ke[3] = ' + _level2.ship_ke[3]);
          s3.girl.gotoAndStop(3);
        }
        _level2.tstrace('_level2.nowhps[9] = ' + _level2.nowhps[9]);
        if (_level2.nowhps[9] <= 0) {
          filter = _level1.setMyFilter(0);
          s3.girl.filters = [filter];
          if (_level1.npc_battle) {
            s3.now_con.gotoAndStop(8 + _level2.airbaseOffset(_level2.ship_ke[3]));
          } else {
            s3.now_con.gotoAndStop(7 + _level2.airbaseOffset(_level2.ship_ke[3]));
          }
        } else {
          filter = _level1.setMyFilter(1);
          s3.girl.filters = [filter];
        }
      }
    }

    frame 14 {
      if (s3.flg) {
        if (ch > 2) {
          s3.girl.gotoAndStop(3);
        }
      }
      if (s4.flg) {
        s4._visible = true;
        enemy_name4._visible = true;
        estr4._visible = true;
        ch = _level1.getCondition(_level2.nowhps[10], _level2.maxhps[10]);
        s4.now_con.gotoAndStop(ch + 3 + _level2.airbaseOffset(_level2.ship_ke[4]));
        if (ch > 2) {
          _level2.tstrace('_level2.ship_ke[4] = ' + _level2.ship_ke[4]);
          s4.girl.gotoAndStop(3);
        }
        _level2.tstrace('_level2.nowhps[10] = ' + _level2.nowhps[10]);
        if (_level2.nowhps[10] <= 0) {
          filter = _level1.setMyFilter(0);
          s4.girl.filters = [filter];
          if (_level1.npc_battle) {
            s4.now_con.gotoAndStop(8 + _level2.airbaseOffset(_level2.ship_ke[4]));
          } else {
            s4.now_con.gotoAndStop(7 + _level2.airbaseOffset(_level2.ship_ke[4]));
          }
        } else {
          filter = _level1.setMyFilter(1);
          s4.girl.filters = [filter];
        }
      }
    }

    frame 16 {
      if (s4.flg) {
        if (ch > 2) {
          s4.girl.gotoAndStop(3);
        }
      }
      if (s5.flg) {
        s5._visible = true;
        enemy_name5._visible = true;
        estr5._visible = true;
        ch = _level1.getCondition(_level2.nowhps[11], _level2.maxhps[11]);
        s5.now_con.gotoAndStop(ch + 3 + _level2.airbaseOffset(_level2.ship_ke[5]));
        if (ch > 2) {
          _level2.tstrace('_level2.ship_ke[5] = ' + _level2.ship_ke[5]);
          s5.girl.gotoAndStop(3);
        }
        _level2.tstrace('_level2.nowhps[11] = ' + _level2.nowhps[11]);
        if (_level2.nowhps[11] <= 0) {
          filter = _level1.setMyFilter(0);
          s5.girl.filters = [filter];
          if (_level1.npc_battle) {
            s5.now_con.gotoAndStop(8 + _level2.airbaseOffset(_level2.ship_ke[5]));
          } else {
            s5.now_con.gotoAndStop(7 + _level2.airbaseOffset(_level2.ship_ke[5]));
          }
        } else {
          filter = _level1.setMyFilter(1);
          s5.girl.filters = [filter];
        }
      }
    }

    frame 18 {
      if (s5.flg) {
        if (ch > 2) {
          s5.girl.gotoAndStop(3);
        }
      }
      if (s6.flg) {
        s6._visible = true;
        enemy_name6._visible = true;
        estr6._visible = true;
        ch = _level1.getCondition(_level2.nowhps[12], _level2.maxhps[12]);
        s6.now_con.gotoAndStop(ch + 3 + _level2.airbaseOffset(_level2.ship_ke[6]));
        if (ch > 2) {
          _level2.tstrace('_level2.ship_ke[6] = ' + _level2.ship_ke[6]);
          s6.girl.gotoAndStop(3);
        }
        _level2.tstrace('_level2.nowhps[12] = ' + _level2.nowhps[12]);
        if (_level2.nowhps[12] <= 0) {
          filter = _level1.setMyFilter(0);
          s6.girl.filters = [filter];
          if (_level1.npc_battle) {
            s6.now_con.gotoAndStop(8 + _level2.airbaseOffset(_level2.ship_ke[6]));
          } else {
            s6.now_con.gotoAndStop(7 + _level2.airbaseOffset(_level2.ship_ke[6]));
          }
        } else {
          filter = _level1.setMyFilter(1);
          s6.girl.filters = [filter];
        }
      }
    }

    frame 26 {
      ful = bar.bar._width;
      if (!ene) {
        bar.bar.gotoAndStop(2);
      }
    }

    frame 28 {
      chk = ((bar.bar._x + ful) / ful) * 100;
      if (chk < dam) {
        bar.bar._x += 7;
        gotoAndPlay('bar_loop');
      } else {
        stop();
        flg = 1;
      }
      if (bar.bar._x > 0) {
        bar.bar._x = 0;
      }
    }
  }

  frame 702 {
  }

  frame 703 {
    if (dispf.flg == 0 || dispe.flg == 0) {
      gotoAndPlay('result_loop');
    }
  }

  movieClip 1533  {

    frame 1 {
      stop();
    }

    frame 2 {
      tr_obj = new LoadVars();
      recv1_obj = new LoadVars();
      recv2_obj = new LoadVars();
      recv3_obj = new LoadVars();
      recv4_obj = new LoadVars();
      recv5_obj = new LoadVars();
      recv6_obj = new LoadVars();
      recv7_obj = new LoadVars();
      lop = new Object();
      recv1_obj.onLoad = function (success) {
        if (success) {
          recv = _level2.reset_act.recv1_obj.svdata;
          if (recv == undefined) {
            _level2.tstrace('Load error: recv is undefined');
            _level1.err_id = 1001;
            _level1.err_mes = 'Load error: data from server undefined for api_req_nyukyo/start';
            _level1.err_from = '戦闘結果';
            _level1.gotoAndPlay('sys_err2');
            _level2.gotoAndStop('prebattle');
          } else {
            delete _level2.reset_act.lop;
            _level2.reset_act.lop = new Object();
            _level2.reset_act.lop = JSON.parse(recv);
            if (_level2.reset_act.lop == undefined) {
              _level2.tstrace('Load error: could not parse recv');
              _level1.err_id = 1002;
              _level1.err_mes = 'Load error: could not parse data from server for api_req_nyukyo/start';
              _level1.err_from = '戦闘結果';
              _level1.gotoAndPlay('sys_err2');
              _level2.gotoAndStop('prebattle');
            } else {
              _level2.reset_act.gotoAndStop('suc');
            }
          }
        } else {
          _level2.err_id = 1000;
          _level2.err_from = '戦闘結果';
          _level2.err_mes = '通信エラー';
          _level1.gotoAndPlay('sys_err1');
        }
      };

      recv2_obj.onLoad = function (success) {
        if (success) {
          recv2 = _level2.reset_act.recv2_obj.svdata;
          if (recv2 == undefined) {
            _level2.tstrace('Load error: recv2 is undefined');
            _level1.err_id = 1001;
            _level1.err_mes = 'Load error: data from server undefined for api_req_nyukyo/start';
            _level1.err_from = '戦闘結果';
            _level1.gotoAndPlay('sys_err2');
            _level2.gotoAndStop('prebattle');
          } else {
            delete _level2.reset_act.lop;
            _level2.reset_actlop = new Object();
            _level2.reset_act.lop = JSON.parse(recv2);
            if (_level2.reset_act.lop == undefined) {
              _level2.tstrace('Load error: could not parse recv');
              _level1.err_id = 1002;
              _level1.err_mes = 'Load error: could not parse data from server for api_req_nyukyo/start';
              _level1.err_from = '戦闘結果';
              _level1.gotoAndPlay('sys_err2');
              _level2.gotoAndStop('prebattle');
            } else {
              _level2.reset_act.gotoAndStop('suc2');
            }
          }
        } else {
          _level2.err_id = 1000;
          _level2.err_from = '戦闘結果';
          _level2.err_mes = '通信エラー';
          _level1.gotoAndPlay('sys_err1');
        }
      };

      recv3_obj.onLoad = function (success) {
        if (success) {
          recv3 = _level2.reset_act.recv3_obj.svdata;
          if (recv3 == undefined) {
            _level2.tstrace('Load error: recv3 is undefined');
            _level1.err_id = 1001;
            _level1.err_mes = 'Load error: data from server undefined for api_req_nyukyo/start';
            _level1.err_from = '戦闘結果';
            _level1.gotoAndPlay('sys_err2');
            _level2.gotoAndStop('prebattle');
          } else {
            delete _level2.reset_act.lop;
            _level2.reset_actlop = new Object();
            _level2.reset_act.lop = JSON.parse(recv3);
            if (_level2.reset_act.lop == undefined) {
              _level2.tstrace('Load error: could not parse recv');
              _level1.err_id = 1002;
              _level1.err_mes = 'Load error: could not parse data from server for api_req_nyukyo/start';
              _level1.err_from = '戦闘結果';
              _level1.gotoAndPlay('sys_err2');
              _level2.gotoAndStop('prebattle');
            } else {
              _level2.reset_act.gotoAndStop('suc3');
            }
          }
        } else {
          _level2.err_id = 1000;
          _level2.err_from = '戦闘結果';
          _level2.err_mes = '通信エラー';
          _level1.gotoAndPlay('sys_err1');
        }
      };

      recv4_obj.onLoad = function (success) {
        if (success) {
          recv4 = _level2.reset_act.recv4_obj.svdata;
          if (recv4 == undefined) {
            _level2.tstrace('Load error: recv4 is undefined');
            _level1.err_id = 1001;
            _level1.err_mes = 'Load error: data from server undefined for api_req_nyukyo/start';
            _level1.err_from = '戦闘結果';
            _level1.gotoAndPlay('sys_err2');
            _level2.gotoAndStop('prebattle');
          } else {
            delete _level2.reset_act.lop;
            _level2.reset_actlop = new Object();
            _level2.reset_act.lop = JSON.parse(recv4);
            if (_level2.reset_act.lop == undefined) {
              _level2.tstrace('Load error: could not parse recv');
              _level1.err_id = 1002;
              _level1.err_mes = 'Load error: could not parse data from server for api_req_nyukyo/start';
              _level1.err_from = '戦闘結果';
              _level1.gotoAndPlay('sys_err2');
              _level2.gotoAndStop('prebattle');
            } else {
              _level2.reset_act.gotoAndStop('suc4');
            }
          }
        } else {
          _level2.err_id = 1000;
          _level2.err_from = '戦闘結果';
          _level2.err_mes = '通信エラー';
          _level1.gotoAndPlay('sys_err1');
        }
      };

      recv5_obj.onLoad = function (success) {
        if (success) {
          recv5 = _level2.reset_act.recv5_obj.svdata;
          if (recv5 == undefined) {
            _level2.tstrace('Load error: recv5 is undefined');
            _level1.err_id = 1001;
            _level1.err_mes = 'Load error: data from server undefined for api_req_nyukyo/start';
            _level1.err_from = '戦闘結果';
            _level1.gotoAndPlay('sys_err2');
            _level2.gotoAndStop('prebattle');
          } else {
            delete _level2.reset_act.lop;
            _level2.reset_actlop = new Object();
            _level2.reset_act.lop = JSON.parse(recv5);
            if (_level2.reset_act.lop == undefined) {
              _level2.tstrace('Load error: could not parse recv');
              _level1.err_id = 1002;
              _level1.err_mes = 'Load error: could not parse data from server for api_req_nyukyo/start';
              _level1.err_from = '戦闘結果';
              _level1.gotoAndPlay('sys_err2');
              _level2.gotoAndStop('prebattle');
            } else {
              _level2.reset_act.gotoAndStop('suc5');
            }
          }
        } else {
          _level2.err_id = 1000;
          _level2.err_from = '戦闘結果';
          _level2.err_mes = '通信エラー';
          _level1.gotoAndPlay('sys_err1');
        }
      };

      recv6_obj.onLoad = function (success) {
        if (success) {
          recv6 = _level2.reset_act.recv6_obj.svdata;
          if (recv6 == undefined) {
            _level2.tstrace('Load error: recv6 is undefined');
            _level1.err_id = 1001;
            _level1.err_mes = 'Load error: data from server undefined for api_req_nyukyo/start';
            _level1.err_from = '戦闘結果';
            _level1.gotoAndPlay('sys_err2');
            _level2.gotoAndStop('prebattle');
          } else {
            delete _level2.reset_act.lop;
            _level2.reset_actlop = new Object();
            _level2.reset_act.lop = JSON.parse(recv6);
            if (_level2.reset_act.lop == undefined) {
              _level2.tstrace('Load error: could not parse recv');
              _level1.err_id = 1002;
              _level1.err_mes = 'Load error: could not parse data from server for api_req_nyukyo/start';
              _level1.err_from = '戦闘結果';
              _level1.gotoAndPlay('sys_err2');
              _level2.gotoAndStop('prebattle');
            } else {
              _level2.reset_act.gotoAndStop('suc6');
            }
          }
        } else {
          _level2.err_id = 1000;
          _level2.err_from = '戦闘結果';
          _level2.err_mes = '通信エラー';
          _level1.gotoAndPlay('sys_err1');
        }
      };

      recv7_obj.onLoad = function (success) {
        if (success) {
          recv7 = _level2.reset_act.recv7_obj.svdata;
          if (recv7 == undefined) {
            _level2.tstrace('Load error: recv7 is undefined');
            _level1.err_id = 1001;
            _level1.err_mes = 'Load error: data from server undefined for api_req_hokyu/charge';
            _level1.err_from = '戦闘結果';
            _level1.gotoAndPlay('sys_err2');
            _level2.gotoAndStop('prebattle');
          } else {
            delete _level2.reset_act.lop;
            _level2.reset_actlop = new Object();
            _level2.reset_act.lop = JSON.parse(recv7);
            if (_level2.reset_act.lop == undefined) {
              _level2.tstrace('Load error: could not parse recv');
              _level1.err_id = 1002;
              _level1.err_mes = 'Load error: could not parse data from server for api_req_hokyu/charge';
              _level1.err_from = '戦闘結果';
              _level1.gotoAndPlay('sys_err2');
              _level2.gotoAndStop('prebattle');
            } else {
              _level2.reset_act.gotoAndStop('suc7');
            }
          }
        } else {
          _level2.err_id = 1000;
          _level2.err_from = '戦闘結果';
          _level2.err_mes = '通信エラー';
          _level1.gotoAndPlay('sys_err1');
        }
      };

      tr_obj.api_token = _level1.userToken;
      tr_obj.api_verno = _level1.FLA_VER;
      tr_obj.api_highspeed = 1;
      tr_obj.api_ndock_id = 1;
      tr_obj.api_ship_id = _level1.myDeck[0].api_ship[0];
      tr_obj.sendAndLoad(_level1.BASE_URL + 'api_req_nyukyo/start', recv1_obj, 'POST');
      stop();
    }

    frame 3 {
      if (lop.api_result == 1) {
        delete tr_obj;
        tr_obj = new LoadVars();
        tr_obj.api_token = _level1.userToken;
        tr_obj.api_verno = _level1.FLA_VER;
        tr_obj.api_highspeed = 1;
        tr_obj.api_ndock_id = 1;
        tr_obj.api_ship_id = _level1.myDeck[0].api_ship[1];
        tr_obj.sendAndLoad(_level1.BASE_URL + 'api_req_nyukyo/start', recv2_obj, 'POST');
        stop();
      } else {
        gotoAndStop('err2');
        apiurl = 'api_req_nyukyo/start';
      }
    }

    frame 4 {
      if (lop.api_result == 1) {
        delete tr_obj;
        tr_obj = new LoadVars();
        tr_obj.api_token = _level1.userToken;
        tr_obj.api_verno = _level1.FLA_VER;
        tr_obj.api_highspeed = 1;
        tr_obj.api_ndock_id = 1;
        tr_obj.api_ship_id = _level1.myDeck[0].api_ship[2];
        tr_obj.sendAndLoad(_level1.BASE_URL + 'api_req_nyukyo/start', recv3_obj, 'POST');
        stop();
      } else {
        gotoAndStop('err2');
        apiurl = 'api_req_nyukyo/start';
      }
    }

    frame 5 {
      if (lop.api_result == 1) {
        delete tr_obj;
        tr_obj = new LoadVars();
        tr_obj.api_token = _level1.userToken;
        tr_obj.api_verno = _level1.FLA_VER;
        tr_obj.api_highspeed = 1;
        tr_obj.api_ndock_id = 1;
        tr_obj.api_ship_id = _level1.myDeck[0].api_ship[3];
        tr_obj.sendAndLoad(_level1.BASE_URL + 'api_req_nyukyo/start', recv4_obj, 'POST');
        stop();
      } else {
        gotoAndStop('err2');
        apiurl = 'api_req_nyukyo/start';
      }
    }

    frame 6 {
      if (lop.api_result == 1) {
        delete tr_obj;
        tr_obj = new LoadVars();
        tr_obj.api_token = _level1.userToken;
        tr_obj.api_verno = _level1.FLA_VER;
        tr_obj.api_highspeed = 1;
        tr_obj.api_ndock_id = 1;
        tr_obj.api_ship_id = _level1.myDeck[0].api_ship[4];
        tr_obj.sendAndLoad(_level1.BASE_URL + 'api_req_nyukyo/start', recv5_obj, 'POST');
        stop();
      } else {
        gotoAndStop('err2');
        apiurl = 'api_req_nyukyo/start';
      }
    }

    frame 7 {
      if (lop.api_result == 1) {
        delete tr_obj;
        tr_obj = new LoadVars();
        tr_obj.api_token = _level1.userToken;
        tr_obj.api_verno = _level1.FLA_VER;
        tr_obj.api_highspeed = 1;
        tr_obj.api_ndock_id = 1;
        tr_obj.api_ship_id = _level1.myDeck[0].api_ship[5];
        tr_obj.sendAndLoad(_level1.BASE_URL + 'api_req_nyukyo/start', recv6_obj, 'POST');
        stop();
      } else {
        gotoAndStop('err2');
        apiurl = 'api_req_nyukyo/start';
      }
    }

    frame 8 {
      if (lop.api_result == 1) {
        tr_obj.api_token = _level1.userToken;
        tr_obj.api_verno = _level1.FLA_VER;
        tr_obj.api_id_items = '16,17,18,19,20,21,173,184,185,187,22,171';
        tr_obj.api_kind = 3;
        tr_obj.sendAndLoad(_level1.BASE_URL + 'api_req_hokyu/charge', recv7_obj, 'POST');
        stop();
      } else {
        gotoAndStop('err2');
        apiurl = 'api_req_nyukyo/start';
      }
    }

    frame 9 {
      if (lop.api_result == 1) {
        _level2.play();
      } else {
        gotoAndStop('err2');
        apiurl = 'api_req_hokyu/charge';
      }
    }

    frame 10 {
      _level2.tstrace('load error');
      _level1.err_id = lop.api_result;
      _level1.err_mes = 'Load error: ' + lop.api_result_msg + '(' + apiurl + ')';
      _level1.err_from = '戦闘結果';
      _level1.gotoAndPlay('sys_err2');
      _level2.gotoAndStop('prebattle');
    }
  }

  movieClip 1534  {

    frame 1 {
      gotoAndStop(2);
    }

    frame 2 {
      stop();
    }

    frame 3 {
      bgm2Volume = _level2.bgm2Volume;
      if (tov > bgm2Volume) {
        fug = 1;
      } else {
        fug = -1;
      }
      par = (tov - bgm2Volume) / sp;
      bgmVol = bgm2Volume;
    }

    frame 4 {
      bgmVol += par;
    }

    frame 5 {
      if (fug > 0 && bgmVol > tov) {
        bgmVol = tov;
        _level2.bgm2_obj.setVolume(bgmVol);
        _level2.bgm2Volume = bgmVol;
        gotoAndPlay(1);
      } else {
        if (fug < 0 && bgmVol < tov) {
          bgmVol = tov;
          _level2.bgm2_obj.setVolume(bgmVol);
          _level2.bgm2Volume = bgmVol;
          gotoAndPlay(1);
        } else {
          _level2.bgm2_obj.setVolume(bgmVol);
          gotoAndPlay(4);
        }
      }
    }
  }

  frame 706 {
    if (_level2.DEFID == 'flash1') {
      reset_act.play();
      stop();
    }
  }

  movieClip 1535  {
  }

  movieClip 1539  {
  }

  movieClip 1548  {

    frame 1 {
      stop();
    }
  }

  movieClip 1551  {
  }

  movieClip 1552  {

    frame 1 {
      i = 0;
      imaxmax = 80;
      imax = random(imaxmax);
      rotspd = random(10) - 5;
      play();
    }

    frame 2 {
      play();
    }

    frame 3 {
      ++i;
      if (i < imax) {
        gotoAndPlay(2);
      } else {
        i = 0;
        imax = random(imaxmax);
        rotspd = random(10) - 5;
        play();
      }
    }

    frame 4 {
      sparkle._rotation = random(360);
      sparkle._xscale = 20;
      sparkle._yscale = 20;
      play();
    }

    frame 5 {
      sparkle._rotation += rotspd;
      sparkle._xscale = 47;
      sparkle._yscale = 47;
      play();
    }

    frame 6 {
      sparkle._rotation += rotspd;
      sparkle._xscale = 74;
      sparkle._yscale = 74;
      play();
    }

    frame 7 {
      sparkle._rotation += rotspd;
      sparkle._xscale = 100;
      sparkle._yscale = 100;
      play();
    }

    frame 8 {
      sparkle._rotation += rotspd;
      sparkle._xscale = 83;
      sparkle._yscale = 83;
      play();
    }

    frame 9 {
      sparkle._rotation += rotspd;
      sparkle._xscale = 67;
      sparkle._yscale = 67;
      play();
    }

    frame 10 {
      sparkle._rotation += rotspd;
      sparkle._xscale = 50;
      sparkle._yscale = 50;
      play();
    }

    frame 11 {
      sparkle._rotation += rotspd;
      sparkle._xscale = 33;
      sparkle._yscale = 33;
      play();
    }

    frame 12 {
      sparkle._rotation += rotspd;
      sparkle._xscale = 16;
      sparkle._yscale = 16;
      play();
    }

    frame 13 {
      gotoAndPlay(2);
      sparkle._xscale = 1;
      sparkle._yscale = 1;
    }
  }

  movieClip 1555  {
  }

  movieClip 1568  {

    frame 1 {
      stop();
    }
  }

  movieClip 1571  {
  }

  movieClip 1582  {

    frame 1 {
      stop();
    }
  }

  movieClip 1585  {
  }

  movieClip 1588  {
  }

  movieClip 1589  {

    frame 1 {
      i = 0;
      imaxmax = 80;
      imax = random(imaxmax);
      flg = true;
      play();
    }

    frame 2 {
      flg = false;
      play();
    }

    frame 3 {
      ++i;
      if (i < imax) {
        gotoAndPlay(2);
      } else {
        i = 0;
        imax = random(imaxmax);
        play();
      }
    }

    frame 4 {
      play();
    }

    frame 5 {
      play();
    }

    frame 6 {
      play();
    }

    frame 7 {
      play();
    }

    frame 8 {
      play();
    }

    frame 9 {
      play();
    }

    frame 10 {
      play();
    }

    frame 11 {
      play();
    }

    frame 12 {
      play();
    }

    frame 13 {
      flg = true;
      play();
    }

    frame 14 {
      flg = false;
      play();
    }

    frame 15 {
      ++i;
      if (i < imax) {
        gotoAndPlay('lop');
      } else {
        i = 0;
        imax = random(imaxmax);
        play();
      }
    }

    frame 16 {
      play();
    }

    frame 17 {
      play();
    }

    frame 18 {
      play();
    }

    frame 19 {
      play();
    }

    frame 20 {
      play();
    }

    frame 21 {
      play();
    }

    frame 22 {
      play();
    }

    frame 23 {
      play();
    }

    frame 24 {
      play();
    }

    frame 25 {
      gotoAndPlay(2);
    }
  }

  movieClip 1592  {
  }

  movieClip 1593  {

    frame 1 {
      i = 0;
      imaxmax = 80;
      imax = random(imaxmax);
      rotspd = random(10) - 5;
      play();
    }

    frame 2 {
      play();
    }

    frame 3 {
      ++i;
      if (i < imax) {
        gotoAndPlay(2);
      } else {
        i = 0;
        imax = random(imaxmax);
        rotspd = random(10) - 5;
        play();
      }
    }

    frame 4 {
      sparkle._rotation = random(360);
      sparkle._xscale = 10;
      sparkle._yscale = 10;
      play();
    }

    frame 5 {
      sparkle._rotation += rotspd;
      sparkle._xscale = 23;
      sparkle._yscale = 23;
      play();
    }

    frame 6 {
      sparkle._rotation += rotspd;
      sparkle._xscale = 36;
      sparkle._yscale = 36;
      play();
    }

    frame 7 {
      sparkle._rotation += rotspd;
      sparkle._xscale = 50;
      sparkle._yscale = 50;
      play();
    }

    frame 8 {
      sparkle._rotation += rotspd;
      sparkle._xscale = 42;
      sparkle._yscale = 42;
      play();
    }

    frame 9 {
      sparkle._rotation += rotspd;
      sparkle._xscale = 33;
      sparkle._yscale = 33;
      play();
    }

    frame 10 {
      sparkle._rotation += rotspd;
      sparkle._xscale = 25;
      sparkle._yscale = 25;
      play();
    }

    frame 11 {
      sparkle._rotation += rotspd;
      sparkle._xscale = 16;
      sparkle._yscale = 16;
      play();
    }

    frame 12 {
      sparkle._rotation += rotspd;
      sparkle._xscale = 8;
      sparkle._yscale = 8;
      play();
    }

    frame 13 {
      gotoAndPlay(2);
      sparkle._xscale = 1;
      sparkle._yscale = 1;
    }
  }

  movieClip 1604  {

    frame 1 {
      stop();
    }
  }

  movieClip 1607  {
  }

  movieClip 1608  {

    frame 1 {
      i = 0;
      imaxmax = 80;
      imax = random(imaxmax);
      rotspd = random(10) - 5;
      play();
    }

    frame 2 {
      play();
    }

    frame 3 {
      ++i;
      if (i < imax) {
        gotoAndPlay(2);
      } else {
        i = 0;
        imax = random(imaxmax);
        rotspd = random(10) - 5;
        play();
      }
    }

    frame 4 {
      sparkle._rotation = random(360);
      sparkle._xscale = 10;
      sparkle._yscale = 10;
      play();
    }

    frame 5 {
      sparkle._rotation += rotspd;
      sparkle._xscale = 20;
      sparkle._yscale = 20;
      play();
    }

    frame 6 {
      sparkle._rotation += rotspd;
      sparkle._xscale = 30;
      sparkle._yscale = 30;
      play();
    }

    frame 7 {
      sparkle._rotation += rotspd;
      sparkle._xscale = 40;
      sparkle._yscale = 40;
      play();
    }

    frame 8 {
      sparkle._rotation += rotspd;
      sparkle._xscale = 33;
      sparkle._yscale = 33;
      play();
    }

    frame 9 {
      sparkle._rotation += rotspd;
      sparkle._xscale = 26;
      sparkle._yscale = 26;
      play();
    }

    frame 10 {
      sparkle._rotation += rotspd;
      sparkle._xscale = 19;
      sparkle._yscale = 19;
      play();
    }

    frame 11 {
      sparkle._rotation += rotspd;
      sparkle._xscale = 12;
      sparkle._yscale = 12;
      play();
    }

    frame 12 {
      sparkle._rotation += rotspd;
      sparkle._xscale = 5;
      sparkle._yscale = 5;
      play();
    }

    frame 13 {
      gotoAndPlay(2);
      sparkle._xscale = 10;
      sparkle._yscale = 10;
      play();
    }
  }

  movieClip 1609  {

    frame 1 {
      if (_level2.win_rank == 'S') {
        fbk = 60;
      } else {
        if (_level2.win_rank == 'A') {
          fbk = 30;
        } else {
          if (_level2.win_rank == 'B') {
            fbk = 15;
          } else {
            if (_level2.win_rank == 'C') {
              fbk = 0;
            } else {
              if (_level2.win_rank == 'D') {
                fbk = 0;
              } else {
                if (_level2.win_rank == 'E') {
                  fbk = 0;
                }
              }
            }
          }
        }
      }
      dam_debug_txt._visible = false;
      dam_debug_txt.text = '';
    }

    frame 14 {
      if (_level2.win_rank == 'S' && _level2.perfectrank) {
        gotoAndPlay('perfectrank');
      }
    }

    frame 15 {
      if (_level2.win_rank == 'S' || _level2.win_rank == 'A') {
        worl.gotoAndStop(1);
      }
      if (_level2.win_rank == 'B') {
        worl.gotoAndStop(2);
      }
      if (_level2.win_rank == 'C') {
        worl.gotoAndStop(3);
        rease._visible = false;
      }
      if (_level2.win_rank == 'D' || _level2.win_rank == 'E') {
        worl.gotoAndStop(4);
        rease._visible = false;
      }
    }

    frame 21 {
      parts = new Array();
      if (_level2.win_rank == 'S' || _level2.win_rank == 'A') {
        i = 0;
        while (i < 5) {
          scl = random(20) + 80;
          var param = {'_x': random(270) - 280, '_y': random(100) - 50, '_xscale': scl, '_yscale': scl};
          parts[parts.length] = kirakira2.duplicateMovieClip('kira2_' + i, this.getNextHighestDepth(), param);
          ++i;
        }
      }
      if (_level2.win_rank == 'B') {
        i = 0;
        while (i < 4) {
          scl = random(20) + 80;
          var param = {'_x': random(470) - 350, '_y': random(80) - 40, '_xscale': scl, '_yscale': scl};
          parts[parts.length] = kirakira2.duplicateMovieClip('kira2_' + i, this.getNextHighestDepth(), param);
          ++i;
        }
      }
    }

    frame 38 {
      win_rank.gotoAndStop(_level2.win_rank + _level2.win_rank);
      if (_level2.win_rank != 'S') {
        congratsbg._visible = false;
      }
    }

    frame 41 {
      if (_level2.win_rank != 'S') {
        congrats._visible = false;
      }
    }

    frame 42 {
      if (_level2.win_rank == 'C' || _level2.win_rank == 'D' || _level2.win_rank == 'E') {
        fubuhho._visible = false;
      }
      i = 0;
      while (i < fbk) {
        var param = {'_x': random(760) - 380, '_y': -290 - random(200)};
        fubuhho.duplicateMovieClip('fubuhho' + i, i + 100, param);
        ++i;
      }
      waits = 0;
    }

    instance fubuhho of movieClip 1582  {

      onClipEvent (load) {
        function dsetup() {
          gotoAndStop(random(5) + 1);
          spd = random(8) + 2;
          xspd = (random(10) + 1) / 100;
          startx = _x;
          direc = 1;
          haba = random(30);
          _y = -240 - random(200);
          _x = random(760) - 380;
          rspd = random(20) / 10;
          sc = random(20) + 31;
          _xscale = sc;
          _yscale = sc;
        }

        dsetup();
        i = 0;
        _y = -240 - random(400);
      }

      onClipEvent (enterFrame) {
        _x = startx + haba * Math.sin(i);
        i += xspd;
        _rotation = _rotation + rspd;
        _y = _y + spd;
        if (_y > 290) {
          dsetup();
        }
      }
    }

    frame 45 {
      if (_level2.win_rank == 'S') {
        i = 0;
        while (i < 4) {
          scl = random(10) + 90;
          var param = {'_x': random(100) + 140, '_y': random(160) - 90, '_xscale': scl, '_yscale': scl};
          parts[parts.length] = kirakira.duplicateMovieClip('kira1_' + i, this.getNextHighestDepth(), param);
          ++i;
        }
      }
      if (_level2.win_rank == 'S') {
        _level2.playBGM('S_fanfare3', false, _level1.bgmVolume);
      } else {
        if (_level2.win_rank == 'A') {
          _level2.playBGM('A_fanfare2', false, _level1.bgmVolume);
        } else {
          if (_level2.win_rank == 'B') {
            _level2.playBGM('B_fanfare4', false, _level1.bgmVolume);
          } else {
            _level2.playBGM('CDE_haiboku4', false, _level1.bgmVolume);
          }
        }
      }
    }

    frame 47 {
      if (_level2.win_rank == 'S') {
        i = 0;
        while (i < 5) {
          scl = random(20) + 80;
          var param = {'_x': random(400) - 200, '_y': random(36) + 142, '_xscale': scl, '_yscale': scl};
          parts[parts.length] = kirakira3.duplicateMovieClip('kira3_' + i, this.getNextHighestDepth(), param);
          ++i;
        }
      }
    }

    frame 52 {
      ++waits;
      if (waits < 20) {
        gotoAndPlay('wait_loop');
      } else {
        stop();
        _level2.play();
      }
    }

    frame 55 {
      per2.gotoAndStop(2);
    }

    frame 57 {
      per3.gotoAndStop(3);
    }

    frame 59 {
      parts = new Array();
      i = 0;
      while (i < 2) {
        scl = random(20) + 60;
        var param = {'_x': random(80) - 360, '_y': random(80) - 40, '_xscale': scl, '_yscale': scl};
        parts[parts.length] = kirakira.duplicateMovieClip('kira1_' + i, this.getNextHighestDepth(), param);
        ++i;
      }
      per4.gotoAndStop(4);
    }

    frame 61 {
      i = 2;
      while (i < 4) {
        scl = random(20) + 60;
        var param = {'_x': random(80) - 245, '_y': random(80) - 40, '_xscale': scl, '_yscale': scl};
        parts[parts.length] = kirakira.duplicateMovieClip('kira1_' + i, this.getNextHighestDepth(), param);
        ++i;
      }
      per5.gotoAndStop(5);
    }

    frame 63 {
      i = 4;
      while (i < 6) {
        scl = random(20) + 60;
        var param = {'_x': random(80) - 130, '_y': random(80) - 40, '_xscale': scl, '_yscale': scl};
        parts[parts.length] = kirakira.duplicateMovieClip('kira1_' + i, this.getNextHighestDepth(), param);
        ++i;
      }
    }

    frame 65 {
      i = 6;
      while (i < 8) {
        scl = random(20) + 60;
        var param = {'_x': random(80) - 15, '_y': random(80) - 40, '_xscale': scl, '_yscale': scl};
        parts[parts.length] = kirakira.duplicateMovieClip('kira1_' + i, this.getNextHighestDepth(), param);
        ++i;
      }
    }

    frame 67 {
      i = 8;
      while (i < 10) {
        scl = random(20) + 60;
        var param = {'_x': random(50) + 90, '_y': random(80) - 40, '_xscale': scl, '_yscale': scl};
        parts[parts.length] = kirakira.duplicateMovieClip('kira1_' + i, this.getNextHighestDepth(), param);
        ++i;
      }
    }

    frame 76 {
      win_rank.gotoAndStop(_level2.win_rank + _level2.win_rank);
    }

    frame 80 {
      i = 0;
      while (i <= fbk) {
        var param = {'_x': random(760) - 380, '_y': -290 - random(200)};
        fubuhho.duplicateMovieClip('fubuhho' + i, i + 100, param);
        ++i;
      }
      waits = 0;
    }

    instance fubuhho of movieClip 1582  {

      onClipEvent (load) {
        function dsetup() {
          gotoAndStop(random(5) + 1);
          spd = random(8) + 2;
          xspd = (random(10) + 1) / 100;
          startx = _x;
          direc = 1;
          haba = random(30);
          _y = -240 - random(200);
          _x = random(760) - 380;
          rspd = random(20) / 10;
          sc = random(20) + 31;
          _xscale = sc;
          _yscale = sc;
        }

        dsetup();
        i = 0;
        _y = -240 - random(400);
      }

      onClipEvent (enterFrame) {
        _x = startx + haba * Math.sin(i);
        i += xspd;
        _rotation = _rotation + rspd;
        _y = _y + spd;
        if (_y > 290) {
          dsetup();
        }
      }
    }

    frame 83 {
      i = 10;
      while (i < 16) {
        scl = random(10) + 90;
        var param = {'_x': random(100) + 200, '_y': random(160) - 90, '_xscale': scl, '_yscale': scl};
        parts[parts.length] = kirakira.duplicateMovieClip('kira1_' + i, this.getNextHighestDepth(), param);
        ++i;
      }
      _level2.playBGM('S_fanfare3', false, _level1.bgmVolume);
    }

    frame 85 {
      i = 0;
      while (i < 5) {
        scl = random(20) + 80;
        var param = {'_x': random(400) - 200, '_y': random(36) + 142, '_xscale': scl, '_yscale': scl};
        parts[parts.length] = kirakira2.duplicateMovieClip('kira2_' + i, this.getNextHighestDepth(), param);
        ++i;
      }
    }

    frame 90 {
      ++waits;
      if (waits < 20) {
        gotoAndPlay('wait_loop2');
      } else {
        stop();
        _level2.play();
      }
    }
  }

  frame 728 {
    stop();
  }

  frame 729 {
    stop();
  }

  movieClip 1612  {
  }

  movieClip 1615  {

    instance of movieClip 1612  {

      onClipEvent (enterFrame) {
        _xscale = 100;
        _yscale = 100;
        _rotation = _rotation + 0.7;
      }
    }
  }

  button 1616 {

    on (press) {
      i = 0;
      while (i < _level2.rank_display.parts.length) {
        _level2.rank_display.parts[i].removeMovieClip();
        ++i;
      }
      _level2.play();
    }
  }

  frame 730 {
    dispf.bar._visible = false;
  }

  frame 736 {
    if (_level2.mvp > 0) {
      chid = _level1.getOldID(_level1.myDeck[_level1.goDeck].api_ship[_level2.mvp - 1]);
      chinfo = _level1.FULL_my_ship[chid];
      _level2.chch = chinfo.api_ship_id;
      _level2.ldr1.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + _level2.chch + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.chch)].api_version, mvpch.ship);
      _level2.ldr1.addListener(_level2.lsnr1);
      _level2.lsnr1.onLoadInit = function () {
        _level2.tstrace('Loading character ' + _level2.chch + ' artwork');
        if (taihastate[_level2.mvp - 1]) {
          mvpch.ship.gotoAndStop(11);
          mvpch.ship._x = _level1.SYS_ship_pos[_level1.getPosID(_level2.chch)].api_battle_d[0];
          mvpch.ship._y = _level1.SYS_ship_pos[_level1.getPosID(_level2.chch)].api_battle_d[1];
        } else {
          mvpch.ship.gotoAndStop(10);
          mvpch.ship._x = _level1.SYS_ship_pos[_level1.getPosID(_level2.chch)].api_battle_n[0];
          mvpch.ship._y = _level1.SYS_ship_pos[_level1.getPosID(_level2.chch)].api_battle_n[1];
        }
        _level2.ldr1.removeListener(_level2.lsnr1);
      };

      _level2.lsnr1.onLoadError = function () {
        _level2.tstrace('Failed to load character ' + _level2.chch + ' artwork');
        mvpch.attachMovie('nodatachar', 'ship', 1);
        mvpch.ship._x = 440;
        mvpch.ship._y = 810;
        _level2.ldr1.removeListener(_level2.lsnr1);
      };

      _level2.tstrace('MVP character frame ' + mvpch._currentframe);
      mvps._y = 148 + 46 * _level2.mvp;
    } else {
      mvpch._visible = false;
    }
    if (_level2.win_rank == 'S' || _level2.win_rank == 'A' || _level2.win_rank == 'B') {
      _level2.playVoice(_level2.ship_kf[_level2.mvp] - 1, 23);
    }
    _level2.exp_disp.total_exp.text = _level2.get_base_exp;
    i = 1;
    while (i <= 6) {
      if (ship_kf[i] != -1) {
        tellTarget (''_level2.exp_disp.char_xp' + i') {
          if (_level2.get_ship_exp[_level2.i] == -1) {
            exp.text = '0';
          } else {
            exp.text = '' + _level2.get_ship_exp[_level2.i];
          }
        }
      } else {
        eval('_level2.exp_disp.char_xp' + i)._visible = false;
      }
      ++i;
    }
    if (!_level1.npc_battle) {
      exp_disp.gotoAndStop(2);
    }
  }

  movieClip 1619  {
  }

  movieClip 1621  {
  }

  movieClip 1622  {

    frame 1 {
      gotoAndPlay(random(37) + 2);
    }

    frame 41 {
      gotoAndPlay(2);
    }
  }

  movieClip 1623  {
  }

  movieClip 1643  {

    frame 1 {
      stop();
    }
  }

  movieClip 1644  {

    frame 2 {
    }
  }

  movieClip 1651  {
  }

  movieClip 1654  {

    frame 1 {
      stop();
    }
  }

  frame 741 {
    nowLvPos = [-1, 1, 1, 1, 1, 1, 1];
    nowExp = [-1, 0, 0, 0, 0, 0, 0];
    maxExp = [-1, 0, 0, 0, 0, 0, 0];
    _level2.maxget = 0;
    i = 1;
    while (i <= 6) {
      if (_level2.maxget < get_ship_exp[i]) {
        _level2.maxget = get_ship_exp[i];
      }
      nowExp[i] = get_exp_lvup[i - 1][0];
      maxExp[i] = nowExp[i] + get_ship_exp[i];
      _level2.neede = get_exp_lvup[i - 1][nowLvPos[i]] - nowExp[i];
      _level2.tstrace('i = ' + i);
      _level2.tstrace('get_exp_lvup[' + (i - 1) + '] = ' + get_exp_lvup[i - 1]);
      _level2.tstrace('nowLvPos[' + i + '] = ' + nowLvPos[i]);
      _level2.tstrace('get_exp_lvup[' + (i - 1) + '][nowLvPos[' + i + ']] = ' + get_exp_lvup[i - 1][nowLvPos[i]]);
      _level2.tstrace('nowExp[i] = ' + nowExp[i]);
      _level2.tstrace('maxExp[i] = ' + maxExp[i]);
      if (ship_kf[i] > -1) {
        eval('dispf.next' + i)._visible = true;
        tellTarget (''dispf.info' + i') {
          _level2.c_lv = c_lv;
        }
        tellTarget (''dispf.next' + i') {
          if (_level2.c_lv < 100) {
            c_exp = _level2.neede;
          } else {
            c_exp = '---';
          }
        }
      }
      ++i;
    }
    iii = 0;
    lvup = [false, false, false, false, false, false, false];
  }

  frame 761 {
    _level2.tstrace('Frame: exp_loop');
    i = 1;
    while (i <= 6) {
      nowExp[i] += _level2.maxget / 50;
      if (maxExp[i] <= nowExp[i]) {
        nowExp[i] = maxExp[i];
      }
      dispExp = Math.floor(nowExp[i]);
      tellTarget (''dispf.info' + i') {
        _level2.c_lv = c_lv;
      }
      if (get_exp_lvup[i - 1][nowLvPos[i]] != undefined && dispExp >= get_exp_lvup[i - 1][nowLvPos[i]] && _level2.c_lv < 100) {
        ++nowLvPos[i];
        lvup[i] = true;
        tellTarget (''dispf.next' + i') {
          gotoAndStop(2);
        }
        tellTarget (''dispf.info' + i') {
          ++c_lv;
        }
      }
      _level2.neede = get_exp_lvup[i - 1][nowLvPos[i]] - dispExp;
      tellTarget (''dispf.info' + i') {
        _level2.c_lv = c_lv;
      }
      tellTarget (''dispf.next' + i') {
        if (_level2.c_lv < 100) {
          c_exp = _level2.neede;
        } else {
          c_exp = '---';
        }
      }
      ++i;
    }
    ++iii;
  }

  frame 762 {
    if (iii < 50) {
      gotoAndPlay('exp_loop');
    }
    if (Math.floor(pas) % 2 == 1) {
      _level2.playSFX('judgment_point2.mp3');
    }
  }

  frame 763 {
  }

  frame 766 {
    stop();
  }

  button 1655 {

    on (press) {
      if (!_level1.npc_battle || get_flag[1] + get_flag[2] < 1) {
        _level2.gotoAndStop('lossend');
      } else {
        _level2.gotoAndPlay('winend');
      }
    }
  }

  frame 767 {
    _level2.tstrace('Frame: loss_end');
  }

  movieClip 1656  {

    frame 1 {
      _level2.playSFX('frame_close.mp3');
    }

    frame 17 {
      _parent.gotoAndPlay('shutter_closed');
    }
  }

  frame 768 {
    _level2.tstrace('Frame: winend');
  }

  frame 770 {
    stop();
  }

  movieClip 1663  {

    frame 1 {
      stop();
    }
  }

  movieClip 1664  {

    frame 1 {
      fbk = 45;
    }

    frame 15 {
      _level2.playSFX('judgment_new_character.mp3');
      if (_level2.get_flag[0] == 1 || _level2.get_flag[2] == 1) {
        new_get_msg.gotoAndStop(2);
      } else {
        if (_level1.questpage == 0 && (_level1.mapid == 0 || _level1.mapid == 1)) {
          new_get_msg.gotoAndStop(3);
        }
      }
    }

    frame 52 {
      stop();
      _level2.play();
    }
  }

  movieClip 1667  {
  }

  frame 793 {
    _level2.playBGM('4_get_1.mp3', false, _level1.bgmVolume);
    gotoAndPlay('cardget');
  }

  frame 794 {
    _level2.tstrace('Frame: goback');
  }

  frame 795 {
    stop();
  }

  frame 796 {
    gotoAndPlay('shutter_closed');
  }

  frame 797 {
    _level2.tstrace('Frame: cardget');
  }

  movieClip 1800  {

    frame 1 {
      stop();
    }
  }

  movieClip 1807  {

    frame 1 {
      stop();
    }
  }

  movieClip 1808  {

    frame 1 {
      stop();
    }
  }

  movieClip 1811  {

    frame 1 {
      stop();
    }
  }

  movieClip 1814  {
  }

  movieClip 1817  {
  }

  movieClip 1819  {

    frame 2 {
      _parent.card_main._alpha -= 5;
      gotoAndPlay(1);
    }
  }

  movieClip 1822  {
  }

  movieClip 1823  {

    frame 1 {
      stop();
    }

    frame 27 {
      i = 0;
      while (i < 30) {
        var param = {'_x': 0, '_y': 0};
        star.duplicateMovieClip('new_mc' + i, i, param);
        ++i;
      }
      card_main.swapDepths(35);
      _level2.playSFX('judgment_star.mp3');
    }

    instance star of movieClip 1814  {

      onClipEvent (load) {
        function dsetup() {
          spdt = 1.3;
          _x = 0;
          _y = -30;
          rspd = (random(100) + 1) / 100;
          xspd = 0;
          yspd = 0;
          while (xspd + yspd == 0) {
            xspd = random(60) / 10;
            yspd = random(120) / 10 - 9;
          }
          xspd *= spdt;
          yspd *= spdt;
          xdir = random(2) * 2 - 1;
          sspd = (random(5) + 10) / 10;
          _xscale = 1;
          _yscale = 1;
        }

        dsetup();
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd * xdir;
        _y = _y + yspd;
        _xscale = _xscale + sspd;
        _yscale = _yscale + sspd;
        xspd *= 1.02;
        yspd += 0.15 * spdt;
      }
    }

    frame 72 {
      _parent.play();
    }

    frame 88 {
      _parent.play();
      stop();
    }
  }

  frame 798 {
    _level2.ldr1.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + (_level2.getship[0] - 1) + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.getship[0] - 1)].api_version, getch.getch.ship);
    _level2.ldr1.addListener(_level2.lsnr1);
    _level2.lsnr1.onLoadInit = function () {
      _level2.tstrace('Loading character ' + (_level2.getship[0] - 1) + ' artwork');
      _level2.getch.getch.ship.gotoAndStop(10);
      _level2.getch.getch.ship._x = _level1.SYS_ship_pos[_level1.getPosID(_level2.getship[0] - 1)].api_battle_n[0];
      _level2.getch.getch.ship._y = _level1.SYS_ship_pos[_level1.getPosID(_level2.getship[0] - 1)].api_battle_n[1];
      _level2.ldr1.removeListener(_level2.lsnr1);
      _level2.play();
    };

    _level2.lsnr1.onLoadError = function () {
      _level2.tstrace('Failed to load character ' + (_level2.getship[0] - 1) + ' artwork');
      _level2.getch.getch.attachMovie('nodatachar', 'ship', 1);
      _level2.getch.getch.ship._x = 440;
      _level2.getch.getch.ship._y = 810;
      _level2.ldr1.removeListener(_level2.lsnr1);
      _level2.play();
    };

    _level2.tstrace('Get character frame ' + getch.getch._currentframe);
    stop();
  }

  frame 799 {
    cardspin.play();
  }

  frame 801 {
    stop();
  }

  frame 802 {
    if (_level2.get_flag[1] == 1) {
      getch.gotoAndStop(1);
      j = 0;
      for (;;) {
        if (!(_level1.SYS_ship_data[j].api_id != _level2.get_ship_id && j < 1000)) break;
        ++j;
      }
      _level2.tstrace('j = ' + j);
      _level2.tstrace('_level1.SYS_ship_data[j]["api_backs"] = ' + _level1.SYS_ship_data[j].api_backs);
      _level2.tstrace('_level1.SYS_ship_data[j]["api_name"] = ' + _level1.SYS_ship_data[j].api_name);
      backs = _level1.SYS_ship_data[j].api_backs;
    } else {
      if (get_flag[2] == 1) {
        getch.gotoAndStop(2);
        backs = _level1.SYS_slot_items[_level2.get_slotitem_id].api_backs % 100 + Math.ceil(_level1.SYS_slot_items[_level2.get_slotitem_id].api_backs / 10) - 11;
      }
    }
    getback.gotoAndStop(backs);
    stop();
  }

  movieClip 1834  {

    frame 1 {
      stop();
    }
  }

  frame 811 {
    i = 0;
    while (i < starnum) {
      var param = {'x': 0, 'y': -160 + random(100)};
      star.duplicateMovieClip('new_star' + i, i, param);
      ++i;
    }
  }

  instance star of movieClip 1814  {

    onClipEvent (load) {
      function dsetup() {
        startx = random(760) + 20;
        _x = startx;
        _y = random(260) - 280;
        spd = random(40) / 10 + 2;
        rspd = (random(10) + 1) / 10;
        size = random(60) + 20;
        _xscale = size;
        _yscale = size;
        haba = random(30);
        _rotation = 0;
        rad = 0;
        radspd = (random(100) + 1) / 1000;
      }

      dsetup();
    }

    onClipEvent (enterFrame) {
      _rotation = _rotation + rspd;
      _x = startx + haba * Math.sin(rad);
      _y = _y + spd;
      rad += radspd;
      if (_y > 500) {
        dsetup();
      }
    }
  }

  frame 824 {
    dd = _level2.getNextHighestDepth();
    textf.swapDepths(dd + 1);
    char_set.swapDepths(dd + 2);
  }

  movieClip 1839  {
  }

  movieClip 1843  {

    instance of movieClip 1612  {

      onClipEvent (enterFrame) {
        _xscale = 100;
        _yscale = 100;
        _rotation = _rotation + 0.7;
      }
    }
  }

  button 1844 {

    on (press) {
      _parent.play();
    }
  }

  movieClip 1845  {

    frame 1 {
      ship_rank = _level2.getship[1];
      ship_name = _level2.getship[2];
      ship_talk = _level2.getship[3];
      disp = '';
    }

    instance of movieClip 1839  {

      onClipEvent (load) {
        haba = 10;
        i = 0;
        ispd = 0.12;
        defsc = _xscale;
      }

      onClipEvent (enterFrame) {
        i += ispd;
        nowsc = defsc + haba * Math.sin(i);
        _xscale = nowsc;
        _yscale = nowsc;
      }
    }

    frame 14 {
      if (_level2.get_flag[1] == 1) {
        _level2.playVoice(_level2.get_ship_id, 1);
      } else {
        if (_level2.get_flag[2] == 1) {
          _level2.playVoice(_level2.flagShip, 26);
        }
      }
    }

    frame 18 {
      if (ship_talk != '') {
        tmpchr = substring(ship_talk, 1, 1);
        ship_talk = substring(ship_talk, 2, 1000);
        disp += tmpchr;
        gotoAndPlay('mes_loop');
      }
    }

    frame 20 {
      stop();
    }
  }

  instance char_set of movieClip 1845  {

    onClipEvent (press) {
      _level2.play();
    }
  }

  frame 826 {
    stop();
  }

  frame 827 {
    i = 0;
    while (i < starnum) {
      (eval('new_star' + i)).removeMovieClip();
      ++i;
    }
    textf.removeMovieClip();
    char_set.removeMovieClip();
  }

  frame 828 {
    _level2.bgm.gotoAndPlay('stop');
    stop();
  }

  frame 829 {
    _level2.tstrace('Frame: shutter_closed');
    if (_level2.get_eventflag > 0 && _level1.npc_battle) {
      stop();
      map_bonus.gotoAndPlay('start');
    } else {
      map_bonus.stop();
    }
  }

  movieClip 1848  {
  }

  movieClip 1851  {
  }

  movieClip 1852  {

    frame 15 {
      _level2.playSFX('judgment_new_character.mp3');
    }

    frame 52 {
      stop();
      _parent.play();
    }
  }

  movieClip 1853  {

    frame 27 {
      i = 0;
      while (i < 30) {
        var param = {'_x': 0, '_y': 0};
        star.duplicateMovieClip('new_mc' + i, i, param);
        ++i;
      }
      card_main.swapDepths(35);
      _level2.playSFX('judgment_star.mp3');
    }

    instance star of movieClip 1814  {

      onClipEvent (load) {
        function dsetup() {
          spdt = 1.3;
          _x = 0;
          _y = -30;
          rspd = (random(100) + 1) / 100;
          xspd = 0;
          yspd = 0;
          while (xspd + yspd == 0) {
            xspd = random(60) / 10;
            yspd = random(120) / 10 - 9;
          }
          xspd *= spdt;
          yspd *= spdt;
          xdir = random(2) * 2 - 1;
          sspd = (random(5) + 10) / 10;
          _xscale = 1;
          _yscale = 1;
        }

        dsetup();
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = _x + xspd * xdir;
        _y = _y + yspd;
        _xscale = _xscale + sspd;
        _yscale = _yscale + sspd;
        xspd *= 1.02;
        yspd += 0.15 * spdt;
      }
    }

    frame 72 {
      _parent.play();
    }

    frame 88 {
      _parent.play();
      stop();
    }
  }

  button 1857 {

    on (press) {
      _level2.tstrace('test1 onpress ' + _parent);
      _parent.play();
    }
  }

  movieClip 1858  {

    frame 1 {
    }

    instance of movieClip 1839  {

      onClipEvent (load) {
        haba = 10;
        i = 0;
        ispd = 0.12;
        defsc = _xscale;
      }

      onClipEvent (enterFrame) {
        i += ispd;
        nowsc = defsc + haba * Math.sin(i);
        _xscale = nowsc;
        _yscale = nowsc;
      }
    }

    frame 14 {
      if (isVoice) {
        _level2.playVoice(ship_master_id, 1);
      }
    }

    frame 18 {
      if (ship_talk != '') {
        tmpchr = substring(ship_talk, 1, 1);
        ship_talk = substring(ship_talk, 2, 1000);
        disp += tmpchr;
        gotoAndPlay('mes_loop');
      }
    }

    frame 20 {
      stop();
    }
  }

  movieClip 1859  {

    frame 1 {
    }

    frame 2 {
      _level2.tstrace('Frame: 海域ボーナス(カードゲット)');
      _level2.playBGM('4_get_1.mp3', false, _level1.bgmVolume);
      stop();
    }

    frame 7 {
      _level2.tstrace('Frame: 海域ボーナス(カードゲット)_');
      if (_level2.get_eventflag == 3) {
      } else {
        if (_level2.get_eventflag == 2) {
          card.card_main.gotoAndStop(2);
        } else {
          if (_level2.get_eventflag == 1) {
            card.card_main.gotoAndStop(2);
          } else {
            if (_level2.get_eventflag == 99) {
              card.card_main.gotoAndStop(2);
              _level2.get_eventbonus_multiitems_id = [3, 42, 2];
              _level2.get_eventbonus_multiitems_type = [3, 2, 3];
              _level2.get_eventbonus_multiitems_name = ['給糧艦「間宮」', '応急修理要員', '特注家具職人'];
            } else {
              _parent.play();
              gotoAndStop(1);
            }
          }
        }
      }
    }

    frame 8 {
      if (_level2.get_eventflag == 3) {
        _level2.ldr1.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + _level2.get_eventbonus_ship_id + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.get_eventbonus_ship_id)].api_version, getch.getch.ship);
        _level2.ldr1.addListener(_level2.lsnr1);
        _level2.lsnr1.onLoadInit = function () {
          _level2.tstrace('Loading character ' + _level2.get_eventbonus_ship_id + ' artwork');
          _level2.map_bonus.getch.getch.ship.gotoAndStop(10);
          _level2.map_bonus.getch.getch.ship._x = _level1.SYS_ship_pos[_level1.getPosID(_level2.get_eventbonus_ship_id)].api_battle_n[0];
          _level2.map_bonus.getch.getch.ship._y = _level1.SYS_ship_pos[_level1.getPosID(_level2.get_eventbonus_ship_id)].api_battle_n[1];
          _level2.ldr1.removeListener(_level2.lsnr1);
          _level2.map_bonus.card.play();
        };

        _level2.lsnr1.onLoadError = function () {
          _level2.tstrace('Failed to load character ' + _level2.get_eventbonus_ship_id + ' artwork');
          _level2.map_bonus.getch.getch.attachMovie('nodatachar', 'ship', 1);
          _level2.map_bonus.getch.getch.ship._x = 440;
          _level2.map_bonus.getch.getch.ship._y = 810;
          _level2.ldr1.removeListener(_level2.lsnr1);
          _level2.map_bonus.card.play();
        };

        _level2.map_bonus.card.stop();
        if (_level2.get_eventbonus_ship_id == 401) {
          getback.gotoAndStop(4);
        } else {
          _level2.tstrace('char bg = ' + _level1.SYS_ship_data[_level2.get_eventbonus_ship_id].api_backs);
          getback.gotoAndStop(_level1.SYS_ship_data[_level2.get_eventbonus_ship_id - 1].api_backs);
        }
      } else {
        if (_level2.get_eventflag == 2) {
          getch.gotoAndStop(2);
          getch.getch.gotoAndStop(_level2.get_eventbonus_slotitem_id);
        } else {
          if (_level2.get_eventflag == 1) {
            getch.gotoAndStop(3);
            getch.getch.gotoAndStop(_level2.get_eventbonus_material_id);
          } else {
            if (_level2.get_eventflag == 99) {
              getch.gotoAndStop(_level2.get_eventbonus_multiitems_type[0]);
              getch.getch.gotoAndStop(_level2.get_eventbonus_multiitems_id[0]);
            } else {
              _parent.play();
              gotoAndStop(1);
            }
          }
        }
      }
      stop();
    }

    frame 18 {
      i = 0;
      while (i < starnum) {
        var param = {'x': 0, 'y': -160 + random(100)};
        star.duplicateMovieClip('new_star' + i, i, param);
        ++i;
      }
    }

    instance star of movieClip 1814  {

      onClipEvent (load) {
        function dsetup() {
          startx = random(760) + 20;
          _x = startx;
          _y = random(260) - 280;
          spd = random(40) / 10 + 2;
          rspd = (random(10) + 1) / 10;
          size = random(60) + 20;
          _xscale = size;
          _yscale = size;
          haba = random(30);
          _rotation = 0;
          rad = 0;
          radspd = (random(100) + 1) / 1000;
        }

        dsetup();
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = startx + haba * Math.sin(rad);
        _y = _y + spd;
        rad += radspd;
        if (_y > 500) {
          dsetup();
        }
      }
    }

    frame 31 {
      function getItemName(id) {
        var v1 = 0;
        while (v1 < _level1.SYS_slot_items.length) {
          if (_level1.SYS_slot_items[v1].api_id == id) {
            return _level1.SYS_slot_items[v1].api_name;
          }
          ++v1;
        }
        return '';
      }

      function getShipData(id) {
        var v1 = 0;
        while (v1 < _level1.SYS_ship_data.length) {
          if (_level1.SYS_ship_data[v1].api_id == id) {
            return _level1.SYS_ship_data[v1];
          }
          ++v1;
        }
        return {};
      }

      function getShipTypeName(ship_id) {
        var v1 = 0;
        while (v1 < _level1.SYS_ship_type.length) {
          if (_level1.SYS_ship_type[v1].api_id == ship_id) {
            return _level1.SYS_ship_type[v1].api_name;
          }
          ++v1;
        }
        return '';
      }

      dd = _level2.getNextHighestDepth();
      textf.swapDepths(dd + 1);
      char_set.swapDepths(dd + 2);
      if (_level2.get_eventflag == 3) {
        var d = getShipData(master_id);
        char_set.ship_master_id = _level2.get_eventbonus_ship_id;
        types = ['', '駆逐艦', '軽巡洋艦', '重雷装巡洋艦', '重巡洋艦', '航空巡洋艦', '軽空母', '戦艦', '戦艦', '航空戦艦', '正規空母', '', '潜水艦', '潜水空母', '補給艦', '水上機母艦'];
        char_set.ship_rank = types[_level1.SYS_ship_data[_level2.get_eventbonus_ship_id - 1].api_stype - 1];
        char_set.ship_name = _level2.get_eventbonus_ship_name;
        char_set.ship_talk = _level2.get_eventbonus_ship_getmes;
        char_set.isVoice = true;
      } else {
        if (_level2.get_eventflag == 2) {
          char_set.ship_master_id = _level2.get_eventbonus_slotitem_id;
          char_set.ship_rank = '';
          char_set.ship_name = '';
          char_set.ship_talk = _level2.get_eventbonus_slotitem_name + 'を手に入れました。';
          char_set.isVoice = false;
        } else {
          if (_level2.get_eventflag == 1) {
            char_set.ship_master_id = _level2.get_eventbonus_material_id;
            char_set.ship_rank = '';
            char_set.ship_name = '';
            char_set.ship_talk = ['燃料', '弾薬', '鋼材', 'ボーキサイト', '高速建造', '高速修復', '開発資材'][_level2.get_eventbonus_material_id - 1] + 'を' + _level2.get_eventbonus_material_value + '手に入れました。';
            char_set.isVoice = false;
          } else {
            if (_level2.get_eventflag == 99) {
              char_set.ship_master_id = _level2.get_eventbonus_multiitems_id[0];
              char_set.ship_rank = '';
              char_set.ship_name = '';
              char_set.ship_talk = _level2.get_eventbonus_multiitems_name[0] + 'を手に入れました。';
              char_set.isVoice = false;
            } else {
              _parent.play();
              gotoAndStop(1);
            }
          }
        }
      }
    }

    instance char_set of movieClip 1858  {
    }

    frame 33 {
      stop();
    }

    frame 34 {
      i = 0;
      while (i < starnum) {
        (eval('new_star' + i)).removeMovieClip();
        ++i;
      }
    }

    frame 38 {
      textf.removeMovieClip();
      char_set.removeMovieClip();
    }

    frame 46 {
      if (_level2.get_eventflag != 99 || _level2.get_eventbonus_multiitems_id[1] == undefined) {
        gotoAndPlay('finish');
      } else {
        cnt = 1;
      }
    }

    frame 47 {
      getch.gotoAndStop(_level2.get_eventbonus_multiitems_type[cnt]);
      getch.getch.gotoAndStop(_level2.get_eventbonus_multiitems_id[cnt]);
    }

    frame 56 {
      i = 0;
      while (i < starnum) {
        var param = {'x': 0, 'y': -160 + random(100)};
        star.duplicateMovieClip('new_star' + i, i, param);
        ++i;
      }
    }

    instance star of movieClip 1814  {

      onClipEvent (load) {
        function dsetup() {
          startx = random(760) + 20;
          _x = startx;
          _y = random(260) - 280;
          spd = random(40) / 10 + 2;
          rspd = (random(10) + 1) / 10;
          size = random(60) + 20;
          _xscale = size;
          _yscale = size;
          haba = random(30);
          _rotation = 0;
          rad = 0;
          radspd = (random(100) + 1) / 1000;
        }

        dsetup();
      }

      onClipEvent (enterFrame) {
        _rotation = _rotation + rspd;
        _x = startx + haba * Math.sin(rad);
        _y = _y + spd;
        rad += radspd;
        if (_y > 500) {
          dsetup();
        }
      }
    }

    frame 69 {
      dd = _level2.getNextHighestDepth();
      textf.swapDepths(dd + 1);
      char_set.swapDepths(dd + 2);
      char_set.ship_master_id = _level2.get_eventbonus_multiitems_id[cnt];
      char_set.ship_rank = '';
      char_set.ship_name = '';
      char_set.ship_talk = _level2.get_eventbonus_multiitems_name[cnt] + 'を手に入れました。';
      char_set.isVoice = false;
    }

    instance char_set of movieClip 1858  {
    }

    frame 71 {
      stop();
    }

    frame 72 {
      i = 0;
      while (i < starnum) {
        (eval('new_star' + i)).removeMovieClip();
        ++i;
      }
    }

    frame 76 {
      textf.removeMovieClip();
      char_set.removeMovieClip();
    }

    frame 84 {
      if (cnt >= _level2.get_eventbonus_multiitems_id.length - 1) {
        gotoAndPlay('finish');
      } else {
        ++cnt;
        gotoAndPlay('multiitem');
      }
    }

    frame 106 {
      _level2.bgm.gotoAndPlay('stop');
      _parent.play();
    }
  }

  movieClip 1860  {
  }

  movieClip 1905  {

    frame 1 {
      stop();
    }
  }

  movieClip 1916  {

    frame 1 {
      stop();
    }
  }

  movieClip 1917  {

    frame 1 {
      i = 0;
      imaxmax = 80;
      imax = random(imaxmax);
      rotspd = random(4) - 2;
      play();
    }

    frame 2 {
      play();
    }

    frame 3 {
      ++i;
      if (i < imax) {
        gotoAndPlay(2);
      } else {
        i = 0;
        imax = random(imaxmax);
        rotspd = random(4) - 2;
        play();
      }
    }

    frame 4 {
      sparkle._xscale = 20;
      sparkle._yscale = 20;
      play();
    }

    frame 5 {
      sparkle._rotation += rotspd;
      sparkle._xscale = 47;
      sparkle._yscale = 47;
      play();
    }

    frame 6 {
      sparkle._rotation += rotspd;
      sparkle._xscale = 74;
      sparkle._yscale = 74;
      play();
    }

    frame 7 {
      sparkle._rotation += rotspd;
      sparkle._xscale = 100;
      sparkle._yscale = 100;
      play();
    }

    frame 8 {
      sparkle._rotation += rotspd;
      sparkle._xscale = 83;
      sparkle._yscale = 83;
      play();
    }

    frame 9 {
      sparkle._rotation += rotspd;
      sparkle._xscale = 67;
      sparkle._yscale = 67;
      play();
    }

    frame 10 {
      sparkle._rotation += rotspd;
      sparkle._xscale = 50;
      sparkle._yscale = 50;
      play();
    }

    frame 11 {
      sparkle._rotation += rotspd;
      sparkle._xscale = 33;
      sparkle._yscale = 33;
      play();
    }

    frame 12 {
      sparkle._rotation += rotspd;
      sparkle._xscale = 16;
      sparkle._yscale = 16;
      play();
    }

    frame 13 {
      gotoAndPlay(2);
      sparkle._xscale = 1;
      sparkle._yscale = 1;
    }
  }

  movieClip 1926  {

    frame 1 {
      stop();
    }
  }

  button 1927 {

    on (press) {
      play();
    }
  }

  movieClip 1929  {

    frame 1 {
      stop();
    }

    frame 22 {
      if (_level1.mapid == 3 && _level1.questpage == 2) {
        maps.gotoAndStop(17);
      } else {
        maps.gotoAndStop(_level1.mapid + 2 + 4 * _level1.questpage);
      }
      if (_level2.isEvent()) {
        txt.gotoAndStop(5);
      } else {
        if (_level1.mapid == 3) {
          txt.gotoAndStop(4);
        } else {
          txt.gotoAndStop(2);
        }
      }
    }

    frame 31 {
      roll = random(80) + 20;
      s1._xscale = roll;
      s1._yscale = roll;
      roll = random(80) + 20;
      s2._xscale = roll;
      s2._yscale = roll;
      roll = random(80) + 20;
      s3._xscale = roll;
      s3._yscale = roll;
      roll = random(80) + 20;
      s4._xscale = roll;
      s4._yscale = roll;
      roll = random(80) + 20;
      s5._xscale = roll;
      s5._yscale = roll;
      roll = random(80) + 20;
      s6._xscale = roll;
      s6._yscale = roll;
      roll = random(80) + 20;
      s7._xscale = roll;
      s7._yscale = roll;
      roll = random(80) + 20;
      s8._xscale = roll;
      s8._yscale = roll;
      roll = random(80) + 20;
      s9._xscale = roll;
      s9._yscale = roll;
      roll = random(80) + 20;
      s10._xscale = roll;
      s10._yscale = roll;
      roll = random(80) + 20;
      s11._xscale = roll;
      s11._yscale = roll;
      roll = random(80) + 20;
      s12._xscale = roll;
      s12._yscale = roll;
      roll = random(80) + 20;
      s13._xscale = roll;
      s13._yscale = roll;
      roll = random(80) + 20;
      s14._xscale = roll;
      s14._yscale = roll;
      _level2.playSFX('se_maoudamashii_onepoint07');
    }

    frame 37 {
      if (_level1.mapid != 3) {
        area._visible = false;
      } else {
        switch (_level1.questpage) {
          case 0:
            break;
          case 1:
            area.gotoAndStop(2);
            break;
          case 2:
            area.gotoAndStop(4);
            break;
          case 3:
            area.gotoAndStop(4);
            break;
          default:
            area._visible = false;
        }
      }
    }

    frame 48 {
      if (_level1.mapid != 3) {
        area2._visible = false;
      } else {
        switch (_level1.questpage) {
          case 0:
            break;
          case 1:
            area2.gotoAndStop(2);
            break;
          case 2:
            area2.gotoAndStop(4);
            break;
          case 3:
            area2.gotoAndStop(4);
            break;
          default:
            area2._visible = false;
        }
      }
    }

    frame 62 {
      if (_level1.mapid != 3 || _level1.questpage != 1) {
        gotoAndPlay('normal_unlock');
      }
    }

    frame 110 {
      maps.gotoAndStop(_level1.mapid + 2 + 4 * (_level1.questpage + 1));
      txt.gotoAndStop(4);
    }

    frame 119 {
      _level2.playSFX('se_maoudamashii_onepoint07');
    }

    frame 125 {
      area.gotoAndStop(3);
    }

    frame 136 {
      area2.gotoAndStop(3);
    }

    frame 148 {
      if (_level1.mapid != 3 || _level1.questpage != 1) {
        if (_level1.mapid == 3 && _level1.questpage == 2) {
          maps.gotoAndStop(17);
        } else {
          maps.gotoAndStop(_level1.mapid + 2 + 4 * _level1.questpage);
        }
        if (_level2.isEvent()) {
          txt.gotoAndStop(5);
        } else {
          if (_level1.mapid == 3) {
            txt.gotoAndStop(4);
          } else {
            txt.gotoAndStop(2);
          }
        }
        if (_level1.mapid != 3) {
          area._visible = false;
        } else {
          switch (_level1.questpage) {
            case 0:
              break;
            case 1:
              area.gotoAndStop(2);
              break;
            case 2:
              area.gotoAndStop(4);
              break;
            case 3:
              area.gotoAndStop(4);
              break;
            default:
              area._visible = false;
          }
        }
      }
    }

    frame 149 {
      stop();
    }

    frame 164 {
      _level2.play();
      stop();
    }
  }

  movieClip 1932  {
  }

  movieClip 1935  {
  }

  movieClip 1936  {

    frame 1 {
      _level2.tstrace('---');
      stop();
    }

    frame 2 {
      _level2.tstrace('aaa');
    }

    frame 29 {
      _level2.tstrace('bbb');
    }

    frame 190 {
      stop();
    }

    frame 205 {
      _level2.play();
      stop();
    }
  }

  frame 831 {
    if (_level2.first_clear == 1 && (_level1.mapid != 2 || _level1.questpage != 4)) {
      if (isEvent() && _level1.mapid == 2) {
        event_clear.play();
      } else {
        newmap.play();
      }
      stop();
    } else {
      play();
    }
  }

  frame 832 {
    stop();
  }

  movieClip 1938  {

    frame 2 {
      tr_obj = new LoadVars();
      recv1_obj = new LoadVars();
      recv2_obj = new LoadVars();
      recv3_obj = new LoadVars();
      lop = new Object();
      recv1_obj.onLoad = function (success) {
        if (success) {
          recv1 = _level2.result_act.recv1_obj.svdata;
          if (recv1 == undefined) {
            _level2.tstrace('Load error: recv1 is undefined');
            _level1.err_id = 1001;
            _level1.err_mes = 'Load error: data from server undefined for api_get_member/ship2';
            _level1.err_from = '戦闘結果';
            _level1.gotoAndPlay('sys_err2');
            _level2.gotoAndStop('prebattle');
          }
          delete _level2.result_act.lop;
          _level2.result_act.lop = new Object();
          _level2.result_act.lop = JSON.parse(recv1);
          if (_level2.result_act.lop == undefined) {
            _level2.tstrace('Load error: could not parse recv');
            _level1.err_id = 1002;
            _level1.err_mes = 'Load error: could not parse data from server for api_get_member/ship2';
            _level1.err_from = '戦闘結果';
            _level1.gotoAndPlay('sys_err2');
            _level2.gotoAndStop('prebattle');
          } else {
            _level2.result_act.gotoAndStop('suc');
          }
        } else {
          _level2.tstrace('receive error for recv1_obj');
          _level2.err_id = 1000;
          _level2.err_from = '戦闘結果';
          _level1.err_mes = 'Receive error: api_get_member/ship2';
          _level1.gotoAndPlay('sys_err1');
          _level2.gotoAndStop('prebattle');
        }
      };

      recv2_obj.onLoad = function (success) {
        if (success) {
          recv2 = _level2.result_act.recv2_obj.svdata;
          if (recv2 == undefined) {
            _level2.tstrace('Load error: recv2 is undefined');
            _level1.err_id = 1001;
            _level1.err_mes = 'Load error: data from server undefined for api_get_member/slotitem';
            _level1.err_from = '戦闘結果';
            _level1.gotoAndPlay('sys_err2');
            _level2.gotoAndStop('prebattle');
          }
          delete _level2.result_act.lop;
          _level2.result_act.lop = new Object();
          _level2.result_act.lop = JSON.parse(recv2);
          if (_level2.result_act.lop == undefined) {
            _level2.tstrace('Load error: could not parse recv');
            _level1.err_id = 1002;
            _level1.err_mes = 'Load error: could not parse data from server for api_get_member/slotitem';
            _level1.err_from = '戦闘結果';
            _level1.gotoAndPlay('sys_err2');
            _level2.gotoAndStop('prebattle');
          } else {
            _level2.result_act.gotoAndStop('suc2');
          }
        } else {
          _level2.tstrace('receive error for recv2_obj');
          _level2.err_id = 1000;
          _level2.err_from = '戦闘結果';
          _level1.err_mes = 'Receive error: api_get_member/slotitem';
          _level1.gotoAndPlay('sys_err1');
          _level2.gotoAndStop('prebattle');
        }
      };

      recv3_obj.onLoad = function (success) {
        if (success) {
          recv3 = _level2.result_act.recv3_obj.svdata;
          if (recv3 == undefined) {
            _level2.tstrace('Load error: recv3 is undefined');
            _level1.err_id = 1001;
            _level1.err_mes = 'Load error: data from server undefined for api_get_member/deck';
            _level1.err_from = '戦闘結果';
            _level1.gotoAndPlay('sys_err2');
            _level2.gotoAndStop('prebattle');
          }
          delete _level2.result_act.lop;
          _level2.result_act.lop = new Object();
          _level2.result_act.lop = JSON.parse(recv3);
          if (_level2.result_act.lop == undefined) {
            _level2.tstrace('Load error: could not parse recv');
            _level1.err_id = 1002;
            _level1.err_mes = 'Load error: could not parse data from server for api_get_member/deck';
            _level1.err_from = '戦闘結果';
            _level1.gotoAndPlay('sys_err2');
            _level2.gotoAndStop('prebattle');
          } else {
            _level2.result_act.gotoAndStop('suc3');
          }
        } else {
          _level2.tstrace('receive error for recv3_obj');
          _level2.err_id = 1000;
          _level2.err_from = '戦闘結果';
          _level1.err_mes = 'Receive error: api_get_member/deck';
          _level1.gotoAndPlay('sys_err1');
          _level2.gotoAndStop('prebattle');
        }
      };

      tr_obj.api_token = _level1.userToken;
      tr_obj.api_verno = _level1.FLA_VER;
      _level2.sortkey = 1;
      _level2.sortorder = 2;
      if (_level1.sortType == 1) {
        _level2.sortkey = 1;
        _level2.sortorder = 2;
      } else {
        if (_level1.sortType == 2) {
          _level2.sortkey = 2;
          _level2.sortorder = 2;
        } else {
          if (_level1.sortType == 3) {
            _level2.sortkey = 3;
            _level2.sortorder = 2;
          } else {
            if (_level1.sortType == 4) {
              _level2.sortkey = 4;
              _level2.sortorder = 2;
            } else {
              if (_level1.sortType == 5) {
                _level2.sortkey = 5;
                _level2.sortorder = 2;
              } else {
                _level2.sortkey = 1;
                _level2.sortorder = 2;
              }
            }
          }
        }
      }
      tr_obj.api_sort_key = _level2.sortkey;
      tr_obj.api_sort_order = _level2.sortorder;
      tr_obj.sendAndLoad(_level1.BASE_URL + 'api_get_member/ship2', recv1_obj, 'POST');
      stop();
    }

    frame 3 {
      if (lop.api_result == 1) {
        _level1.FULL_my_ship = lop.api_data;
        _level1.addMasterShip();
        delete tr_obj;
        tr_obj = new LoadVars();
        tr_obj.api_token = _level1.userToken;
        tr_obj.api_verno = _level1.FLA_VER;
        tr_obj.sendAndLoad(_level1.BASE_URL + 'api_get_member/slotitem', recv2_obj, 'POST');
        stop();
      } else {
        gotoAndStop('err2');
        apiurl = 'api_get_member/ship2';
      }
    }

    frame 4 {
      if (lop.api_result == 1) {
        _level1.FULL_my_item = lop.api_data;
        _level1.addMasterSlot();
        delete tr_obj;
        tr_obj = new LoadVars();
        tr_obj.api_token = _level1.userToken;
        tr_obj.api_verno = _level1.FLA_VER;
        tr_obj.sendAndLoad(_level1.BASE_URL + 'api_get_member/deck', recv3_obj, 'POST');
        stop();
      } else {
        gotoAndStop('err2');
        apiurl = 'api_get_member/slotitem';
      }
    }

    frame 5 {
      if (lop.api_result == 1) {
        _level1.myDeck = lop.api_data;
        _level2.play();
        stop();
      } else {
        gotoAndStop('err2');
        apiurl = 'api_get_member/deck';
      }
    }

    frame 6 {
      _level2.tstrace('load error');
      _level1.err_id = lop.api_result;
      _level1.err_mes = 'Load error: ' + lop.api_result_msg + '(' + apiurl + ')';
      _level1.err_from = '戦闘結果';
      _level1.gotoAndPlay('sys_err2');
      _level2.gotoAndStop('prebattle');
    }
  }

  frame 833 {
    if (!_level1.npc_battle) {
      _level1.gotoAndPlay('shutter_open_dark');
      _level1.scene = _level1.SCENE_MAIN;
      gotoAndStop('prebattle');
    } else {
      if (_level1.getCondition(_level2.nowhps[1], _level2.maxhps[1]) > 3) {
        gotoAndPlay('kikan_taiha');
      } else {
        _level1.gotoAndPlay('finished_mission');
        gotoAndStop('prebattle');
      }
    }
  }

  frame 834 {
    if (_level1.cutin.mapInfo.api_next == 0) {
      _global.PORT.gotoAndPlay('setup_finish');
      gotoAndStop('prebattle');
    } else {
      _level2.ldr1.loadClip(_global.CONSTANTS.DEFAULT_BASE_URL_GRAPHIC + 'ships/' + _level2.flagShip + '.swf?VERSION=' + _level1.SYS_ship_pos[_level1.getPosID(_level2.flagShip)].api_version, kikan.ship);
      _level2.ldr1.addListener(_level2.lsnr1);
      _level2.lsnr1.onLoadInit = function () {
        _level2.tstrace('Loading character ' + _level2.flagShip + ' artwork');
        kikan.ship.gotoAndStop(11);
        kikan.ship._x = _level1.SYS_ship_pos[_level1.getPosID(_level2.flagShip)].api_battle_d[0];
        kikan.ship._y = _level1.SYS_ship_pos[_level1.getPosID(_level2.flagShip)].api_battle_d[1];
        _level2.ldr1.removeListener(_level2.lsnr1);
      };

      _level2.lsnr1.onLoadError = function () {
        _level2.tstrace('Failed to load character ' + _level2.flagShip + ' artwork');
        kikan.attachMovie('nodatachar', 'ship', 1);
        kikan.ship._x = 440;
        kikan.ship._y = 810;
        _level2.ldr1.removeListener(_level2.lsnr1);
      };

    }
  }

  movieClip 1940  {
  }

  frame 846 {
    _level2.playBGM('kikangekiha_haiboku1', false, _level1.bgmVolume);
  }

  movieClip 1943  {
  }

  frame 867 {
    _level2.playVoice(_level2.flagShip, 20);
  }

  movieClip 1946  {
  }

  movieClip 1949  {
  }

  movieClip 1952  {
  }

  movieClip 1953  {

    frame 2 {
      gotoAndPlay(3 + random(17));
    }

    frame 55 {
      gotoAndPlay(1);
    }
  }

  movieClip 1956  {
  }

  movieClip 1962  {
  }

  movieClip 1965  {

    instance of movieClip 1962  {

      onClipEvent (enterFrame) {
        _xscale = 100;
        _yscale = 100;
        _x = 0;
        _y = 0;
        _rotation = _rotation + 0.7;
      }
    }
  }

  button 1966 {

    on (press) {
      _parent.play();
    }
  }

  movieClip 1967  {

    frame 1 {
      deck = '「' + _level2.userinfo_f[3] + '」旗艦';
      ship = '「' + _level2.ship_f[1] + '」が大破しました。';
      msg = '残念ですが進撃は困難です...母港に帰投します。';
      disp = '';
      disps = '';
    }

    frame 8 {
      if (ship != '') {
        tmpchr = substring(ship, 1, 1);
        ship = substring(ship, 2, 1000);
        disps += tmpchr;
        gotoAndPlay('ship_loop');
      }
    }

    frame 13 {
      if (msg != '') {
        tmpchr = substring(msg, 1, 1);
        msg = substring(msg, 2, 1000);
        disp += tmpchr;
        gotoAndPlay('mes_loop');
      }
    }

    frame 15 {
      stop();
    }
  }

  frame 897 {
    stop();
  }

  frame 898 {
    _global.PORT.gotoAndPlay('setup_finish');
    gotoAndStop('prebattle');
  }

  frame 899 {
    stop();
    txt1.text = _level2.err_from + '画面で通信エラーが起きました' + '\n' + _level2.err_mes + '(' + _level2.err_id + ')';
  }

  frame 901 {
    stop();
    txt1.text = _level2.err_from + '画面でエラーが起きました' + '\n' + _level2.err_mes + '(' + _level2.err_id + ')';
  }
}
